package contract

import (
	"bytes"
	"context"
	"errors"
	"fmt"
	"math/big"
	"strings"

	sdk "github.com/cosmos/cosmos-sdk/types"
	sdkerrors "github.com/cosmos/cosmos-sdk/types/errors"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/common/hexutil"
	"github.com/ethereum/go-ethereum/core/vm"
	"github.com/ethereum/go-ethereum/crypto"
	evmtypes "github.com/evmos/ethermint/x/evm/types"
)

const (
	ERC20LogicAddress    = "0x0000000000000000000000000000000000001001"
	WPUNDIAILogicAddress = "0x0000000000000000000000000000000000001002"

	StakingAddress         = "0x0000000000000000000000000000000000001003"
	CrosschainAddress      = "0x0000000000000000000000000000000000001004"
	BridgeFeeAddress       = "0x0000000000000000000000000000000000001005"
	BridgeFeeOracleAddress = "0x0000000000000000000000000000000000001006"
	BankAddress            = "0x0000000000000000000000000000000000001007"
	AccessControlAddress   = "0x0000000000000000000000000000000000001008"
)

const DefaultGasCap uint64 = 30000000

// TransferModuleRole is keccak256("TRANSFER_MODULE_ROLE")
const TransferModuleRole = "0x4845f2571489e4ee59e15b11b74598e4330ef896ebb57513ebdbdb3b260a4671"

var (
	erc20Init = Contract{
		Address: common.HexToAddress(ERC20LogicAddress),
		ABI:     MustABIJson(ERC20UpgradableMetaData.ABI),
		Bin:     MustDecodeHex(ERC20UpgradableMetaData.Bin),
		// deploy code from solidity/contracts/token/ERC20Upgradable.sol
		Code: MustDecodeHex(""),
	}
	wpundiaiInit = Contract{
		Address: common.HexToAddress(WPUNDIAILogicAddress),
		ABI:     MustABIJson(WarpTokenUpgradableMetaData.ABI),
		Bin:     MustDecodeHex(WarpTokenUpgradableMetaData.Bin),
		// deploy code from solidity/contracts/token/WarpTokenUpgradable.sol
		Code: MustDecodeHex("0x60806040526004361061014f5760003560e01c8063715018a6116100b6578063b86d52981161006f578063b86d5298146103bc578063d0e30db01461015e578063dd62ed3e146103da578063de7ea79d14610420578063f2fde38b14610440578063f3fef3a3146104605761015e565b8063715018a61461030057806379cc6790146103155780638da5cb5b1461033557806395d89b41146103675780639dc29fac1461037c578063a9059cbb1461039c5761015e565b80633659cfe6116101085780633659cfe61461024257806340c10f191461026257806342966c68146102825780634f1ef286146102a257806352d1902d146102b557806370a08231146102ca5761015e565b806306fdde0314610166578063095ea7b31461019157806318160ddd146101c157806323b872dd146101e05780632e1a7d4d14610200578063313ce567146102205761015e565b3661015e5761015c610480565b005b61015c610480565b34801561017257600080fd5b5061017b6104c1565b604051610188919061161f565b60405180910390f35b34801561019d57600080fd5b506101b16101ac366004611667565b610553565b6040519015158152602001610188565b3480156101cd57600080fd5b5060cc545b604051908152602001610188565b3480156101ec57600080fd5b506101b16101fb366004611693565b6105a9565b34801561020c57600080fd5b5061015c61021b3660046116d4565b6105cd565b34801561022c57600080fd5b5060cb5460405160ff9091168152602001610188565b34801561024e57600080fd5b5061015c61025d3660046116ed565b61063e565b34801561026e57600080fd5b5061015c61027d366004611667565b610727565b34801561028e57600080fd5b5061015c61029d3660046116d4565b61073d565b61015c6102b0366004611796565b610746565b3480156102c157600080fd5b506101d2610813565b3480156102d657600080fd5b506101d26102e53660046116ed565b6001600160a01b0316600090815260cd602052604090205490565b34801561030c57600080fd5b5061015c6108c6565b34801561032157600080fd5b5061015c610330366004611667565b6108da565b34801561034157600080fd5b506097546001600160a01b03165b6040516001600160a01b039091168152602001610188565b34801561037357600080fd5b5061017b6108ef565b34801561038857600080fd5b5061015c610397366004611667565b6108fe565b3480156103a857600080fd5b506101b16103b7366004611667565b610906565b3480156103c857600080fd5b5060cf546001600160a01b031661034f565b3480156103e657600080fd5b506101d26103f53660046117fa565b6001600160a01b03918216600090815260ce6020908152604080832093909416825291909152205490565b34801561042c57600080fd5b5061015c61043b366004611853565b61091c565b34801561044c57600080fd5b5061015c61045b3660046116ed565b610a8b565b34801561046c57600080fd5b5061015c61047b366004611667565b610b01565b61048a3334610b86565b60405134815233907fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c9060200160405180910390a2565b606060c980546104d0906118e2565b80601f01602080910402602001604051908101604052809291908181526020018280546104fc906118e2565b80156105495780601f1061051e57610100808354040283529160200191610549565b820191906000526020600020905b81548152906001019060200180831161052c57829003601f168201915b5050505050905090565b6000610560338484610c5e565b6040518281526001600160a01b0384169033907f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259060200160405180910390a350600192915050565b6000336105b7858285610ce0565b6105c2858585610d72565b506001949350505050565b6105d8335b82610f21565b604051339082156108fc029083906000818181858888f19350505050158015610605573d6000803e3d6000fd5b5060405181815233907f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a94243649060200160405180910390a250565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000010021614156106905760405162461bcd60e51b81526004016106879061191d565b60405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000010026001600160a01b03166106d9600080516020611a7b833981519152546001600160a01b031690565b6001600160a01b0316146106ff5760405162461bcd60e51b815260040161068790611969565b61070881611063565b604080516000808252602082019092526107249183919061106b565b50565b61072f6111db565b6107398282610b86565b5050565b610724336105d2565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000100216141561078f5760405162461bcd60e51b81526004016106879061191d565b7f00000000000000000000000000000000000000000000000000000000000010026001600160a01b03166107d8600080516020611a7b833981519152546001600160a01b031690565b6001600160a01b0316146107fe5760405162461bcd60e51b815260040161068790611969565b61080782611063565b6107398282600161106b565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000100216146108b35760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c00000000000000006064820152608401610687565b50600080516020611a7b83398151915290565b6108ce6111db565b6108d86000611235565b565b6108e5823383610ce0565b6107398282610f21565b606060ca80546104d0906118e2565b6108e56111db565b6000610913338484610d72565b50600192915050565b600054610100900460ff161580801561093c5750600054600160ff909116105b806109565750303b158015610956575060005460ff166001145b6109b95760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610687565b6000805460ff1916600117905580156109dc576000805461ff0019166101001790555b84516109ef9060c990602088019061155a565b508351610a039060ca90602087019061155a565b5060cb805460ff191660ff851617905560cf80546001600160a01b0319166001600160a01b038416179055610a36611287565b610a3e6112b6565b8015610a84576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050505050565b610a936111db565b6001600160a01b038116610af85760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610687565b61072481611235565b610b0a336105d2565b6040516001600160a01b0383169082156108fc029083906000818181858888f19350505050158015610b40573d6000803e3d6000fd5b506040518181526001600160a01b0383169033907f9b1bfa7fa9ee420a16e124f794c35ac9f90472acc99140eb2f6447c714cad8eb906020015b60405180910390a35050565b6001600160a01b038216610bdc5760405162461bcd60e51b815260206004820152601860248201527f6d696e7420746f20746865207a65726f206164647265737300000000000000006044820152606401610687565b8060cc6000828254610bee91906119cb565b90915550506001600160a01b038216600090815260cd602052604081208054839290610c1b9084906119cb565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001610b7a565b6001600160a01b038316610cb45760405162461bcd60e51b815260206004820152601d60248201527f617070726f76652066726f6d20746865207a65726f20616464726573730000006044820152606401610687565b6001600160a01b03928316600090815260ce602090815260408083209490951682529290925291902055565b6001600160a01b03808416600090815260ce60209081526040808320938616835292905220546000198114610d6c5781811015610d5f5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610687565b610d6c8484848403610c5e565b50505050565b6001600160a01b038316610dc85760405162461bcd60e51b815260206004820152601e60248201527f7472616e736665722066726f6d20746865207a65726f206164647265737300006044820152606401610687565b6001600160a01b038216610e1e5760405162461bcd60e51b815260206004820152601c60248201527f7472616e7366657220746f20746865207a65726f2061646472657373000000006044820152606401610687565b6001600160a01b038316600090815260cd602052604090205481811015610e875760405162461bcd60e51b815260206004820152601f60248201527f7472616e7366657220616d6f756e7420657863656564732062616c616e6365006044820152606401610687565b610e9182826119e3565b6001600160a01b03808616600090815260cd60205260408082209390935590851681529081208054849290610ec79084906119cb565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610f1391815260200190565b60405180910390a350505050565b6001600160a01b038216610f775760405162461bcd60e51b815260206004820152601a60248201527f6275726e2066726f6d20746865207a65726f20616464726573730000000000006044820152606401610687565b6001600160a01b038216600090815260cd602052604090205481811015610fe05760405162461bcd60e51b815260206004820152601b60248201527f6275726e20616d6f756e7420657863656564732062616c616e636500000000006044820152606401610687565b610fea82826119e3565b6001600160a01b038416600090815260cd602052604081209190915560cc80548492906110189084906119e3565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3505050565b6107246111db565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff16156110a35761109e836112dd565b505050565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa9250505080156110fd575060408051601f3d908101601f191682019092526110fa918101906119fa565b60015b6111605760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b6064820152608401610687565b600080516020611a7b83398151915281146111cf5760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b6064820152608401610687565b5061109e838383611379565b6097546001600160a01b031633146108d85760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610687565b609780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff166112ae5760405162461bcd60e51b815260040161068790611a13565b6108d861139e565b600054610100900460ff166108d85760405162461bcd60e51b815260040161068790611a13565b6001600160a01b0381163b61134a5760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608401610687565b600080516020611a7b83398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b611382836113ce565b60008251118061138f5750805b1561109e57610d6c838361140e565b600054610100900460ff166113c55760405162461bcd60e51b815260040161068790611a13565b6108d833611235565b6113d7816112dd565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606114338383604051806060016040528060278152602001611a9b6027913961143a565b9392505050565b6060600080856001600160a01b0316856040516114579190611a5e565b600060405180830381855af49150503d8060008114611492576040519150601f19603f3d011682016040523d82523d6000602084013e611497565b606091505b50915091506114a8868383876114b2565b9695505050505050565b6060831561151e578251611517576001600160a01b0385163b6115175760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610687565b5081611528565b6115288383611530565b949350505050565b8151156115405781518083602001fd5b8060405162461bcd60e51b8152600401610687919061161f565b828054611566906118e2565b90600052602060002090601f01602090048101928261158857600085556115ce565b82601f106115a157805160ff19168380011785556115ce565b828001600101855582156115ce579182015b828111156115ce5782518255916020019190600101906115b3565b506115da9291506115de565b5090565b5b808211156115da57600081556001016115df565b60005b8381101561160e5781810151838201526020016115f6565b83811115610d6c5750506000910152565b602081526000825180602084015261163e8160408501602087016115f3565b601f01601f19169190910160400192915050565b6001600160a01b038116811461072457600080fd5b6000806040838503121561167a57600080fd5b823561168581611652565b946020939093013593505050565b6000806000606084860312156116a857600080fd5b83356116b381611652565b925060208401356116c381611652565b929592945050506040919091013590565b6000602082840312156116e657600080fd5b5035919050565b6000602082840312156116ff57600080fd5b813561143381611652565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff8084111561173b5761173b61170a565b604051601f8501601f19908116603f011681019082821181831017156117635761176361170a565b8160405280935085815286868601111561177c57600080fd5b858560208301376000602087830101525050509392505050565b600080604083850312156117a957600080fd5b82356117b481611652565b9150602083013567ffffffffffffffff8111156117d057600080fd5b8301601f810185136117e157600080fd5b6117f085823560208401611720565b9150509250929050565b6000806040838503121561180d57600080fd5b823561181881611652565b9150602083013561182881611652565b809150509250929050565b600082601f83011261184457600080fd5b61143383833560208501611720565b6000806000806080858703121561186957600080fd5b843567ffffffffffffffff8082111561188157600080fd5b61188d88838901611833565b955060208701359150808211156118a357600080fd5b506118b087828801611833565b935050604085013560ff811681146118c757600080fd5b915060608501356118d781611652565b939692955090935050565b600181811c908216806118f657607f821691505b6020821081141561191757634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b600082198211156119de576119de6119b5565b500190565b6000828210156119f5576119f56119b5565b500390565b600060208284031215611a0c57600080fd5b5051919050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60008251611a708184602087016115f3565b919091019291505056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a264697066735822122028fec7582786fbf176e212f9db246ec5eff003a785551a5f26e94f7f1e8e3e3864736f6c634300080a0033"),
	}

	erc1967Proxy = Contract{
		Address: common.Address{},
		ABI:     MustABIJson(ERC1967ProxyMetaData.ABI),
		Bin:     MustDecodeHex(ERC1967ProxyMetaData.Bin),
		Code:    []byte{},
	}

	bridgeProxy = Contract{
		Address: common.Address{},
		ABI:     MustABIJson(BridgeProxyMetaData.ABI),
		Bin:     MustDecodeHex(BridgeProxyMetaData.Bin),
		// deploy code from solidity/contracts/bridge/BridgeProxy.sol
		Code: MustDecodeHex("0x6080604052600436106100225760003560e01c806319ab453c1461003957610031565b366100315761002f610059565b005b61002f610059565b34801561004557600080fd5b5061002f61005436600461021e565b61006b565b6100696100646100d0565b610108565b565b600061009e7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b6001600160a01b0316146100c45760405162dc149f60e41b815260040160405180910390fd5b6100cd8161012c565b50565b60006101037f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b905090565b3660008037600080366000845af43d6000803e808015610127573d6000f35b3d6000fd5b6101358161016c565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b6001600160a01b0381163b6101dd5760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b606482015260840160405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80546001600160a01b0319166001600160a01b0392909216919091179055565b60006020828403121561023057600080fd5b81356001600160a01b038116811461024757600080fd5b939250505056fea2646970667358221220f5fd2c6b493d2d8c8fccb10ef0e5ed3a7f4f1914bae22833db4f76dbce6da4fe64736f6c634300080a0033"),
	}

	bridgeFeeQuote = Contract{
		Address: common.Address{},
		ABI:     MustABIJson(BridgeFeeQuoteMetaData.ABI),
		Bin:     MustDecodeHex(BridgeFeeQuoteMetaData.Bin),
		Code:    []byte{},
	}

	bridgeFeeOracle = Contract{
		Address: common.Address{},
		ABI:     MustABIJson(BridgeFeeOracleMetaData.ABI),
		Bin:     MustDecodeHex(BridgeFeeOracleMetaData.Bin),
		Code:    []byte{},
	}

	accessControl = Contract{
		Address: common.Address{},
		ABI:     MustABIJson(AccessControlMetaData.ABI),
		Bin:     MustDecodeHex(AccessControlMetaData.Bin),
		Code:    []byte{},
	}

	fxBridgeABI          = MustABIJson(IFxBridgeLogicMetaData.ABI)
	bridgeCallContextABI = MustABIJson(IBridgeCallContextMetaData.ABI)
	errorABI             = MustABIJson(IErrorMetaData.ABI)
)

type Caller interface {
	QueryContract(ctx context.Context, from, contract common.Address, abi abi.ABI, method string, res interface{}, args ...interface{}) error
	ApplyContract(ctx context.Context, from, contract common.Address, value *big.Int, abi abi.ABI, method string, args ...interface{}) (*evmtypes.MsgEthereumTxResponse, error)
	ExecuteEVM(ctx sdk.Context, from common.Address, contract *common.Address, value *big.Int, gasLimit uint64, data []byte) (*evmtypes.MsgEthereumTxResponse, error)
	Precompile(ctx sdk.Context, addr common.Address) (vm.PrecompiledContract, bool)
}

type BridgeDenoms struct {
	ChainName common.Hash
	Denoms    []common.Hash
}

type Contract struct {
	Address common.Address
	ABI     abi.ABI
	Bin     []byte
	Code    []byte
}

func (c Contract) CodeHash() common.Hash {
	return crypto.Keccak256Hash(c.Code)
}

func GetERC20() Contract {
	return erc20Init
}

func GetWPUNDIAI() Contract {
	return wpundiaiInit
}

func GetERC1967Proxy() Contract {
	return erc1967Proxy
}

func GetBridgeProxy() Contract {
	return bridgeProxy
}

func GetBridgeFeeQuote() Contract {
	return bridgeFeeQuote
}

func GetBridgeFeeOracle() Contract {
	return bridgeFeeOracle
}

func GetAccessControl() Contract {
	return accessControl
}

func MustDecodeHex(str string) []byte {
	bz, err := hexutil.Decode(str)
	if err != nil {
		panic(err)
	}
	return bz
}

func MustABIJson(str string) abi.ABI {
	j, err := abi.JSON(strings.NewReader(str))
	if err != nil {
		panic(err)
	}
	return j
}

func PackRetErrV2(err error) ([]byte, error) {
	pack, _ := errorABI.Pack("Error", err.Error())
	return pack, err
}

func PackOnBridgeCall(sender, receiver common.Address, tokens []common.Address, amounts []*big.Int, data, memo []byte) ([]byte, error) {
	return bridgeCallContextABI.Pack("onBridgeCall",
		sender,
		receiver,
		tokens,
		amounts,
		data,
		memo,
	)
}

func PackOnRevert(nonce *big.Int, cause []byte) ([]byte, error) {
	return bridgeCallContextABI.Pack("onRevert",
		nonce,
		cause,
	)
}

func PackOracleSetCheckpoint(gravityID, methodName [32]byte, nonce *big.Int, memberAddresses []common.Address, convertedPowers []*big.Int) ([]byte, error) {
	return fxBridgeABI.Pack("oracleSetCheckpoint",
		gravityID,
		methodName,
		nonce,
		memberAddresses,
		convertedPowers,
	)
}

func PackSubmitBatchCheckpoint(gravityID, methodName [32]byte, amounts []*big.Int, destinations []common.Address, fees []*big.Int, batchNonce *big.Int, tokenContract common.Address, batchTimeout *big.Int, feeReceive common.Address) ([]byte, error) {
	return fxBridgeABI.Pack("submitBatchCheckpoint",
		gravityID,
		methodName,
		amounts,
		destinations,
		fees,
		batchNonce,
		tokenContract,
		batchTimeout,
		feeReceive,
	)
}

func PackBridgeCallCheckpoint(gravityID, methodName [32]byte, nonce *big.Int, input *FxBridgeBaseBridgeCallData) ([]byte, error) {
	return fxBridgeABI.Pack("bridgeCallCheckpoint",
		gravityID,
		methodName,
		nonce,
		input,
	)
}

func unpackRetIsOk(abi abi.ABI, method string, res *evmtypes.MsgEthereumTxResponse) (*evmtypes.MsgEthereumTxResponse, error) {
	var ret struct{ Value bool }
	if err := abi.UnpackIntoInterface(&ret, method, res.Ret); err != nil {
		return res, sdkerrors.ErrInvalidType.Wrapf("failed to unpack %s: %s", method, err.Error())
	}
	if !ret.Value {
		return res, sdkerrors.ErrLogic.Wrapf("failed to execute %s", method)
	}
	return res, nil
}

func UnpackRevertError(abi abi.ABI, ret []byte) (string, error) {
	if len(ret) < 4 {
		return "", errors.New("invalid data for unpacking")
	}
	for _, e := range abi.Errors {
		if bytes.Equal(e.ID[:4], ret[:4]) {
			if len(ret) == 4 {
				return e.Name, nil
			}
			unpack, err := e.Unpack(ret[4:])
			if err != nil {
				return "", err
			}
			return fmt.Sprintf("%s: %v", e.Name, unpack), nil
		}
	}
	return "", errors.New("invalid data for unpacking")
}
