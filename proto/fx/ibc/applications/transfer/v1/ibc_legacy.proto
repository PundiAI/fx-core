syntax = "proto3";
package fx.ibc.applications.transfer.v1;

import "cosmos/base/v1beta1/coin.proto";
import "gogoproto/gogo.proto";

option go_package = "github.com/pundiai/fx-core/v8/types/legacy";

// MsgTransfer defines a msg to transfer fungible tokens (i.e Coins) between
// ICS20 enabled chains. See ICS Spec here:
// https://github.com/cosmos/ics/tree/master/spec/ics-020-fungible-token-transfer#data-structures
message MsgTransfer {
  option deprecated = true;
  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;

  // the port on which the packet will be sent
  string source_port = 1 [ (gogoproto.moretags) = "yaml:\"source_port\"" ];
  // the channel by which the packet will be sent
  string source_channel = 2
      [ (gogoproto.moretags) = "yaml:\"source_channel\"" ];
  // the tokens to be transferred
  cosmos.base.v1beta1.Coin token = 3 [ (gogoproto.nullable) = false ];
  // the sender address
  string sender = 4;
  // the recipient address on the destination chain
  string receiver = 5;
  // Timeout height relative to the current block height.
  // The timeout is disabled when set to 0.
  Height timeout_height = 6 [
    (gogoproto.moretags) = "yaml:\"timeout_height\"",
    (gogoproto.nullable) = false
  ];
  // Timeout timestamp (in nanoseconds) relative to the current block timestamp.
  // The timeout is disabled when set to 0.
  uint64 timeout_timestamp = 7
      [ (gogoproto.moretags) = "yaml:\"timeout_timestamp\"" ];
  // the router is hook destination chain
  string router = 8;
  // the tokens to be destination fee
  cosmos.base.v1beta1.Coin fee = 9 [ (gogoproto.nullable) = false ];
  // optional memo
  string memo = 10;
}

// Height is a monotonically increasing data type
// that can be compared against another Height for the purposes of updating and
// freezing clients
//
// Normally the RevisionHeight is incremented at each height while keeping
// RevisionNumber the same. However some consensus algorithms may choose to
// reset the height in certain conditions e.g. hard forks, state-machine
// breaking changes In these cases, the RevisionNumber is incremented so that
// height continues to be monitonically increasing even as the RevisionHeight
// gets reset
message Height {
  option deprecated = true;
  option (gogoproto.goproto_getters) = true;
  option (gogoproto.goproto_stringer) = true;

  // the revision that the client is currently on
  uint64 revision_number = 1;
  // the height within the given revision
  uint64 revision_height = 2;
}