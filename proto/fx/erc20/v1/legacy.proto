syntax = "proto3";
package fx.erc20.v1;

import "cosmos/bank/v1beta1/bank.proto";
import "cosmos/base/v1beta1/coin.proto";
import "cosmos/msg/v1/msg.proto";
import "cosmos_proto/cosmos.proto";
import "fx/erc20/v1/types.proto";
import "gogoproto/gogo.proto";
import "amino/amino.proto";
import "google/protobuf/duration.proto";

option go_package = "github.com/pundiai/fx-core/x/erc20/types";

message MsgConvertERC20 {
  option deprecated = true;
  option (cosmos.msg.v1.signer) = "sender";
  option (amino.name) = "erc20/MsgConvertERC20";

  string contract_address = 1;
  string amount = 2 [
    (cosmos_proto.scalar) = "cosmos.Int",
    (gogoproto.customtype) = "cosmossdk.io/math.Int",
    (gogoproto.nullable) = false
  ];
  string receiver = 3;
  string sender = 4;
}

message MsgConvertDenom {
  option deprecated = true;
  option (cosmos.msg.v1.signer) = "sender";
  option (amino.name) = "erc20/MsgConvertDenom";

  string sender = 1;
  string receiver = 2;
  cosmos.base.v1beta1.Coin coin = 3 [ (gogoproto.nullable) = false ];
  string target = 4;
}

message MsgUpdateDenomAlias {
  option deprecated = true;
  option (cosmos.msg.v1.signer) = "authority";
  option (amino.name) = "erc20/MsgUpdateDenomAlias";

  string authority = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
  string denom = 2;
  string alias = 3;
}

message RegisterCoinProposal {
  option deprecated = true;
  option (gogoproto.equal) = false;
  string title = 1;
  string description = 2;
  cosmos.bank.v1beta1.Metadata metadata = 3 [ (gogoproto.nullable) = false ];
}

message RegisterERC20Proposal {
  option deprecated = true;
  option (gogoproto.equal) = false;
  string title = 1;
  string description = 2;
  string erc20address = 3;
  repeated string aliases = 4;
}

message ToggleTokenConversionProposal {
  option deprecated = true;
  option (gogoproto.equal) = true;
  string title = 1;
  string description = 2;
  string token = 3;
}

message UpdateDenomAliasProposal {
  option deprecated = true;
  option (gogoproto.equal) = false;
  string title = 1;
  string description = 2;
  string denom = 3;
  string alias = 4;
}

message MsgRegisterCoin {
  option deprecated = true;
  option (cosmos.msg.v1.signer) = "authority";
  option (amino.name) = "erc20/MsgRegisterCoin";

  string authority = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
  cosmos.bank.v1beta1.Metadata metadata = 2 [ (gogoproto.nullable) = false ];
}

message MsgRegisterCoinResponse {
  option deprecated = true;
  ERC20Token pair = 1 [ (gogoproto.nullable) = false ];
}

message MsgRegisterERC20 {
  option deprecated = true;
  option (cosmos.msg.v1.signer) = "authority";
  option (amino.name) = "erc20/MsgRegisterERC20";

  string authority = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
  string erc20address = 2;
  repeated string aliases = 3;
}

message MsgRegisterERC20Response {
  option deprecated = true;
  ERC20Token pair = 1 [ (gogoproto.nullable) = false ];
}

message LegacyParams {
  bool enable_erc20 = 1 [ (gogoproto.moretags) = "yaml:\"enable_erc20\"" ];
  bool enable_evm_hook = 2 [
    (gogoproto.customname) = "EnableEVMHook",
    (gogoproto.moretags) = "yaml:\"enable_evm_hook\""
  ];
  google.protobuf.Duration ibc_timeout = 3 [
    (gogoproto.stdduration) = true,
    (gogoproto.nullable) = false,
    (gogoproto.moretags) = "yaml:\"ibc_timeout\""
  ];
}
