syntax = "proto3";
package fx.gravity.crosschain.v1;

import "fx/gravity/crosschain/v1/types.proto";
import "gogoproto/gogo.proto";
import "cosmos/base/v1beta1/coin.proto";
import "cosmos/msg/v1/msg.proto";
import "cosmos_proto/cosmos.proto";
import "amino/amino.proto";

option go_package = "github.com/pundiai/fx-core/x/crosschain/types";

// Deprecated: after block 5713000
message InitCrossChainParamsProposal {
  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;
  option (gogoproto.goproto_stringer) = false;

  string title = 1;
  string description = 2;
  Params params = 3;
  string chain_name = 4;
}

// Deprecated: Do not use.
message UpdateChainOraclesProposal {
  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;
  option (gogoproto.goproto_stringer) = false;

  // the title of the update proposal
  string title = 1;
  // the description of the proposal
  string description = 2;

  repeated string oracles = 3;
  string chain_name = 4;
}

// Deprecated: after block 5713000
message MsgSetOrchestratorAddress {
  option (cosmos.msg.v1.signer) = "oracle_address";
  option (amino.name) = "crosschain/MsgSetOrchestratorAddress";

  string oracle_address = 1;
  string bridger_address = 2;
  string external_address = 3;
  cosmos.base.v1beta1.Coin deposit = 4 [ (gogoproto.nullable) = false ];
  string chain_name = 5;
}

// Deprecated: after block 5713000
message MsgAddOracleDeposit {
  option (cosmos.msg.v1.signer) = "oracle_address";
  option (amino.name) = "crosschain/MsgAddOracleDeposit";

  string oracle_address = 1;
  cosmos.base.v1beta1.Coin amount = 2 [ (gogoproto.nullable) = false ];
  string chain_name = 3;
}

// Deprecated: Please use precompile BridgeCall
message MsgSendToExternal {
  option (cosmos.msg.v1.signer) = "sender";
  option (amino.name) = "crosschain/MsgSendToExternal";

  string sender = 1;
  string dest = 2;
  cosmos.base.v1beta1.Coin amount = 3 [ (gogoproto.nullable) = false ];
  cosmos.base.v1beta1.Coin bridge_fee = 4 [ (gogoproto.nullable) = false ];
  string chain_name = 5;
}

// Deprecated: do not use
message MsgSendToExternalResponse { uint64 batch_nonce = 1; }

// Deprecated: do not use
message MsgCancelSendToExternal {
  option (cosmos.msg.v1.signer) = "sender";
  option (amino.name) = "crosschain/MsgCancelSendToExternal";

  uint64 transaction_id = 1;
  string sender = 2;
  string chain_name = 3;
}

// Deprecated: do not use
message MsgRequestBatch {
  option (cosmos.msg.v1.signer) = "sender";
  option (amino.name) = "crosschain/MsgRequestBatch";

  string sender = 1;
  string denom = 2;
  string minimum_fee = 3 [
    (cosmos_proto.scalar) = "cosmos.Int",
    (gogoproto.customtype) = "cosmossdk.io/math.Int",
    (gogoproto.nullable) = false
  ];
  string fee_receive = 4;
  string chain_name = 5;
  string base_fee = 6 [
    (cosmos_proto.scalar) = "cosmos.Int",
    (gogoproto.customtype) = "cosmossdk.io/math.Int",
    (gogoproto.nullable) = false
  ];
}

// Deprecated: do not use
message MsgRequestBatchResponse { uint64 batch_nonce = 1; }

message MsgIncreaseBridgeFee {
  option deprecated = true;
  option (cosmos.msg.v1.signer) = "sender";
  option (amino.name) = "crosschain/MsgIncreaseBridgeFee";

  string chain_name = 1;
  uint64 transaction_id = 2;
  string sender = 3;
  cosmos.base.v1beta1.Coin add_bridge_fee = 4 [ (gogoproto.nullable) = false ];
}

message MsgOracleSetConfirmResponse { option deprecated = true; }

message MsgConfirmBatchResponse { option deprecated = true; }

message MsgBridgeCallConfirmResponse { option deprecated = true; }

message BridgeToken {
  option deprecated = true;
  string token = 1;
  string denom = 2;
  // Deprecated: after upgrade v3
  string channel_ibc = 3;
}

message BatchFees {
  option deprecated = true;
  string token_contract = 1;
  string total_fees = 2 [
    (cosmos_proto.scalar) = "cosmos.Int",
    (gogoproto.customtype) = "cosmossdk.io/math.Int",
    (gogoproto.nullable) = false
  ];
  uint64 total_txs = 3;
  string total_amount = 4 [
    (cosmos_proto.scalar) = "cosmos.Int",
    (gogoproto.customtype) = "cosmossdk.io/math.Int",
    (gogoproto.nullable) = false
  ];
}

message MinBatchFee {
  option deprecated = true;
  string token_contract = 1;
  string base_fee = 2 [
    (cosmos_proto.scalar) = "cosmos.Int",
    (gogoproto.customtype) = "cosmossdk.io/math.Int",
    (gogoproto.nullable) = false
  ];
}

message QueryBatchFeeRequest {
  option deprecated = true;
  string chain_name = 1;
  repeated MinBatchFee min_batch_fees = 2 [ (gogoproto.nullable) = false ];
}

message QueryBatchFeeResponse {
  option deprecated = true;
  repeated BatchFees batch_fees = 1;
}
