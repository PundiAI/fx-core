syntax = "proto3";
package fx.gravity.crosschain.v1;

import "cosmos/base/v1beta1/coin.proto";
import "cosmos/msg/v1/msg.proto";
import "cosmos_proto/cosmos.proto";
import "fx/gravity/crosschain/v1/types.proto";
import "fx/gravity/crosschain/v1/legacy.proto";
import "gogoproto/gogo.proto";
import "google/protobuf/any.proto";
import "amino/amino.proto";

option go_package = "github.com/functionx/fx-core/x/crosschain/types";

// Msg defines the state transitions possible within gravity
service Msg {
  option (cosmos.msg.v1.service) = true;

  rpc BondedOracle(MsgBondedOracle) returns (MsgBondedOracleResponse);
  rpc AddDelegate(MsgAddDelegate) returns (MsgAddDelegateResponse);
  rpc ReDelegate(MsgReDelegate) returns (MsgReDelegateResponse);
  rpc EditBridger(MsgEditBridger) returns (MsgEditBridgerResponse);
  rpc WithdrawReward(MsgWithdrawReward) returns (MsgWithdrawRewardResponse);
  rpc UnbondedOracle(MsgUnbondedOracle) returns (MsgUnbondedOracleResponse);

  // Deprecated: Please use Confirm
  rpc OracleSetConfirm(MsgOracleSetConfirm)
      returns (MsgOracleSetConfirmResponse);
  // Deprecated: Please use Confirm
  rpc ConfirmBatch(MsgConfirmBatch) returns (MsgConfirmBatchResponse);
  // Deprecated: Please use Confirm
  rpc BridgeCallConfirm(MsgBridgeCallConfirm)
      returns (MsgBridgeCallConfirmResponse);

  // Deprecated: Please use precompile BridgeCall
  rpc SendToExternal(MsgSendToExternal) returns (MsgSendToExternalResponse);

  // UpdateParams defines a governance operation for updating the x/crosschain
  // module parameters. The authority is hard-coded to the x/gov module account.
  rpc UpdateParams(MsgUpdateParams) returns (MsgUpdateParamsResponse);

  rpc UpdateChainOracles(MsgUpdateChainOracles)
      returns (MsgUpdateChainOraclesResponse);

  rpc Claim(MsgClaim) returns (MsgClaimResponse) {}
  rpc Confirm(MsgConfirm) returns (MsgConfirmResponse) {}
}

message MsgBondedOracle {
  option (cosmos.msg.v1.signer) = "oracle_address";
  option (amino.name) = "crosschain/MsgBondedOracle";

  string chain_name = 1;
  string oracle_address = 2;
  string bridger_address = 3;
  string external_address = 4;
  string validator_address = 5;
  cosmos.base.v1beta1.Coin delegate_amount = 6 [ (gogoproto.nullable) = false ];
}

message MsgBondedOracleResponse {}

message MsgAddDelegate {
  option (cosmos.msg.v1.signer) = "oracle_address";
  option (amino.name) = "crosschain/MsgAddDelegate";

  string chain_name = 1;
  string oracle_address = 2;
  cosmos.base.v1beta1.Coin amount = 3 [ (gogoproto.nullable) = false ];
}

message MsgAddDelegateResponse {}

message MsgReDelegate {
  option (cosmos.msg.v1.signer) = "oracle_address";
  option (amino.name) = "crosschain/MsgReDelegate";

  string chain_name = 1;
  string oracle_address = 2;
  string validator_address = 3;
}

message MsgReDelegateResponse {}

message MsgEditBridger {
  option (cosmos.msg.v1.signer) = "oracle_address";
  option (amino.name) = "crosschain/MsgEditBridger";

  string chain_name = 1;
  string oracle_address = 2;
  string bridger_address = 3;
}

message MsgEditBridgerResponse {}

message MsgUnbondedOracle {
  option (cosmos.msg.v1.signer) = "oracle_address";
  option (amino.name) = "crosschain/MsgUnbondedOracle";

  string chain_name = 1;
  string oracle_address = 2;
}

message MsgUnbondedOracleResponse {}

message MsgWithdrawReward {
  option (cosmos.msg.v1.signer) = "oracle_address";
  option (amino.name) = "crosschain/MsgWithdrawReward";

  string chain_name = 1;
  string oracle_address = 2;
}

message MsgWithdrawRewardResponse {}

message MsgOracleSetConfirm {
  option (cosmos.msg.v1.signer) = "bridger_address";
  option (amino.name) = "crosschain/MsgOracleSetConfirm";

  uint64 nonce = 1;
  string bridger_address = 2;
  string external_address = 3;
  string signature = 4;
  string chain_name = 5;
}

message MsgOracleSetUpdatedClaim {
  option (cosmos.msg.v1.signer) = "bridger_address";
  option (amino.name) = "crosschain/MsgOracleSetUpdatedClaim";

  uint64 event_nonce = 1;
  uint64 block_height = 2;
  uint64 oracle_set_nonce = 3;
  repeated BridgeValidator members = 4 [ (gogoproto.nullable) = false ];
  string bridger_address = 6;
  string chain_name = 7;
}

message MsgSendToFxClaim {
  option (cosmos.msg.v1.signer) = "bridger_address";
  option (amino.name) = "crosschain/MsgSendToFxClaim";

  uint64 event_nonce = 1;
  uint64 block_height = 2;
  string token_contract = 3;
  string amount = 4 [
    (cosmos_proto.scalar) = "cosmos.Int",
    (gogoproto.customtype) = "cosmossdk.io/math.Int",
    (gogoproto.nullable) = false
  ];
  string sender = 5;
  string receiver = 6;
  string target_ibc = 7;
  string bridger_address = 8;
  string chain_name = 9;
}

message MsgBridgeCallClaim {
  option (cosmos.msg.v1.signer) = "bridger_address";
  option (amino.name) = "crosschain/MsgBridgeCallClaim";

  string chain_name = 1;
  string bridger_address = 2;
  uint64 event_nonce = 3;
  uint64 block_height = 4;
  string sender = 5;
  string refund = 6;
  repeated string token_contracts = 7;
  repeated string amounts = 8 [
    (cosmos_proto.scalar) = "cosmos.Int",
    (gogoproto.customtype) = "cosmossdk.io/math.Int",
    (gogoproto.nullable) = false
  ];
  string to = 9;
  string data = 10;
  string quote_id = 11 [
    (cosmos_proto.scalar) = "cosmos.Int",
    (gogoproto.customtype) = "cosmossdk.io/math.Int",
    (gogoproto.nullable) = false
  ];
  string memo = 12;
  string tx_origin = 13;
}

message MsgBridgeCallResultClaim {
  option (cosmos.msg.v1.signer) = "bridger_address";
  option (amino.name) = "crosschain/MsgBridgeCallResultClaim";

  string chain_name = 1;
  string bridger_address = 2;
  uint64 event_nonce = 3;
  uint64 block_height = 4;
  uint64 nonce = 5;
  string tx_origin = 6;
  bool success = 7;
  string cause = 8;
}

message MsgConfirmBatch {
  option (cosmos.msg.v1.signer) = "bridger_address";
  option (amino.name) = "crosschain/MsgConfirmBatch";

  uint64 nonce = 1;
  string token_contract = 2;
  string bridger_address = 3;
  string external_address = 4;
  string signature = 5;
  string chain_name = 6;
}

message MsgSendToExternalClaim {
  option (cosmos.msg.v1.signer) = "bridger_address";
  option (amino.name) = "crosschain/MsgSendToExternalClaim";

  uint64 event_nonce = 1;
  uint64 block_height = 2;
  uint64 batch_nonce = 3;
  string token_contract = 4;
  string bridger_address = 5;
  string chain_name = 6;
}

message MsgBridgeTokenClaim {
  option (cosmos.msg.v1.signer) = "bridger_address";
  option (amino.name) = "crosschain/MsgBridgeTokenClaim";

  uint64 event_nonce = 1;
  uint64 block_height = 2;
  string token_contract = 3;
  string name = 4;
  string symbol = 5;
  uint64 decimals = 6;
  string bridger_address = 7;
  string channel_ibc = 8; // Bridge Token channel IBC
  string chain_name = 9;
}

message MsgBridgeCallConfirm {
  option (cosmos.msg.v1.signer) = "bridger_address";
  option (amino.name) = "crosschain/MsgBridgeCallConfirm";

  string chain_name = 1;
  string bridger_address = 2;
  string external_address = 3;
  uint64 nonce = 4;
  string signature = 5;
}

message MsgUpdateParams {
  option (cosmos.msg.v1.signer) = "authority";
  option (amino.name) = "crosschain/MsgUpdateParams";

  string chain_name = 1;

  // authority is the address of the governance account.
  string authority = 2 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];

  // params defines the x/crosschain parameters to update.
  //
  // NOTE: All parameters must be supplied.
  Params params = 3 [ (gogoproto.nullable) = false ];
}

message MsgUpdateParamsResponse {}

message MsgUpdateChainOracles {
  option (cosmos.msg.v1.signer) = "authority";
  option (amino.name) = "crosschain/MsgUpdateChainOracles";

  string chain_name = 1;

  // authority is the address of the governance account.
  string authority = 2 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];

  repeated string oracles = 3;
}

message MsgUpdateChainOraclesResponse {}

message MsgClaim {
  option (cosmos.msg.v1.signer) = "bridger_address";
  option (amino.name) = "crosschain/MsgClaim";

  string chain_name = 1;
  string bridger_address = 2;
  google.protobuf.Any claim = 3
      [ (cosmos_proto.accepts_interface) = "ExternalClaim" ];
}

message MsgClaimResponse {}

message MsgConfirm {
  option (cosmos.msg.v1.signer) = "bridger_address";
  option (amino.name) = "crosschain/MsgConfirm";

  string chain_name = 1;
  string bridger_address = 2;
  google.protobuf.Any confirm = 3
      [ (cosmos_proto.accepts_interface) = "Confirm" ];
}

message MsgConfirmResponse {}
