// Code generated by protoc-gen-go-pulsar. DO NOT EDIT.
package gravityv1

import (
	v1beta1 "cosmossdk.io/api/cosmos/base/v1beta1"
	fmt "fmt"
	runtime "github.com/cosmos/cosmos-proto/runtime"
	_ "github.com/cosmos/gogoproto/gogoproto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoiface "google.golang.org/protobuf/runtime/protoiface"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	io "io"
	reflect "reflect"
	sync "sync"
)

var (
	md_MsgValsetConfirm              protoreflect.MessageDescriptor
	fd_MsgValsetConfirm_nonce        protoreflect.FieldDescriptor
	fd_MsgValsetConfirm_orchestrator protoreflect.FieldDescriptor
	fd_MsgValsetConfirm_eth_address  protoreflect.FieldDescriptor
	fd_MsgValsetConfirm_signature    protoreflect.FieldDescriptor
)

func init() {
	file_fx_gravity_v1_gravity_legacy_proto_init()
	md_MsgValsetConfirm = File_fx_gravity_v1_gravity_legacy_proto.Messages().ByName("MsgValsetConfirm")
	fd_MsgValsetConfirm_nonce = md_MsgValsetConfirm.Fields().ByName("nonce")
	fd_MsgValsetConfirm_orchestrator = md_MsgValsetConfirm.Fields().ByName("orchestrator")
	fd_MsgValsetConfirm_eth_address = md_MsgValsetConfirm.Fields().ByName("eth_address")
	fd_MsgValsetConfirm_signature = md_MsgValsetConfirm.Fields().ByName("signature")
}

var _ protoreflect.Message = (*fastReflection_MsgValsetConfirm)(nil)

type fastReflection_MsgValsetConfirm MsgValsetConfirm

func (x *MsgValsetConfirm) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgValsetConfirm)(x)
}

func (x *MsgValsetConfirm) slowProtoReflect() protoreflect.Message {
	mi := &file_fx_gravity_v1_gravity_legacy_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgValsetConfirm_messageType fastReflection_MsgValsetConfirm_messageType
var _ protoreflect.MessageType = fastReflection_MsgValsetConfirm_messageType{}

type fastReflection_MsgValsetConfirm_messageType struct{}

func (x fastReflection_MsgValsetConfirm_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgValsetConfirm)(nil)
}
func (x fastReflection_MsgValsetConfirm_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgValsetConfirm)
}
func (x fastReflection_MsgValsetConfirm_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgValsetConfirm
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgValsetConfirm) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgValsetConfirm
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgValsetConfirm) Type() protoreflect.MessageType {
	return _fastReflection_MsgValsetConfirm_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgValsetConfirm) New() protoreflect.Message {
	return new(fastReflection_MsgValsetConfirm)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgValsetConfirm) Interface() protoreflect.ProtoMessage {
	return (*MsgValsetConfirm)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgValsetConfirm) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Nonce != uint64(0) {
		value := protoreflect.ValueOfUint64(x.Nonce)
		if !f(fd_MsgValsetConfirm_nonce, value) {
			return
		}
	}
	if x.Orchestrator != "" {
		value := protoreflect.ValueOfString(x.Orchestrator)
		if !f(fd_MsgValsetConfirm_orchestrator, value) {
			return
		}
	}
	if x.EthAddress != "" {
		value := protoreflect.ValueOfString(x.EthAddress)
		if !f(fd_MsgValsetConfirm_eth_address, value) {
			return
		}
	}
	if x.Signature != "" {
		value := protoreflect.ValueOfString(x.Signature)
		if !f(fd_MsgValsetConfirm_signature, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgValsetConfirm) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "fx.gravity.v1.MsgValsetConfirm.nonce":
		return x.Nonce != uint64(0)
	case "fx.gravity.v1.MsgValsetConfirm.orchestrator":
		return x.Orchestrator != ""
	case "fx.gravity.v1.MsgValsetConfirm.eth_address":
		return x.EthAddress != ""
	case "fx.gravity.v1.MsgValsetConfirm.signature":
		return x.Signature != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.v1.MsgValsetConfirm"))
		}
		panic(fmt.Errorf("message fx.gravity.v1.MsgValsetConfirm does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgValsetConfirm) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "fx.gravity.v1.MsgValsetConfirm.nonce":
		x.Nonce = uint64(0)
	case "fx.gravity.v1.MsgValsetConfirm.orchestrator":
		x.Orchestrator = ""
	case "fx.gravity.v1.MsgValsetConfirm.eth_address":
		x.EthAddress = ""
	case "fx.gravity.v1.MsgValsetConfirm.signature":
		x.Signature = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.v1.MsgValsetConfirm"))
		}
		panic(fmt.Errorf("message fx.gravity.v1.MsgValsetConfirm does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgValsetConfirm) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "fx.gravity.v1.MsgValsetConfirm.nonce":
		value := x.Nonce
		return protoreflect.ValueOfUint64(value)
	case "fx.gravity.v1.MsgValsetConfirm.orchestrator":
		value := x.Orchestrator
		return protoreflect.ValueOfString(value)
	case "fx.gravity.v1.MsgValsetConfirm.eth_address":
		value := x.EthAddress
		return protoreflect.ValueOfString(value)
	case "fx.gravity.v1.MsgValsetConfirm.signature":
		value := x.Signature
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.v1.MsgValsetConfirm"))
		}
		panic(fmt.Errorf("message fx.gravity.v1.MsgValsetConfirm does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgValsetConfirm) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "fx.gravity.v1.MsgValsetConfirm.nonce":
		x.Nonce = value.Uint()
	case "fx.gravity.v1.MsgValsetConfirm.orchestrator":
		x.Orchestrator = value.Interface().(string)
	case "fx.gravity.v1.MsgValsetConfirm.eth_address":
		x.EthAddress = value.Interface().(string)
	case "fx.gravity.v1.MsgValsetConfirm.signature":
		x.Signature = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.v1.MsgValsetConfirm"))
		}
		panic(fmt.Errorf("message fx.gravity.v1.MsgValsetConfirm does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgValsetConfirm) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "fx.gravity.v1.MsgValsetConfirm.nonce":
		panic(fmt.Errorf("field nonce of message fx.gravity.v1.MsgValsetConfirm is not mutable"))
	case "fx.gravity.v1.MsgValsetConfirm.orchestrator":
		panic(fmt.Errorf("field orchestrator of message fx.gravity.v1.MsgValsetConfirm is not mutable"))
	case "fx.gravity.v1.MsgValsetConfirm.eth_address":
		panic(fmt.Errorf("field eth_address of message fx.gravity.v1.MsgValsetConfirm is not mutable"))
	case "fx.gravity.v1.MsgValsetConfirm.signature":
		panic(fmt.Errorf("field signature of message fx.gravity.v1.MsgValsetConfirm is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.v1.MsgValsetConfirm"))
		}
		panic(fmt.Errorf("message fx.gravity.v1.MsgValsetConfirm does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgValsetConfirm) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "fx.gravity.v1.MsgValsetConfirm.nonce":
		return protoreflect.ValueOfUint64(uint64(0))
	case "fx.gravity.v1.MsgValsetConfirm.orchestrator":
		return protoreflect.ValueOfString("")
	case "fx.gravity.v1.MsgValsetConfirm.eth_address":
		return protoreflect.ValueOfString("")
	case "fx.gravity.v1.MsgValsetConfirm.signature":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.v1.MsgValsetConfirm"))
		}
		panic(fmt.Errorf("message fx.gravity.v1.MsgValsetConfirm does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgValsetConfirm) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in fx.gravity.v1.MsgValsetConfirm", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgValsetConfirm) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgValsetConfirm) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgValsetConfirm) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgValsetConfirm) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgValsetConfirm)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Nonce != 0 {
			n += 1 + runtime.Sov(uint64(x.Nonce))
		}
		l = len(x.Orchestrator)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.EthAddress)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Signature)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgValsetConfirm)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Signature) > 0 {
			i -= len(x.Signature)
			copy(dAtA[i:], x.Signature)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Signature)))
			i--
			dAtA[i] = 0x22
		}
		if len(x.EthAddress) > 0 {
			i -= len(x.EthAddress)
			copy(dAtA[i:], x.EthAddress)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.EthAddress)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.Orchestrator) > 0 {
			i -= len(x.Orchestrator)
			copy(dAtA[i:], x.Orchestrator)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Orchestrator)))
			i--
			dAtA[i] = 0x12
		}
		if x.Nonce != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Nonce))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgValsetConfirm)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgValsetConfirm: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgValsetConfirm: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Nonce", wireType)
				}
				x.Nonce = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Nonce |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Orchestrator", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Orchestrator = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field EthAddress", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.EthAddress = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Signature", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Signature = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgSendToEth            protoreflect.MessageDescriptor
	fd_MsgSendToEth_sender     protoreflect.FieldDescriptor
	fd_MsgSendToEth_eth_dest   protoreflect.FieldDescriptor
	fd_MsgSendToEth_amount     protoreflect.FieldDescriptor
	fd_MsgSendToEth_bridge_fee protoreflect.FieldDescriptor
)

func init() {
	file_fx_gravity_v1_gravity_legacy_proto_init()
	md_MsgSendToEth = File_fx_gravity_v1_gravity_legacy_proto.Messages().ByName("MsgSendToEth")
	fd_MsgSendToEth_sender = md_MsgSendToEth.Fields().ByName("sender")
	fd_MsgSendToEth_eth_dest = md_MsgSendToEth.Fields().ByName("eth_dest")
	fd_MsgSendToEth_amount = md_MsgSendToEth.Fields().ByName("amount")
	fd_MsgSendToEth_bridge_fee = md_MsgSendToEth.Fields().ByName("bridge_fee")
}

var _ protoreflect.Message = (*fastReflection_MsgSendToEth)(nil)

type fastReflection_MsgSendToEth MsgSendToEth

func (x *MsgSendToEth) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgSendToEth)(x)
}

func (x *MsgSendToEth) slowProtoReflect() protoreflect.Message {
	mi := &file_fx_gravity_v1_gravity_legacy_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgSendToEth_messageType fastReflection_MsgSendToEth_messageType
var _ protoreflect.MessageType = fastReflection_MsgSendToEth_messageType{}

type fastReflection_MsgSendToEth_messageType struct{}

func (x fastReflection_MsgSendToEth_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgSendToEth)(nil)
}
func (x fastReflection_MsgSendToEth_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgSendToEth)
}
func (x fastReflection_MsgSendToEth_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgSendToEth
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgSendToEth) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgSendToEth
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgSendToEth) Type() protoreflect.MessageType {
	return _fastReflection_MsgSendToEth_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgSendToEth) New() protoreflect.Message {
	return new(fastReflection_MsgSendToEth)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgSendToEth) Interface() protoreflect.ProtoMessage {
	return (*MsgSendToEth)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgSendToEth) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Sender != "" {
		value := protoreflect.ValueOfString(x.Sender)
		if !f(fd_MsgSendToEth_sender, value) {
			return
		}
	}
	if x.EthDest != "" {
		value := protoreflect.ValueOfString(x.EthDest)
		if !f(fd_MsgSendToEth_eth_dest, value) {
			return
		}
	}
	if x.Amount != nil {
		value := protoreflect.ValueOfMessage(x.Amount.ProtoReflect())
		if !f(fd_MsgSendToEth_amount, value) {
			return
		}
	}
	if x.BridgeFee != nil {
		value := protoreflect.ValueOfMessage(x.BridgeFee.ProtoReflect())
		if !f(fd_MsgSendToEth_bridge_fee, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgSendToEth) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "fx.gravity.v1.MsgSendToEth.sender":
		return x.Sender != ""
	case "fx.gravity.v1.MsgSendToEth.eth_dest":
		return x.EthDest != ""
	case "fx.gravity.v1.MsgSendToEth.amount":
		return x.Amount != nil
	case "fx.gravity.v1.MsgSendToEth.bridge_fee":
		return x.BridgeFee != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.v1.MsgSendToEth"))
		}
		panic(fmt.Errorf("message fx.gravity.v1.MsgSendToEth does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgSendToEth) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "fx.gravity.v1.MsgSendToEth.sender":
		x.Sender = ""
	case "fx.gravity.v1.MsgSendToEth.eth_dest":
		x.EthDest = ""
	case "fx.gravity.v1.MsgSendToEth.amount":
		x.Amount = nil
	case "fx.gravity.v1.MsgSendToEth.bridge_fee":
		x.BridgeFee = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.v1.MsgSendToEth"))
		}
		panic(fmt.Errorf("message fx.gravity.v1.MsgSendToEth does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgSendToEth) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "fx.gravity.v1.MsgSendToEth.sender":
		value := x.Sender
		return protoreflect.ValueOfString(value)
	case "fx.gravity.v1.MsgSendToEth.eth_dest":
		value := x.EthDest
		return protoreflect.ValueOfString(value)
	case "fx.gravity.v1.MsgSendToEth.amount":
		value := x.Amount
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "fx.gravity.v1.MsgSendToEth.bridge_fee":
		value := x.BridgeFee
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.v1.MsgSendToEth"))
		}
		panic(fmt.Errorf("message fx.gravity.v1.MsgSendToEth does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgSendToEth) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "fx.gravity.v1.MsgSendToEth.sender":
		x.Sender = value.Interface().(string)
	case "fx.gravity.v1.MsgSendToEth.eth_dest":
		x.EthDest = value.Interface().(string)
	case "fx.gravity.v1.MsgSendToEth.amount":
		x.Amount = value.Message().Interface().(*v1beta1.Coin)
	case "fx.gravity.v1.MsgSendToEth.bridge_fee":
		x.BridgeFee = value.Message().Interface().(*v1beta1.Coin)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.v1.MsgSendToEth"))
		}
		panic(fmt.Errorf("message fx.gravity.v1.MsgSendToEth does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgSendToEth) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "fx.gravity.v1.MsgSendToEth.amount":
		if x.Amount == nil {
			x.Amount = new(v1beta1.Coin)
		}
		return protoreflect.ValueOfMessage(x.Amount.ProtoReflect())
	case "fx.gravity.v1.MsgSendToEth.bridge_fee":
		if x.BridgeFee == nil {
			x.BridgeFee = new(v1beta1.Coin)
		}
		return protoreflect.ValueOfMessage(x.BridgeFee.ProtoReflect())
	case "fx.gravity.v1.MsgSendToEth.sender":
		panic(fmt.Errorf("field sender of message fx.gravity.v1.MsgSendToEth is not mutable"))
	case "fx.gravity.v1.MsgSendToEth.eth_dest":
		panic(fmt.Errorf("field eth_dest of message fx.gravity.v1.MsgSendToEth is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.v1.MsgSendToEth"))
		}
		panic(fmt.Errorf("message fx.gravity.v1.MsgSendToEth does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgSendToEth) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "fx.gravity.v1.MsgSendToEth.sender":
		return protoreflect.ValueOfString("")
	case "fx.gravity.v1.MsgSendToEth.eth_dest":
		return protoreflect.ValueOfString("")
	case "fx.gravity.v1.MsgSendToEth.amount":
		m := new(v1beta1.Coin)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "fx.gravity.v1.MsgSendToEth.bridge_fee":
		m := new(v1beta1.Coin)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.v1.MsgSendToEth"))
		}
		panic(fmt.Errorf("message fx.gravity.v1.MsgSendToEth does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgSendToEth) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in fx.gravity.v1.MsgSendToEth", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgSendToEth) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgSendToEth) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgSendToEth) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgSendToEth) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgSendToEth)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Sender)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.EthDest)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.Amount != nil {
			l = options.Size(x.Amount)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.BridgeFee != nil {
			l = options.Size(x.BridgeFee)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgSendToEth)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.BridgeFee != nil {
			encoded, err := options.Marshal(x.BridgeFee)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x22
		}
		if x.Amount != nil {
			encoded, err := options.Marshal(x.Amount)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.EthDest) > 0 {
			i -= len(x.EthDest)
			copy(dAtA[i:], x.EthDest)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.EthDest)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Sender) > 0 {
			i -= len(x.Sender)
			copy(dAtA[i:], x.Sender)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Sender)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgSendToEth)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgSendToEth: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgSendToEth: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Sender", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Sender = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field EthDest", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.EthDest = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Amount", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Amount == nil {
					x.Amount = &v1beta1.Coin{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Amount); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BridgeFee", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.BridgeFee == nil {
					x.BridgeFee = &v1beta1.Coin{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.BridgeFee); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgRequestBatch             protoreflect.MessageDescriptor
	fd_MsgRequestBatch_sender      protoreflect.FieldDescriptor
	fd_MsgRequestBatch_denom       protoreflect.FieldDescriptor
	fd_MsgRequestBatch_minimum_fee protoreflect.FieldDescriptor
	fd_MsgRequestBatch_fee_receive protoreflect.FieldDescriptor
	fd_MsgRequestBatch_base_fee    protoreflect.FieldDescriptor
)

func init() {
	file_fx_gravity_v1_gravity_legacy_proto_init()
	md_MsgRequestBatch = File_fx_gravity_v1_gravity_legacy_proto.Messages().ByName("MsgRequestBatch")
	fd_MsgRequestBatch_sender = md_MsgRequestBatch.Fields().ByName("sender")
	fd_MsgRequestBatch_denom = md_MsgRequestBatch.Fields().ByName("denom")
	fd_MsgRequestBatch_minimum_fee = md_MsgRequestBatch.Fields().ByName("minimum_fee")
	fd_MsgRequestBatch_fee_receive = md_MsgRequestBatch.Fields().ByName("fee_receive")
	fd_MsgRequestBatch_base_fee = md_MsgRequestBatch.Fields().ByName("base_fee")
}

var _ protoreflect.Message = (*fastReflection_MsgRequestBatch)(nil)

type fastReflection_MsgRequestBatch MsgRequestBatch

func (x *MsgRequestBatch) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgRequestBatch)(x)
}

func (x *MsgRequestBatch) slowProtoReflect() protoreflect.Message {
	mi := &file_fx_gravity_v1_gravity_legacy_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgRequestBatch_messageType fastReflection_MsgRequestBatch_messageType
var _ protoreflect.MessageType = fastReflection_MsgRequestBatch_messageType{}

type fastReflection_MsgRequestBatch_messageType struct{}

func (x fastReflection_MsgRequestBatch_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgRequestBatch)(nil)
}
func (x fastReflection_MsgRequestBatch_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgRequestBatch)
}
func (x fastReflection_MsgRequestBatch_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgRequestBatch
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgRequestBatch) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgRequestBatch
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgRequestBatch) Type() protoreflect.MessageType {
	return _fastReflection_MsgRequestBatch_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgRequestBatch) New() protoreflect.Message {
	return new(fastReflection_MsgRequestBatch)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgRequestBatch) Interface() protoreflect.ProtoMessage {
	return (*MsgRequestBatch)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgRequestBatch) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Sender != "" {
		value := protoreflect.ValueOfString(x.Sender)
		if !f(fd_MsgRequestBatch_sender, value) {
			return
		}
	}
	if x.Denom != "" {
		value := protoreflect.ValueOfString(x.Denom)
		if !f(fd_MsgRequestBatch_denom, value) {
			return
		}
	}
	if x.MinimumFee != "" {
		value := protoreflect.ValueOfString(x.MinimumFee)
		if !f(fd_MsgRequestBatch_minimum_fee, value) {
			return
		}
	}
	if x.FeeReceive != "" {
		value := protoreflect.ValueOfString(x.FeeReceive)
		if !f(fd_MsgRequestBatch_fee_receive, value) {
			return
		}
	}
	if x.BaseFee != "" {
		value := protoreflect.ValueOfString(x.BaseFee)
		if !f(fd_MsgRequestBatch_base_fee, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgRequestBatch) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "fx.gravity.v1.MsgRequestBatch.sender":
		return x.Sender != ""
	case "fx.gravity.v1.MsgRequestBatch.denom":
		return x.Denom != ""
	case "fx.gravity.v1.MsgRequestBatch.minimum_fee":
		return x.MinimumFee != ""
	case "fx.gravity.v1.MsgRequestBatch.fee_receive":
		return x.FeeReceive != ""
	case "fx.gravity.v1.MsgRequestBatch.base_fee":
		return x.BaseFee != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.v1.MsgRequestBatch"))
		}
		panic(fmt.Errorf("message fx.gravity.v1.MsgRequestBatch does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgRequestBatch) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "fx.gravity.v1.MsgRequestBatch.sender":
		x.Sender = ""
	case "fx.gravity.v1.MsgRequestBatch.denom":
		x.Denom = ""
	case "fx.gravity.v1.MsgRequestBatch.minimum_fee":
		x.MinimumFee = ""
	case "fx.gravity.v1.MsgRequestBatch.fee_receive":
		x.FeeReceive = ""
	case "fx.gravity.v1.MsgRequestBatch.base_fee":
		x.BaseFee = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.v1.MsgRequestBatch"))
		}
		panic(fmt.Errorf("message fx.gravity.v1.MsgRequestBatch does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgRequestBatch) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "fx.gravity.v1.MsgRequestBatch.sender":
		value := x.Sender
		return protoreflect.ValueOfString(value)
	case "fx.gravity.v1.MsgRequestBatch.denom":
		value := x.Denom
		return protoreflect.ValueOfString(value)
	case "fx.gravity.v1.MsgRequestBatch.minimum_fee":
		value := x.MinimumFee
		return protoreflect.ValueOfString(value)
	case "fx.gravity.v1.MsgRequestBatch.fee_receive":
		value := x.FeeReceive
		return protoreflect.ValueOfString(value)
	case "fx.gravity.v1.MsgRequestBatch.base_fee":
		value := x.BaseFee
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.v1.MsgRequestBatch"))
		}
		panic(fmt.Errorf("message fx.gravity.v1.MsgRequestBatch does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgRequestBatch) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "fx.gravity.v1.MsgRequestBatch.sender":
		x.Sender = value.Interface().(string)
	case "fx.gravity.v1.MsgRequestBatch.denom":
		x.Denom = value.Interface().(string)
	case "fx.gravity.v1.MsgRequestBatch.minimum_fee":
		x.MinimumFee = value.Interface().(string)
	case "fx.gravity.v1.MsgRequestBatch.fee_receive":
		x.FeeReceive = value.Interface().(string)
	case "fx.gravity.v1.MsgRequestBatch.base_fee":
		x.BaseFee = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.v1.MsgRequestBatch"))
		}
		panic(fmt.Errorf("message fx.gravity.v1.MsgRequestBatch does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgRequestBatch) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "fx.gravity.v1.MsgRequestBatch.sender":
		panic(fmt.Errorf("field sender of message fx.gravity.v1.MsgRequestBatch is not mutable"))
	case "fx.gravity.v1.MsgRequestBatch.denom":
		panic(fmt.Errorf("field denom of message fx.gravity.v1.MsgRequestBatch is not mutable"))
	case "fx.gravity.v1.MsgRequestBatch.minimum_fee":
		panic(fmt.Errorf("field minimum_fee of message fx.gravity.v1.MsgRequestBatch is not mutable"))
	case "fx.gravity.v1.MsgRequestBatch.fee_receive":
		panic(fmt.Errorf("field fee_receive of message fx.gravity.v1.MsgRequestBatch is not mutable"))
	case "fx.gravity.v1.MsgRequestBatch.base_fee":
		panic(fmt.Errorf("field base_fee of message fx.gravity.v1.MsgRequestBatch is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.v1.MsgRequestBatch"))
		}
		panic(fmt.Errorf("message fx.gravity.v1.MsgRequestBatch does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgRequestBatch) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "fx.gravity.v1.MsgRequestBatch.sender":
		return protoreflect.ValueOfString("")
	case "fx.gravity.v1.MsgRequestBatch.denom":
		return protoreflect.ValueOfString("")
	case "fx.gravity.v1.MsgRequestBatch.minimum_fee":
		return protoreflect.ValueOfString("")
	case "fx.gravity.v1.MsgRequestBatch.fee_receive":
		return protoreflect.ValueOfString("")
	case "fx.gravity.v1.MsgRequestBatch.base_fee":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.v1.MsgRequestBatch"))
		}
		panic(fmt.Errorf("message fx.gravity.v1.MsgRequestBatch does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgRequestBatch) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in fx.gravity.v1.MsgRequestBatch", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgRequestBatch) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgRequestBatch) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgRequestBatch) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgRequestBatch) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgRequestBatch)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Sender)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Denom)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.MinimumFee)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.FeeReceive)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.BaseFee)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgRequestBatch)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.BaseFee) > 0 {
			i -= len(x.BaseFee)
			copy(dAtA[i:], x.BaseFee)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.BaseFee)))
			i--
			dAtA[i] = 0x2a
		}
		if len(x.FeeReceive) > 0 {
			i -= len(x.FeeReceive)
			copy(dAtA[i:], x.FeeReceive)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.FeeReceive)))
			i--
			dAtA[i] = 0x22
		}
		if len(x.MinimumFee) > 0 {
			i -= len(x.MinimumFee)
			copy(dAtA[i:], x.MinimumFee)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.MinimumFee)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.Denom) > 0 {
			i -= len(x.Denom)
			copy(dAtA[i:], x.Denom)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Denom)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Sender) > 0 {
			i -= len(x.Sender)
			copy(dAtA[i:], x.Sender)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Sender)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgRequestBatch)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgRequestBatch: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgRequestBatch: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Sender", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Sender = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Denom", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Denom = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field MinimumFee", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.MinimumFee = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field FeeReceive", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.FeeReceive = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 5:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BaseFee", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.BaseFee = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgConfirmBatch                protoreflect.MessageDescriptor
	fd_MsgConfirmBatch_nonce          protoreflect.FieldDescriptor
	fd_MsgConfirmBatch_token_contract protoreflect.FieldDescriptor
	fd_MsgConfirmBatch_eth_signer     protoreflect.FieldDescriptor
	fd_MsgConfirmBatch_orchestrator   protoreflect.FieldDescriptor
	fd_MsgConfirmBatch_signature      protoreflect.FieldDescriptor
)

func init() {
	file_fx_gravity_v1_gravity_legacy_proto_init()
	md_MsgConfirmBatch = File_fx_gravity_v1_gravity_legacy_proto.Messages().ByName("MsgConfirmBatch")
	fd_MsgConfirmBatch_nonce = md_MsgConfirmBatch.Fields().ByName("nonce")
	fd_MsgConfirmBatch_token_contract = md_MsgConfirmBatch.Fields().ByName("token_contract")
	fd_MsgConfirmBatch_eth_signer = md_MsgConfirmBatch.Fields().ByName("eth_signer")
	fd_MsgConfirmBatch_orchestrator = md_MsgConfirmBatch.Fields().ByName("orchestrator")
	fd_MsgConfirmBatch_signature = md_MsgConfirmBatch.Fields().ByName("signature")
}

var _ protoreflect.Message = (*fastReflection_MsgConfirmBatch)(nil)

type fastReflection_MsgConfirmBatch MsgConfirmBatch

func (x *MsgConfirmBatch) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgConfirmBatch)(x)
}

func (x *MsgConfirmBatch) slowProtoReflect() protoreflect.Message {
	mi := &file_fx_gravity_v1_gravity_legacy_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgConfirmBatch_messageType fastReflection_MsgConfirmBatch_messageType
var _ protoreflect.MessageType = fastReflection_MsgConfirmBatch_messageType{}

type fastReflection_MsgConfirmBatch_messageType struct{}

func (x fastReflection_MsgConfirmBatch_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgConfirmBatch)(nil)
}
func (x fastReflection_MsgConfirmBatch_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgConfirmBatch)
}
func (x fastReflection_MsgConfirmBatch_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgConfirmBatch
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgConfirmBatch) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgConfirmBatch
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgConfirmBatch) Type() protoreflect.MessageType {
	return _fastReflection_MsgConfirmBatch_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgConfirmBatch) New() protoreflect.Message {
	return new(fastReflection_MsgConfirmBatch)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgConfirmBatch) Interface() protoreflect.ProtoMessage {
	return (*MsgConfirmBatch)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgConfirmBatch) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Nonce != uint64(0) {
		value := protoreflect.ValueOfUint64(x.Nonce)
		if !f(fd_MsgConfirmBatch_nonce, value) {
			return
		}
	}
	if x.TokenContract != "" {
		value := protoreflect.ValueOfString(x.TokenContract)
		if !f(fd_MsgConfirmBatch_token_contract, value) {
			return
		}
	}
	if x.EthSigner != "" {
		value := protoreflect.ValueOfString(x.EthSigner)
		if !f(fd_MsgConfirmBatch_eth_signer, value) {
			return
		}
	}
	if x.Orchestrator != "" {
		value := protoreflect.ValueOfString(x.Orchestrator)
		if !f(fd_MsgConfirmBatch_orchestrator, value) {
			return
		}
	}
	if x.Signature != "" {
		value := protoreflect.ValueOfString(x.Signature)
		if !f(fd_MsgConfirmBatch_signature, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgConfirmBatch) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "fx.gravity.v1.MsgConfirmBatch.nonce":
		return x.Nonce != uint64(0)
	case "fx.gravity.v1.MsgConfirmBatch.token_contract":
		return x.TokenContract != ""
	case "fx.gravity.v1.MsgConfirmBatch.eth_signer":
		return x.EthSigner != ""
	case "fx.gravity.v1.MsgConfirmBatch.orchestrator":
		return x.Orchestrator != ""
	case "fx.gravity.v1.MsgConfirmBatch.signature":
		return x.Signature != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.v1.MsgConfirmBatch"))
		}
		panic(fmt.Errorf("message fx.gravity.v1.MsgConfirmBatch does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgConfirmBatch) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "fx.gravity.v1.MsgConfirmBatch.nonce":
		x.Nonce = uint64(0)
	case "fx.gravity.v1.MsgConfirmBatch.token_contract":
		x.TokenContract = ""
	case "fx.gravity.v1.MsgConfirmBatch.eth_signer":
		x.EthSigner = ""
	case "fx.gravity.v1.MsgConfirmBatch.orchestrator":
		x.Orchestrator = ""
	case "fx.gravity.v1.MsgConfirmBatch.signature":
		x.Signature = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.v1.MsgConfirmBatch"))
		}
		panic(fmt.Errorf("message fx.gravity.v1.MsgConfirmBatch does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgConfirmBatch) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "fx.gravity.v1.MsgConfirmBatch.nonce":
		value := x.Nonce
		return protoreflect.ValueOfUint64(value)
	case "fx.gravity.v1.MsgConfirmBatch.token_contract":
		value := x.TokenContract
		return protoreflect.ValueOfString(value)
	case "fx.gravity.v1.MsgConfirmBatch.eth_signer":
		value := x.EthSigner
		return protoreflect.ValueOfString(value)
	case "fx.gravity.v1.MsgConfirmBatch.orchestrator":
		value := x.Orchestrator
		return protoreflect.ValueOfString(value)
	case "fx.gravity.v1.MsgConfirmBatch.signature":
		value := x.Signature
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.v1.MsgConfirmBatch"))
		}
		panic(fmt.Errorf("message fx.gravity.v1.MsgConfirmBatch does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgConfirmBatch) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "fx.gravity.v1.MsgConfirmBatch.nonce":
		x.Nonce = value.Uint()
	case "fx.gravity.v1.MsgConfirmBatch.token_contract":
		x.TokenContract = value.Interface().(string)
	case "fx.gravity.v1.MsgConfirmBatch.eth_signer":
		x.EthSigner = value.Interface().(string)
	case "fx.gravity.v1.MsgConfirmBatch.orchestrator":
		x.Orchestrator = value.Interface().(string)
	case "fx.gravity.v1.MsgConfirmBatch.signature":
		x.Signature = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.v1.MsgConfirmBatch"))
		}
		panic(fmt.Errorf("message fx.gravity.v1.MsgConfirmBatch does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgConfirmBatch) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "fx.gravity.v1.MsgConfirmBatch.nonce":
		panic(fmt.Errorf("field nonce of message fx.gravity.v1.MsgConfirmBatch is not mutable"))
	case "fx.gravity.v1.MsgConfirmBatch.token_contract":
		panic(fmt.Errorf("field token_contract of message fx.gravity.v1.MsgConfirmBatch is not mutable"))
	case "fx.gravity.v1.MsgConfirmBatch.eth_signer":
		panic(fmt.Errorf("field eth_signer of message fx.gravity.v1.MsgConfirmBatch is not mutable"))
	case "fx.gravity.v1.MsgConfirmBatch.orchestrator":
		panic(fmt.Errorf("field orchestrator of message fx.gravity.v1.MsgConfirmBatch is not mutable"))
	case "fx.gravity.v1.MsgConfirmBatch.signature":
		panic(fmt.Errorf("field signature of message fx.gravity.v1.MsgConfirmBatch is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.v1.MsgConfirmBatch"))
		}
		panic(fmt.Errorf("message fx.gravity.v1.MsgConfirmBatch does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgConfirmBatch) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "fx.gravity.v1.MsgConfirmBatch.nonce":
		return protoreflect.ValueOfUint64(uint64(0))
	case "fx.gravity.v1.MsgConfirmBatch.token_contract":
		return protoreflect.ValueOfString("")
	case "fx.gravity.v1.MsgConfirmBatch.eth_signer":
		return protoreflect.ValueOfString("")
	case "fx.gravity.v1.MsgConfirmBatch.orchestrator":
		return protoreflect.ValueOfString("")
	case "fx.gravity.v1.MsgConfirmBatch.signature":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.v1.MsgConfirmBatch"))
		}
		panic(fmt.Errorf("message fx.gravity.v1.MsgConfirmBatch does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgConfirmBatch) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in fx.gravity.v1.MsgConfirmBatch", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgConfirmBatch) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgConfirmBatch) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgConfirmBatch) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgConfirmBatch) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgConfirmBatch)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Nonce != 0 {
			n += 1 + runtime.Sov(uint64(x.Nonce))
		}
		l = len(x.TokenContract)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.EthSigner)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Orchestrator)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Signature)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgConfirmBatch)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Signature) > 0 {
			i -= len(x.Signature)
			copy(dAtA[i:], x.Signature)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Signature)))
			i--
			dAtA[i] = 0x2a
		}
		if len(x.Orchestrator) > 0 {
			i -= len(x.Orchestrator)
			copy(dAtA[i:], x.Orchestrator)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Orchestrator)))
			i--
			dAtA[i] = 0x22
		}
		if len(x.EthSigner) > 0 {
			i -= len(x.EthSigner)
			copy(dAtA[i:], x.EthSigner)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.EthSigner)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.TokenContract) > 0 {
			i -= len(x.TokenContract)
			copy(dAtA[i:], x.TokenContract)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.TokenContract)))
			i--
			dAtA[i] = 0x12
		}
		if x.Nonce != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Nonce))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgConfirmBatch)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgConfirmBatch: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgConfirmBatch: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Nonce", wireType)
				}
				x.Nonce = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Nonce |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TokenContract", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.TokenContract = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field EthSigner", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.EthSigner = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Orchestrator", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Orchestrator = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 5:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Signature", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Signature = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgDepositClaim                protoreflect.MessageDescriptor
	fd_MsgDepositClaim_event_nonce    protoreflect.FieldDescriptor
	fd_MsgDepositClaim_block_height   protoreflect.FieldDescriptor
	fd_MsgDepositClaim_token_contract protoreflect.FieldDescriptor
	fd_MsgDepositClaim_amount         protoreflect.FieldDescriptor
	fd_MsgDepositClaim_eth_sender     protoreflect.FieldDescriptor
	fd_MsgDepositClaim_fx_receiver    protoreflect.FieldDescriptor
	fd_MsgDepositClaim_target_ibc     protoreflect.FieldDescriptor
	fd_MsgDepositClaim_orchestrator   protoreflect.FieldDescriptor
)

func init() {
	file_fx_gravity_v1_gravity_legacy_proto_init()
	md_MsgDepositClaim = File_fx_gravity_v1_gravity_legacy_proto.Messages().ByName("MsgDepositClaim")
	fd_MsgDepositClaim_event_nonce = md_MsgDepositClaim.Fields().ByName("event_nonce")
	fd_MsgDepositClaim_block_height = md_MsgDepositClaim.Fields().ByName("block_height")
	fd_MsgDepositClaim_token_contract = md_MsgDepositClaim.Fields().ByName("token_contract")
	fd_MsgDepositClaim_amount = md_MsgDepositClaim.Fields().ByName("amount")
	fd_MsgDepositClaim_eth_sender = md_MsgDepositClaim.Fields().ByName("eth_sender")
	fd_MsgDepositClaim_fx_receiver = md_MsgDepositClaim.Fields().ByName("fx_receiver")
	fd_MsgDepositClaim_target_ibc = md_MsgDepositClaim.Fields().ByName("target_ibc")
	fd_MsgDepositClaim_orchestrator = md_MsgDepositClaim.Fields().ByName("orchestrator")
}

var _ protoreflect.Message = (*fastReflection_MsgDepositClaim)(nil)

type fastReflection_MsgDepositClaim MsgDepositClaim

func (x *MsgDepositClaim) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgDepositClaim)(x)
}

func (x *MsgDepositClaim) slowProtoReflect() protoreflect.Message {
	mi := &file_fx_gravity_v1_gravity_legacy_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgDepositClaim_messageType fastReflection_MsgDepositClaim_messageType
var _ protoreflect.MessageType = fastReflection_MsgDepositClaim_messageType{}

type fastReflection_MsgDepositClaim_messageType struct{}

func (x fastReflection_MsgDepositClaim_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgDepositClaim)(nil)
}
func (x fastReflection_MsgDepositClaim_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgDepositClaim)
}
func (x fastReflection_MsgDepositClaim_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgDepositClaim
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgDepositClaim) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgDepositClaim
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgDepositClaim) Type() protoreflect.MessageType {
	return _fastReflection_MsgDepositClaim_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgDepositClaim) New() protoreflect.Message {
	return new(fastReflection_MsgDepositClaim)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgDepositClaim) Interface() protoreflect.ProtoMessage {
	return (*MsgDepositClaim)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgDepositClaim) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.EventNonce != uint64(0) {
		value := protoreflect.ValueOfUint64(x.EventNonce)
		if !f(fd_MsgDepositClaim_event_nonce, value) {
			return
		}
	}
	if x.BlockHeight != uint64(0) {
		value := protoreflect.ValueOfUint64(x.BlockHeight)
		if !f(fd_MsgDepositClaim_block_height, value) {
			return
		}
	}
	if x.TokenContract != "" {
		value := protoreflect.ValueOfString(x.TokenContract)
		if !f(fd_MsgDepositClaim_token_contract, value) {
			return
		}
	}
	if x.Amount != "" {
		value := protoreflect.ValueOfString(x.Amount)
		if !f(fd_MsgDepositClaim_amount, value) {
			return
		}
	}
	if x.EthSender != "" {
		value := protoreflect.ValueOfString(x.EthSender)
		if !f(fd_MsgDepositClaim_eth_sender, value) {
			return
		}
	}
	if x.FxReceiver != "" {
		value := protoreflect.ValueOfString(x.FxReceiver)
		if !f(fd_MsgDepositClaim_fx_receiver, value) {
			return
		}
	}
	if x.TargetIbc != "" {
		value := protoreflect.ValueOfString(x.TargetIbc)
		if !f(fd_MsgDepositClaim_target_ibc, value) {
			return
		}
	}
	if x.Orchestrator != "" {
		value := protoreflect.ValueOfString(x.Orchestrator)
		if !f(fd_MsgDepositClaim_orchestrator, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgDepositClaim) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "fx.gravity.v1.MsgDepositClaim.event_nonce":
		return x.EventNonce != uint64(0)
	case "fx.gravity.v1.MsgDepositClaim.block_height":
		return x.BlockHeight != uint64(0)
	case "fx.gravity.v1.MsgDepositClaim.token_contract":
		return x.TokenContract != ""
	case "fx.gravity.v1.MsgDepositClaim.amount":
		return x.Amount != ""
	case "fx.gravity.v1.MsgDepositClaim.eth_sender":
		return x.EthSender != ""
	case "fx.gravity.v1.MsgDepositClaim.fx_receiver":
		return x.FxReceiver != ""
	case "fx.gravity.v1.MsgDepositClaim.target_ibc":
		return x.TargetIbc != ""
	case "fx.gravity.v1.MsgDepositClaim.orchestrator":
		return x.Orchestrator != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.v1.MsgDepositClaim"))
		}
		panic(fmt.Errorf("message fx.gravity.v1.MsgDepositClaim does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgDepositClaim) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "fx.gravity.v1.MsgDepositClaim.event_nonce":
		x.EventNonce = uint64(0)
	case "fx.gravity.v1.MsgDepositClaim.block_height":
		x.BlockHeight = uint64(0)
	case "fx.gravity.v1.MsgDepositClaim.token_contract":
		x.TokenContract = ""
	case "fx.gravity.v1.MsgDepositClaim.amount":
		x.Amount = ""
	case "fx.gravity.v1.MsgDepositClaim.eth_sender":
		x.EthSender = ""
	case "fx.gravity.v1.MsgDepositClaim.fx_receiver":
		x.FxReceiver = ""
	case "fx.gravity.v1.MsgDepositClaim.target_ibc":
		x.TargetIbc = ""
	case "fx.gravity.v1.MsgDepositClaim.orchestrator":
		x.Orchestrator = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.v1.MsgDepositClaim"))
		}
		panic(fmt.Errorf("message fx.gravity.v1.MsgDepositClaim does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgDepositClaim) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "fx.gravity.v1.MsgDepositClaim.event_nonce":
		value := x.EventNonce
		return protoreflect.ValueOfUint64(value)
	case "fx.gravity.v1.MsgDepositClaim.block_height":
		value := x.BlockHeight
		return protoreflect.ValueOfUint64(value)
	case "fx.gravity.v1.MsgDepositClaim.token_contract":
		value := x.TokenContract
		return protoreflect.ValueOfString(value)
	case "fx.gravity.v1.MsgDepositClaim.amount":
		value := x.Amount
		return protoreflect.ValueOfString(value)
	case "fx.gravity.v1.MsgDepositClaim.eth_sender":
		value := x.EthSender
		return protoreflect.ValueOfString(value)
	case "fx.gravity.v1.MsgDepositClaim.fx_receiver":
		value := x.FxReceiver
		return protoreflect.ValueOfString(value)
	case "fx.gravity.v1.MsgDepositClaim.target_ibc":
		value := x.TargetIbc
		return protoreflect.ValueOfString(value)
	case "fx.gravity.v1.MsgDepositClaim.orchestrator":
		value := x.Orchestrator
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.v1.MsgDepositClaim"))
		}
		panic(fmt.Errorf("message fx.gravity.v1.MsgDepositClaim does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgDepositClaim) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "fx.gravity.v1.MsgDepositClaim.event_nonce":
		x.EventNonce = value.Uint()
	case "fx.gravity.v1.MsgDepositClaim.block_height":
		x.BlockHeight = value.Uint()
	case "fx.gravity.v1.MsgDepositClaim.token_contract":
		x.TokenContract = value.Interface().(string)
	case "fx.gravity.v1.MsgDepositClaim.amount":
		x.Amount = value.Interface().(string)
	case "fx.gravity.v1.MsgDepositClaim.eth_sender":
		x.EthSender = value.Interface().(string)
	case "fx.gravity.v1.MsgDepositClaim.fx_receiver":
		x.FxReceiver = value.Interface().(string)
	case "fx.gravity.v1.MsgDepositClaim.target_ibc":
		x.TargetIbc = value.Interface().(string)
	case "fx.gravity.v1.MsgDepositClaim.orchestrator":
		x.Orchestrator = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.v1.MsgDepositClaim"))
		}
		panic(fmt.Errorf("message fx.gravity.v1.MsgDepositClaim does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgDepositClaim) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "fx.gravity.v1.MsgDepositClaim.event_nonce":
		panic(fmt.Errorf("field event_nonce of message fx.gravity.v1.MsgDepositClaim is not mutable"))
	case "fx.gravity.v1.MsgDepositClaim.block_height":
		panic(fmt.Errorf("field block_height of message fx.gravity.v1.MsgDepositClaim is not mutable"))
	case "fx.gravity.v1.MsgDepositClaim.token_contract":
		panic(fmt.Errorf("field token_contract of message fx.gravity.v1.MsgDepositClaim is not mutable"))
	case "fx.gravity.v1.MsgDepositClaim.amount":
		panic(fmt.Errorf("field amount of message fx.gravity.v1.MsgDepositClaim is not mutable"))
	case "fx.gravity.v1.MsgDepositClaim.eth_sender":
		panic(fmt.Errorf("field eth_sender of message fx.gravity.v1.MsgDepositClaim is not mutable"))
	case "fx.gravity.v1.MsgDepositClaim.fx_receiver":
		panic(fmt.Errorf("field fx_receiver of message fx.gravity.v1.MsgDepositClaim is not mutable"))
	case "fx.gravity.v1.MsgDepositClaim.target_ibc":
		panic(fmt.Errorf("field target_ibc of message fx.gravity.v1.MsgDepositClaim is not mutable"))
	case "fx.gravity.v1.MsgDepositClaim.orchestrator":
		panic(fmt.Errorf("field orchestrator of message fx.gravity.v1.MsgDepositClaim is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.v1.MsgDepositClaim"))
		}
		panic(fmt.Errorf("message fx.gravity.v1.MsgDepositClaim does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgDepositClaim) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "fx.gravity.v1.MsgDepositClaim.event_nonce":
		return protoreflect.ValueOfUint64(uint64(0))
	case "fx.gravity.v1.MsgDepositClaim.block_height":
		return protoreflect.ValueOfUint64(uint64(0))
	case "fx.gravity.v1.MsgDepositClaim.token_contract":
		return protoreflect.ValueOfString("")
	case "fx.gravity.v1.MsgDepositClaim.amount":
		return protoreflect.ValueOfString("")
	case "fx.gravity.v1.MsgDepositClaim.eth_sender":
		return protoreflect.ValueOfString("")
	case "fx.gravity.v1.MsgDepositClaim.fx_receiver":
		return protoreflect.ValueOfString("")
	case "fx.gravity.v1.MsgDepositClaim.target_ibc":
		return protoreflect.ValueOfString("")
	case "fx.gravity.v1.MsgDepositClaim.orchestrator":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.v1.MsgDepositClaim"))
		}
		panic(fmt.Errorf("message fx.gravity.v1.MsgDepositClaim does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgDepositClaim) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in fx.gravity.v1.MsgDepositClaim", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgDepositClaim) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgDepositClaim) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgDepositClaim) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgDepositClaim) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgDepositClaim)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.EventNonce != 0 {
			n += 1 + runtime.Sov(uint64(x.EventNonce))
		}
		if x.BlockHeight != 0 {
			n += 1 + runtime.Sov(uint64(x.BlockHeight))
		}
		l = len(x.TokenContract)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Amount)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.EthSender)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.FxReceiver)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.TargetIbc)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Orchestrator)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgDepositClaim)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Orchestrator) > 0 {
			i -= len(x.Orchestrator)
			copy(dAtA[i:], x.Orchestrator)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Orchestrator)))
			i--
			dAtA[i] = 0x42
		}
		if len(x.TargetIbc) > 0 {
			i -= len(x.TargetIbc)
			copy(dAtA[i:], x.TargetIbc)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.TargetIbc)))
			i--
			dAtA[i] = 0x3a
		}
		if len(x.FxReceiver) > 0 {
			i -= len(x.FxReceiver)
			copy(dAtA[i:], x.FxReceiver)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.FxReceiver)))
			i--
			dAtA[i] = 0x32
		}
		if len(x.EthSender) > 0 {
			i -= len(x.EthSender)
			copy(dAtA[i:], x.EthSender)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.EthSender)))
			i--
			dAtA[i] = 0x2a
		}
		if len(x.Amount) > 0 {
			i -= len(x.Amount)
			copy(dAtA[i:], x.Amount)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Amount)))
			i--
			dAtA[i] = 0x22
		}
		if len(x.TokenContract) > 0 {
			i -= len(x.TokenContract)
			copy(dAtA[i:], x.TokenContract)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.TokenContract)))
			i--
			dAtA[i] = 0x1a
		}
		if x.BlockHeight != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.BlockHeight))
			i--
			dAtA[i] = 0x10
		}
		if x.EventNonce != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.EventNonce))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgDepositClaim)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgDepositClaim: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgDepositClaim: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field EventNonce", wireType)
				}
				x.EventNonce = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.EventNonce |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BlockHeight", wireType)
				}
				x.BlockHeight = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.BlockHeight |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TokenContract", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.TokenContract = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Amount", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Amount = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 5:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field EthSender", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.EthSender = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 6:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field FxReceiver", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.FxReceiver = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 7:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TargetIbc", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.TargetIbc = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 8:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Orchestrator", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Orchestrator = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgWithdrawClaim                protoreflect.MessageDescriptor
	fd_MsgWithdrawClaim_event_nonce    protoreflect.FieldDescriptor
	fd_MsgWithdrawClaim_block_height   protoreflect.FieldDescriptor
	fd_MsgWithdrawClaim_batch_nonce    protoreflect.FieldDescriptor
	fd_MsgWithdrawClaim_token_contract protoreflect.FieldDescriptor
	fd_MsgWithdrawClaim_orchestrator   protoreflect.FieldDescriptor
)

func init() {
	file_fx_gravity_v1_gravity_legacy_proto_init()
	md_MsgWithdrawClaim = File_fx_gravity_v1_gravity_legacy_proto.Messages().ByName("MsgWithdrawClaim")
	fd_MsgWithdrawClaim_event_nonce = md_MsgWithdrawClaim.Fields().ByName("event_nonce")
	fd_MsgWithdrawClaim_block_height = md_MsgWithdrawClaim.Fields().ByName("block_height")
	fd_MsgWithdrawClaim_batch_nonce = md_MsgWithdrawClaim.Fields().ByName("batch_nonce")
	fd_MsgWithdrawClaim_token_contract = md_MsgWithdrawClaim.Fields().ByName("token_contract")
	fd_MsgWithdrawClaim_orchestrator = md_MsgWithdrawClaim.Fields().ByName("orchestrator")
}

var _ protoreflect.Message = (*fastReflection_MsgWithdrawClaim)(nil)

type fastReflection_MsgWithdrawClaim MsgWithdrawClaim

func (x *MsgWithdrawClaim) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgWithdrawClaim)(x)
}

func (x *MsgWithdrawClaim) slowProtoReflect() protoreflect.Message {
	mi := &file_fx_gravity_v1_gravity_legacy_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgWithdrawClaim_messageType fastReflection_MsgWithdrawClaim_messageType
var _ protoreflect.MessageType = fastReflection_MsgWithdrawClaim_messageType{}

type fastReflection_MsgWithdrawClaim_messageType struct{}

func (x fastReflection_MsgWithdrawClaim_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgWithdrawClaim)(nil)
}
func (x fastReflection_MsgWithdrawClaim_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgWithdrawClaim)
}
func (x fastReflection_MsgWithdrawClaim_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgWithdrawClaim
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgWithdrawClaim) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgWithdrawClaim
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgWithdrawClaim) Type() protoreflect.MessageType {
	return _fastReflection_MsgWithdrawClaim_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgWithdrawClaim) New() protoreflect.Message {
	return new(fastReflection_MsgWithdrawClaim)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgWithdrawClaim) Interface() protoreflect.ProtoMessage {
	return (*MsgWithdrawClaim)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgWithdrawClaim) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.EventNonce != uint64(0) {
		value := protoreflect.ValueOfUint64(x.EventNonce)
		if !f(fd_MsgWithdrawClaim_event_nonce, value) {
			return
		}
	}
	if x.BlockHeight != uint64(0) {
		value := protoreflect.ValueOfUint64(x.BlockHeight)
		if !f(fd_MsgWithdrawClaim_block_height, value) {
			return
		}
	}
	if x.BatchNonce != uint64(0) {
		value := protoreflect.ValueOfUint64(x.BatchNonce)
		if !f(fd_MsgWithdrawClaim_batch_nonce, value) {
			return
		}
	}
	if x.TokenContract != "" {
		value := protoreflect.ValueOfString(x.TokenContract)
		if !f(fd_MsgWithdrawClaim_token_contract, value) {
			return
		}
	}
	if x.Orchestrator != "" {
		value := protoreflect.ValueOfString(x.Orchestrator)
		if !f(fd_MsgWithdrawClaim_orchestrator, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgWithdrawClaim) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "fx.gravity.v1.MsgWithdrawClaim.event_nonce":
		return x.EventNonce != uint64(0)
	case "fx.gravity.v1.MsgWithdrawClaim.block_height":
		return x.BlockHeight != uint64(0)
	case "fx.gravity.v1.MsgWithdrawClaim.batch_nonce":
		return x.BatchNonce != uint64(0)
	case "fx.gravity.v1.MsgWithdrawClaim.token_contract":
		return x.TokenContract != ""
	case "fx.gravity.v1.MsgWithdrawClaim.orchestrator":
		return x.Orchestrator != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.v1.MsgWithdrawClaim"))
		}
		panic(fmt.Errorf("message fx.gravity.v1.MsgWithdrawClaim does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgWithdrawClaim) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "fx.gravity.v1.MsgWithdrawClaim.event_nonce":
		x.EventNonce = uint64(0)
	case "fx.gravity.v1.MsgWithdrawClaim.block_height":
		x.BlockHeight = uint64(0)
	case "fx.gravity.v1.MsgWithdrawClaim.batch_nonce":
		x.BatchNonce = uint64(0)
	case "fx.gravity.v1.MsgWithdrawClaim.token_contract":
		x.TokenContract = ""
	case "fx.gravity.v1.MsgWithdrawClaim.orchestrator":
		x.Orchestrator = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.v1.MsgWithdrawClaim"))
		}
		panic(fmt.Errorf("message fx.gravity.v1.MsgWithdrawClaim does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgWithdrawClaim) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "fx.gravity.v1.MsgWithdrawClaim.event_nonce":
		value := x.EventNonce
		return protoreflect.ValueOfUint64(value)
	case "fx.gravity.v1.MsgWithdrawClaim.block_height":
		value := x.BlockHeight
		return protoreflect.ValueOfUint64(value)
	case "fx.gravity.v1.MsgWithdrawClaim.batch_nonce":
		value := x.BatchNonce
		return protoreflect.ValueOfUint64(value)
	case "fx.gravity.v1.MsgWithdrawClaim.token_contract":
		value := x.TokenContract
		return protoreflect.ValueOfString(value)
	case "fx.gravity.v1.MsgWithdrawClaim.orchestrator":
		value := x.Orchestrator
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.v1.MsgWithdrawClaim"))
		}
		panic(fmt.Errorf("message fx.gravity.v1.MsgWithdrawClaim does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgWithdrawClaim) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "fx.gravity.v1.MsgWithdrawClaim.event_nonce":
		x.EventNonce = value.Uint()
	case "fx.gravity.v1.MsgWithdrawClaim.block_height":
		x.BlockHeight = value.Uint()
	case "fx.gravity.v1.MsgWithdrawClaim.batch_nonce":
		x.BatchNonce = value.Uint()
	case "fx.gravity.v1.MsgWithdrawClaim.token_contract":
		x.TokenContract = value.Interface().(string)
	case "fx.gravity.v1.MsgWithdrawClaim.orchestrator":
		x.Orchestrator = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.v1.MsgWithdrawClaim"))
		}
		panic(fmt.Errorf("message fx.gravity.v1.MsgWithdrawClaim does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgWithdrawClaim) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "fx.gravity.v1.MsgWithdrawClaim.event_nonce":
		panic(fmt.Errorf("field event_nonce of message fx.gravity.v1.MsgWithdrawClaim is not mutable"))
	case "fx.gravity.v1.MsgWithdrawClaim.block_height":
		panic(fmt.Errorf("field block_height of message fx.gravity.v1.MsgWithdrawClaim is not mutable"))
	case "fx.gravity.v1.MsgWithdrawClaim.batch_nonce":
		panic(fmt.Errorf("field batch_nonce of message fx.gravity.v1.MsgWithdrawClaim is not mutable"))
	case "fx.gravity.v1.MsgWithdrawClaim.token_contract":
		panic(fmt.Errorf("field token_contract of message fx.gravity.v1.MsgWithdrawClaim is not mutable"))
	case "fx.gravity.v1.MsgWithdrawClaim.orchestrator":
		panic(fmt.Errorf("field orchestrator of message fx.gravity.v1.MsgWithdrawClaim is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.v1.MsgWithdrawClaim"))
		}
		panic(fmt.Errorf("message fx.gravity.v1.MsgWithdrawClaim does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgWithdrawClaim) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "fx.gravity.v1.MsgWithdrawClaim.event_nonce":
		return protoreflect.ValueOfUint64(uint64(0))
	case "fx.gravity.v1.MsgWithdrawClaim.block_height":
		return protoreflect.ValueOfUint64(uint64(0))
	case "fx.gravity.v1.MsgWithdrawClaim.batch_nonce":
		return protoreflect.ValueOfUint64(uint64(0))
	case "fx.gravity.v1.MsgWithdrawClaim.token_contract":
		return protoreflect.ValueOfString("")
	case "fx.gravity.v1.MsgWithdrawClaim.orchestrator":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.v1.MsgWithdrawClaim"))
		}
		panic(fmt.Errorf("message fx.gravity.v1.MsgWithdrawClaim does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgWithdrawClaim) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in fx.gravity.v1.MsgWithdrawClaim", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgWithdrawClaim) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgWithdrawClaim) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgWithdrawClaim) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgWithdrawClaim) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgWithdrawClaim)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.EventNonce != 0 {
			n += 1 + runtime.Sov(uint64(x.EventNonce))
		}
		if x.BlockHeight != 0 {
			n += 1 + runtime.Sov(uint64(x.BlockHeight))
		}
		if x.BatchNonce != 0 {
			n += 1 + runtime.Sov(uint64(x.BatchNonce))
		}
		l = len(x.TokenContract)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Orchestrator)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgWithdrawClaim)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Orchestrator) > 0 {
			i -= len(x.Orchestrator)
			copy(dAtA[i:], x.Orchestrator)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Orchestrator)))
			i--
			dAtA[i] = 0x2a
		}
		if len(x.TokenContract) > 0 {
			i -= len(x.TokenContract)
			copy(dAtA[i:], x.TokenContract)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.TokenContract)))
			i--
			dAtA[i] = 0x22
		}
		if x.BatchNonce != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.BatchNonce))
			i--
			dAtA[i] = 0x18
		}
		if x.BlockHeight != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.BlockHeight))
			i--
			dAtA[i] = 0x10
		}
		if x.EventNonce != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.EventNonce))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgWithdrawClaim)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgWithdrawClaim: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgWithdrawClaim: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field EventNonce", wireType)
				}
				x.EventNonce = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.EventNonce |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BlockHeight", wireType)
				}
				x.BlockHeight = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.BlockHeight |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 3:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BatchNonce", wireType)
				}
				x.BatchNonce = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.BatchNonce |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TokenContract", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.TokenContract = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 5:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Orchestrator", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Orchestrator = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgCancelSendToEth                protoreflect.MessageDescriptor
	fd_MsgCancelSendToEth_transaction_id protoreflect.FieldDescriptor
	fd_MsgCancelSendToEth_sender         protoreflect.FieldDescriptor
)

func init() {
	file_fx_gravity_v1_gravity_legacy_proto_init()
	md_MsgCancelSendToEth = File_fx_gravity_v1_gravity_legacy_proto.Messages().ByName("MsgCancelSendToEth")
	fd_MsgCancelSendToEth_transaction_id = md_MsgCancelSendToEth.Fields().ByName("transaction_id")
	fd_MsgCancelSendToEth_sender = md_MsgCancelSendToEth.Fields().ByName("sender")
}

var _ protoreflect.Message = (*fastReflection_MsgCancelSendToEth)(nil)

type fastReflection_MsgCancelSendToEth MsgCancelSendToEth

func (x *MsgCancelSendToEth) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgCancelSendToEth)(x)
}

func (x *MsgCancelSendToEth) slowProtoReflect() protoreflect.Message {
	mi := &file_fx_gravity_v1_gravity_legacy_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgCancelSendToEth_messageType fastReflection_MsgCancelSendToEth_messageType
var _ protoreflect.MessageType = fastReflection_MsgCancelSendToEth_messageType{}

type fastReflection_MsgCancelSendToEth_messageType struct{}

func (x fastReflection_MsgCancelSendToEth_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgCancelSendToEth)(nil)
}
func (x fastReflection_MsgCancelSendToEth_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgCancelSendToEth)
}
func (x fastReflection_MsgCancelSendToEth_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgCancelSendToEth
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgCancelSendToEth) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgCancelSendToEth
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgCancelSendToEth) Type() protoreflect.MessageType {
	return _fastReflection_MsgCancelSendToEth_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgCancelSendToEth) New() protoreflect.Message {
	return new(fastReflection_MsgCancelSendToEth)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgCancelSendToEth) Interface() protoreflect.ProtoMessage {
	return (*MsgCancelSendToEth)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgCancelSendToEth) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.TransactionId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.TransactionId)
		if !f(fd_MsgCancelSendToEth_transaction_id, value) {
			return
		}
	}
	if x.Sender != "" {
		value := protoreflect.ValueOfString(x.Sender)
		if !f(fd_MsgCancelSendToEth_sender, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgCancelSendToEth) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "fx.gravity.v1.MsgCancelSendToEth.transaction_id":
		return x.TransactionId != uint64(0)
	case "fx.gravity.v1.MsgCancelSendToEth.sender":
		return x.Sender != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.v1.MsgCancelSendToEth"))
		}
		panic(fmt.Errorf("message fx.gravity.v1.MsgCancelSendToEth does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgCancelSendToEth) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "fx.gravity.v1.MsgCancelSendToEth.transaction_id":
		x.TransactionId = uint64(0)
	case "fx.gravity.v1.MsgCancelSendToEth.sender":
		x.Sender = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.v1.MsgCancelSendToEth"))
		}
		panic(fmt.Errorf("message fx.gravity.v1.MsgCancelSendToEth does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgCancelSendToEth) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "fx.gravity.v1.MsgCancelSendToEth.transaction_id":
		value := x.TransactionId
		return protoreflect.ValueOfUint64(value)
	case "fx.gravity.v1.MsgCancelSendToEth.sender":
		value := x.Sender
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.v1.MsgCancelSendToEth"))
		}
		panic(fmt.Errorf("message fx.gravity.v1.MsgCancelSendToEth does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgCancelSendToEth) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "fx.gravity.v1.MsgCancelSendToEth.transaction_id":
		x.TransactionId = value.Uint()
	case "fx.gravity.v1.MsgCancelSendToEth.sender":
		x.Sender = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.v1.MsgCancelSendToEth"))
		}
		panic(fmt.Errorf("message fx.gravity.v1.MsgCancelSendToEth does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgCancelSendToEth) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "fx.gravity.v1.MsgCancelSendToEth.transaction_id":
		panic(fmt.Errorf("field transaction_id of message fx.gravity.v1.MsgCancelSendToEth is not mutable"))
	case "fx.gravity.v1.MsgCancelSendToEth.sender":
		panic(fmt.Errorf("field sender of message fx.gravity.v1.MsgCancelSendToEth is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.v1.MsgCancelSendToEth"))
		}
		panic(fmt.Errorf("message fx.gravity.v1.MsgCancelSendToEth does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgCancelSendToEth) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "fx.gravity.v1.MsgCancelSendToEth.transaction_id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "fx.gravity.v1.MsgCancelSendToEth.sender":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.v1.MsgCancelSendToEth"))
		}
		panic(fmt.Errorf("message fx.gravity.v1.MsgCancelSendToEth does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgCancelSendToEth) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in fx.gravity.v1.MsgCancelSendToEth", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgCancelSendToEth) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgCancelSendToEth) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgCancelSendToEth) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgCancelSendToEth) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgCancelSendToEth)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.TransactionId != 0 {
			n += 1 + runtime.Sov(uint64(x.TransactionId))
		}
		l = len(x.Sender)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgCancelSendToEth)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Sender) > 0 {
			i -= len(x.Sender)
			copy(dAtA[i:], x.Sender)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Sender)))
			i--
			dAtA[i] = 0x12
		}
		if x.TransactionId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.TransactionId))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgCancelSendToEth)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgCancelSendToEth: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgCancelSendToEth: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TransactionId", wireType)
				}
				x.TransactionId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.TransactionId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Sender", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Sender = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_MsgValsetUpdatedClaim_4_list)(nil)

type _MsgValsetUpdatedClaim_4_list struct {
	list *[]*BridgeValidator
}

func (x *_MsgValsetUpdatedClaim_4_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_MsgValsetUpdatedClaim_4_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_MsgValsetUpdatedClaim_4_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*BridgeValidator)
	(*x.list)[i] = concreteValue
}

func (x *_MsgValsetUpdatedClaim_4_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*BridgeValidator)
	*x.list = append(*x.list, concreteValue)
}

func (x *_MsgValsetUpdatedClaim_4_list) AppendMutable() protoreflect.Value {
	v := new(BridgeValidator)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgValsetUpdatedClaim_4_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_MsgValsetUpdatedClaim_4_list) NewElement() protoreflect.Value {
	v := new(BridgeValidator)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgValsetUpdatedClaim_4_list) IsValid() bool {
	return x.list != nil
}

var (
	md_MsgValsetUpdatedClaim              protoreflect.MessageDescriptor
	fd_MsgValsetUpdatedClaim_event_nonce  protoreflect.FieldDescriptor
	fd_MsgValsetUpdatedClaim_block_height protoreflect.FieldDescriptor
	fd_MsgValsetUpdatedClaim_valset_nonce protoreflect.FieldDescriptor
	fd_MsgValsetUpdatedClaim_members      protoreflect.FieldDescriptor
	fd_MsgValsetUpdatedClaim_orchestrator protoreflect.FieldDescriptor
)

func init() {
	file_fx_gravity_v1_gravity_legacy_proto_init()
	md_MsgValsetUpdatedClaim = File_fx_gravity_v1_gravity_legacy_proto.Messages().ByName("MsgValsetUpdatedClaim")
	fd_MsgValsetUpdatedClaim_event_nonce = md_MsgValsetUpdatedClaim.Fields().ByName("event_nonce")
	fd_MsgValsetUpdatedClaim_block_height = md_MsgValsetUpdatedClaim.Fields().ByName("block_height")
	fd_MsgValsetUpdatedClaim_valset_nonce = md_MsgValsetUpdatedClaim.Fields().ByName("valset_nonce")
	fd_MsgValsetUpdatedClaim_members = md_MsgValsetUpdatedClaim.Fields().ByName("members")
	fd_MsgValsetUpdatedClaim_orchestrator = md_MsgValsetUpdatedClaim.Fields().ByName("orchestrator")
}

var _ protoreflect.Message = (*fastReflection_MsgValsetUpdatedClaim)(nil)

type fastReflection_MsgValsetUpdatedClaim MsgValsetUpdatedClaim

func (x *MsgValsetUpdatedClaim) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgValsetUpdatedClaim)(x)
}

func (x *MsgValsetUpdatedClaim) slowProtoReflect() protoreflect.Message {
	mi := &file_fx_gravity_v1_gravity_legacy_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgValsetUpdatedClaim_messageType fastReflection_MsgValsetUpdatedClaim_messageType
var _ protoreflect.MessageType = fastReflection_MsgValsetUpdatedClaim_messageType{}

type fastReflection_MsgValsetUpdatedClaim_messageType struct{}

func (x fastReflection_MsgValsetUpdatedClaim_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgValsetUpdatedClaim)(nil)
}
func (x fastReflection_MsgValsetUpdatedClaim_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgValsetUpdatedClaim)
}
func (x fastReflection_MsgValsetUpdatedClaim_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgValsetUpdatedClaim
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgValsetUpdatedClaim) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgValsetUpdatedClaim
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgValsetUpdatedClaim) Type() protoreflect.MessageType {
	return _fastReflection_MsgValsetUpdatedClaim_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgValsetUpdatedClaim) New() protoreflect.Message {
	return new(fastReflection_MsgValsetUpdatedClaim)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgValsetUpdatedClaim) Interface() protoreflect.ProtoMessage {
	return (*MsgValsetUpdatedClaim)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgValsetUpdatedClaim) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.EventNonce != uint64(0) {
		value := protoreflect.ValueOfUint64(x.EventNonce)
		if !f(fd_MsgValsetUpdatedClaim_event_nonce, value) {
			return
		}
	}
	if x.BlockHeight != uint64(0) {
		value := protoreflect.ValueOfUint64(x.BlockHeight)
		if !f(fd_MsgValsetUpdatedClaim_block_height, value) {
			return
		}
	}
	if x.ValsetNonce != uint64(0) {
		value := protoreflect.ValueOfUint64(x.ValsetNonce)
		if !f(fd_MsgValsetUpdatedClaim_valset_nonce, value) {
			return
		}
	}
	if len(x.Members) != 0 {
		value := protoreflect.ValueOfList(&_MsgValsetUpdatedClaim_4_list{list: &x.Members})
		if !f(fd_MsgValsetUpdatedClaim_members, value) {
			return
		}
	}
	if x.Orchestrator != "" {
		value := protoreflect.ValueOfString(x.Orchestrator)
		if !f(fd_MsgValsetUpdatedClaim_orchestrator, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgValsetUpdatedClaim) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "fx.gravity.v1.MsgValsetUpdatedClaim.event_nonce":
		return x.EventNonce != uint64(0)
	case "fx.gravity.v1.MsgValsetUpdatedClaim.block_height":
		return x.BlockHeight != uint64(0)
	case "fx.gravity.v1.MsgValsetUpdatedClaim.valset_nonce":
		return x.ValsetNonce != uint64(0)
	case "fx.gravity.v1.MsgValsetUpdatedClaim.members":
		return len(x.Members) != 0
	case "fx.gravity.v1.MsgValsetUpdatedClaim.orchestrator":
		return x.Orchestrator != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.v1.MsgValsetUpdatedClaim"))
		}
		panic(fmt.Errorf("message fx.gravity.v1.MsgValsetUpdatedClaim does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgValsetUpdatedClaim) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "fx.gravity.v1.MsgValsetUpdatedClaim.event_nonce":
		x.EventNonce = uint64(0)
	case "fx.gravity.v1.MsgValsetUpdatedClaim.block_height":
		x.BlockHeight = uint64(0)
	case "fx.gravity.v1.MsgValsetUpdatedClaim.valset_nonce":
		x.ValsetNonce = uint64(0)
	case "fx.gravity.v1.MsgValsetUpdatedClaim.members":
		x.Members = nil
	case "fx.gravity.v1.MsgValsetUpdatedClaim.orchestrator":
		x.Orchestrator = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.v1.MsgValsetUpdatedClaim"))
		}
		panic(fmt.Errorf("message fx.gravity.v1.MsgValsetUpdatedClaim does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgValsetUpdatedClaim) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "fx.gravity.v1.MsgValsetUpdatedClaim.event_nonce":
		value := x.EventNonce
		return protoreflect.ValueOfUint64(value)
	case "fx.gravity.v1.MsgValsetUpdatedClaim.block_height":
		value := x.BlockHeight
		return protoreflect.ValueOfUint64(value)
	case "fx.gravity.v1.MsgValsetUpdatedClaim.valset_nonce":
		value := x.ValsetNonce
		return protoreflect.ValueOfUint64(value)
	case "fx.gravity.v1.MsgValsetUpdatedClaim.members":
		if len(x.Members) == 0 {
			return protoreflect.ValueOfList(&_MsgValsetUpdatedClaim_4_list{})
		}
		listValue := &_MsgValsetUpdatedClaim_4_list{list: &x.Members}
		return protoreflect.ValueOfList(listValue)
	case "fx.gravity.v1.MsgValsetUpdatedClaim.orchestrator":
		value := x.Orchestrator
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.v1.MsgValsetUpdatedClaim"))
		}
		panic(fmt.Errorf("message fx.gravity.v1.MsgValsetUpdatedClaim does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgValsetUpdatedClaim) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "fx.gravity.v1.MsgValsetUpdatedClaim.event_nonce":
		x.EventNonce = value.Uint()
	case "fx.gravity.v1.MsgValsetUpdatedClaim.block_height":
		x.BlockHeight = value.Uint()
	case "fx.gravity.v1.MsgValsetUpdatedClaim.valset_nonce":
		x.ValsetNonce = value.Uint()
	case "fx.gravity.v1.MsgValsetUpdatedClaim.members":
		lv := value.List()
		clv := lv.(*_MsgValsetUpdatedClaim_4_list)
		x.Members = *clv.list
	case "fx.gravity.v1.MsgValsetUpdatedClaim.orchestrator":
		x.Orchestrator = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.v1.MsgValsetUpdatedClaim"))
		}
		panic(fmt.Errorf("message fx.gravity.v1.MsgValsetUpdatedClaim does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgValsetUpdatedClaim) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "fx.gravity.v1.MsgValsetUpdatedClaim.members":
		if x.Members == nil {
			x.Members = []*BridgeValidator{}
		}
		value := &_MsgValsetUpdatedClaim_4_list{list: &x.Members}
		return protoreflect.ValueOfList(value)
	case "fx.gravity.v1.MsgValsetUpdatedClaim.event_nonce":
		panic(fmt.Errorf("field event_nonce of message fx.gravity.v1.MsgValsetUpdatedClaim is not mutable"))
	case "fx.gravity.v1.MsgValsetUpdatedClaim.block_height":
		panic(fmt.Errorf("field block_height of message fx.gravity.v1.MsgValsetUpdatedClaim is not mutable"))
	case "fx.gravity.v1.MsgValsetUpdatedClaim.valset_nonce":
		panic(fmt.Errorf("field valset_nonce of message fx.gravity.v1.MsgValsetUpdatedClaim is not mutable"))
	case "fx.gravity.v1.MsgValsetUpdatedClaim.orchestrator":
		panic(fmt.Errorf("field orchestrator of message fx.gravity.v1.MsgValsetUpdatedClaim is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.v1.MsgValsetUpdatedClaim"))
		}
		panic(fmt.Errorf("message fx.gravity.v1.MsgValsetUpdatedClaim does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgValsetUpdatedClaim) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "fx.gravity.v1.MsgValsetUpdatedClaim.event_nonce":
		return protoreflect.ValueOfUint64(uint64(0))
	case "fx.gravity.v1.MsgValsetUpdatedClaim.block_height":
		return protoreflect.ValueOfUint64(uint64(0))
	case "fx.gravity.v1.MsgValsetUpdatedClaim.valset_nonce":
		return protoreflect.ValueOfUint64(uint64(0))
	case "fx.gravity.v1.MsgValsetUpdatedClaim.members":
		list := []*BridgeValidator{}
		return protoreflect.ValueOfList(&_MsgValsetUpdatedClaim_4_list{list: &list})
	case "fx.gravity.v1.MsgValsetUpdatedClaim.orchestrator":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.v1.MsgValsetUpdatedClaim"))
		}
		panic(fmt.Errorf("message fx.gravity.v1.MsgValsetUpdatedClaim does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgValsetUpdatedClaim) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in fx.gravity.v1.MsgValsetUpdatedClaim", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgValsetUpdatedClaim) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgValsetUpdatedClaim) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgValsetUpdatedClaim) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgValsetUpdatedClaim) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgValsetUpdatedClaim)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.EventNonce != 0 {
			n += 1 + runtime.Sov(uint64(x.EventNonce))
		}
		if x.BlockHeight != 0 {
			n += 1 + runtime.Sov(uint64(x.BlockHeight))
		}
		if x.ValsetNonce != 0 {
			n += 1 + runtime.Sov(uint64(x.ValsetNonce))
		}
		if len(x.Members) > 0 {
			for _, e := range x.Members {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		l = len(x.Orchestrator)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgValsetUpdatedClaim)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Orchestrator) > 0 {
			i -= len(x.Orchestrator)
			copy(dAtA[i:], x.Orchestrator)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Orchestrator)))
			i--
			dAtA[i] = 0x32
		}
		if len(x.Members) > 0 {
			for iNdEx := len(x.Members) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.Members[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x22
			}
		}
		if x.ValsetNonce != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.ValsetNonce))
			i--
			dAtA[i] = 0x18
		}
		if x.BlockHeight != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.BlockHeight))
			i--
			dAtA[i] = 0x10
		}
		if x.EventNonce != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.EventNonce))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgValsetUpdatedClaim)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgValsetUpdatedClaim: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgValsetUpdatedClaim: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field EventNonce", wireType)
				}
				x.EventNonce = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.EventNonce |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BlockHeight", wireType)
				}
				x.BlockHeight = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.BlockHeight |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 3:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ValsetNonce", wireType)
				}
				x.ValsetNonce = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.ValsetNonce |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Members", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Members = append(x.Members, &BridgeValidator{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Members[len(x.Members)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 6:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Orchestrator", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Orchestrator = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_BridgeValidator             protoreflect.MessageDescriptor
	fd_BridgeValidator_power       protoreflect.FieldDescriptor
	fd_BridgeValidator_eth_address protoreflect.FieldDescriptor
)

func init() {
	file_fx_gravity_v1_gravity_legacy_proto_init()
	md_BridgeValidator = File_fx_gravity_v1_gravity_legacy_proto.Messages().ByName("BridgeValidator")
	fd_BridgeValidator_power = md_BridgeValidator.Fields().ByName("power")
	fd_BridgeValidator_eth_address = md_BridgeValidator.Fields().ByName("eth_address")
}

var _ protoreflect.Message = (*fastReflection_BridgeValidator)(nil)

type fastReflection_BridgeValidator BridgeValidator

func (x *BridgeValidator) ProtoReflect() protoreflect.Message {
	return (*fastReflection_BridgeValidator)(x)
}

func (x *BridgeValidator) slowProtoReflect() protoreflect.Message {
	mi := &file_fx_gravity_v1_gravity_legacy_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_BridgeValidator_messageType fastReflection_BridgeValidator_messageType
var _ protoreflect.MessageType = fastReflection_BridgeValidator_messageType{}

type fastReflection_BridgeValidator_messageType struct{}

func (x fastReflection_BridgeValidator_messageType) Zero() protoreflect.Message {
	return (*fastReflection_BridgeValidator)(nil)
}
func (x fastReflection_BridgeValidator_messageType) New() protoreflect.Message {
	return new(fastReflection_BridgeValidator)
}
func (x fastReflection_BridgeValidator_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_BridgeValidator
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_BridgeValidator) Descriptor() protoreflect.MessageDescriptor {
	return md_BridgeValidator
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_BridgeValidator) Type() protoreflect.MessageType {
	return _fastReflection_BridgeValidator_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_BridgeValidator) New() protoreflect.Message {
	return new(fastReflection_BridgeValidator)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_BridgeValidator) Interface() protoreflect.ProtoMessage {
	return (*BridgeValidator)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_BridgeValidator) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Power != uint64(0) {
		value := protoreflect.ValueOfUint64(x.Power)
		if !f(fd_BridgeValidator_power, value) {
			return
		}
	}
	if x.EthAddress != "" {
		value := protoreflect.ValueOfString(x.EthAddress)
		if !f(fd_BridgeValidator_eth_address, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_BridgeValidator) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "fx.gravity.v1.BridgeValidator.power":
		return x.Power != uint64(0)
	case "fx.gravity.v1.BridgeValidator.eth_address":
		return x.EthAddress != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.v1.BridgeValidator"))
		}
		panic(fmt.Errorf("message fx.gravity.v1.BridgeValidator does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_BridgeValidator) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "fx.gravity.v1.BridgeValidator.power":
		x.Power = uint64(0)
	case "fx.gravity.v1.BridgeValidator.eth_address":
		x.EthAddress = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.v1.BridgeValidator"))
		}
		panic(fmt.Errorf("message fx.gravity.v1.BridgeValidator does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_BridgeValidator) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "fx.gravity.v1.BridgeValidator.power":
		value := x.Power
		return protoreflect.ValueOfUint64(value)
	case "fx.gravity.v1.BridgeValidator.eth_address":
		value := x.EthAddress
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.v1.BridgeValidator"))
		}
		panic(fmt.Errorf("message fx.gravity.v1.BridgeValidator does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_BridgeValidator) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "fx.gravity.v1.BridgeValidator.power":
		x.Power = value.Uint()
	case "fx.gravity.v1.BridgeValidator.eth_address":
		x.EthAddress = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.v1.BridgeValidator"))
		}
		panic(fmt.Errorf("message fx.gravity.v1.BridgeValidator does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_BridgeValidator) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "fx.gravity.v1.BridgeValidator.power":
		panic(fmt.Errorf("field power of message fx.gravity.v1.BridgeValidator is not mutable"))
	case "fx.gravity.v1.BridgeValidator.eth_address":
		panic(fmt.Errorf("field eth_address of message fx.gravity.v1.BridgeValidator is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.v1.BridgeValidator"))
		}
		panic(fmt.Errorf("message fx.gravity.v1.BridgeValidator does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_BridgeValidator) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "fx.gravity.v1.BridgeValidator.power":
		return protoreflect.ValueOfUint64(uint64(0))
	case "fx.gravity.v1.BridgeValidator.eth_address":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.v1.BridgeValidator"))
		}
		panic(fmt.Errorf("message fx.gravity.v1.BridgeValidator does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_BridgeValidator) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in fx.gravity.v1.BridgeValidator", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_BridgeValidator) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_BridgeValidator) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_BridgeValidator) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_BridgeValidator) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*BridgeValidator)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Power != 0 {
			n += 1 + runtime.Sov(uint64(x.Power))
		}
		l = len(x.EthAddress)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*BridgeValidator)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.EthAddress) > 0 {
			i -= len(x.EthAddress)
			copy(dAtA[i:], x.EthAddress)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.EthAddress)))
			i--
			dAtA[i] = 0x12
		}
		if x.Power != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Power))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*BridgeValidator)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: BridgeValidator: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: BridgeValidator: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Power", wireType)
				}
				x.Power = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Power |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field EthAddress", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.EthAddress = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgSetOrchestratorAddress              protoreflect.MessageDescriptor
	fd_MsgSetOrchestratorAddress_validator    protoreflect.FieldDescriptor
	fd_MsgSetOrchestratorAddress_orchestrator protoreflect.FieldDescriptor
	fd_MsgSetOrchestratorAddress_eth_address  protoreflect.FieldDescriptor
)

func init() {
	file_fx_gravity_v1_gravity_legacy_proto_init()
	md_MsgSetOrchestratorAddress = File_fx_gravity_v1_gravity_legacy_proto.Messages().ByName("MsgSetOrchestratorAddress")
	fd_MsgSetOrchestratorAddress_validator = md_MsgSetOrchestratorAddress.Fields().ByName("validator")
	fd_MsgSetOrchestratorAddress_orchestrator = md_MsgSetOrchestratorAddress.Fields().ByName("orchestrator")
	fd_MsgSetOrchestratorAddress_eth_address = md_MsgSetOrchestratorAddress.Fields().ByName("eth_address")
}

var _ protoreflect.Message = (*fastReflection_MsgSetOrchestratorAddress)(nil)

type fastReflection_MsgSetOrchestratorAddress MsgSetOrchestratorAddress

func (x *MsgSetOrchestratorAddress) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgSetOrchestratorAddress)(x)
}

func (x *MsgSetOrchestratorAddress) slowProtoReflect() protoreflect.Message {
	mi := &file_fx_gravity_v1_gravity_legacy_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgSetOrchestratorAddress_messageType fastReflection_MsgSetOrchestratorAddress_messageType
var _ protoreflect.MessageType = fastReflection_MsgSetOrchestratorAddress_messageType{}

type fastReflection_MsgSetOrchestratorAddress_messageType struct{}

func (x fastReflection_MsgSetOrchestratorAddress_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgSetOrchestratorAddress)(nil)
}
func (x fastReflection_MsgSetOrchestratorAddress_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgSetOrchestratorAddress)
}
func (x fastReflection_MsgSetOrchestratorAddress_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgSetOrchestratorAddress
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgSetOrchestratorAddress) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgSetOrchestratorAddress
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgSetOrchestratorAddress) Type() protoreflect.MessageType {
	return _fastReflection_MsgSetOrchestratorAddress_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgSetOrchestratorAddress) New() protoreflect.Message {
	return new(fastReflection_MsgSetOrchestratorAddress)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgSetOrchestratorAddress) Interface() protoreflect.ProtoMessage {
	return (*MsgSetOrchestratorAddress)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgSetOrchestratorAddress) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Validator != "" {
		value := protoreflect.ValueOfString(x.Validator)
		if !f(fd_MsgSetOrchestratorAddress_validator, value) {
			return
		}
	}
	if x.Orchestrator != "" {
		value := protoreflect.ValueOfString(x.Orchestrator)
		if !f(fd_MsgSetOrchestratorAddress_orchestrator, value) {
			return
		}
	}
	if x.EthAddress != "" {
		value := protoreflect.ValueOfString(x.EthAddress)
		if !f(fd_MsgSetOrchestratorAddress_eth_address, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgSetOrchestratorAddress) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "fx.gravity.v1.MsgSetOrchestratorAddress.validator":
		return x.Validator != ""
	case "fx.gravity.v1.MsgSetOrchestratorAddress.orchestrator":
		return x.Orchestrator != ""
	case "fx.gravity.v1.MsgSetOrchestratorAddress.eth_address":
		return x.EthAddress != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.v1.MsgSetOrchestratorAddress"))
		}
		panic(fmt.Errorf("message fx.gravity.v1.MsgSetOrchestratorAddress does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgSetOrchestratorAddress) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "fx.gravity.v1.MsgSetOrchestratorAddress.validator":
		x.Validator = ""
	case "fx.gravity.v1.MsgSetOrchestratorAddress.orchestrator":
		x.Orchestrator = ""
	case "fx.gravity.v1.MsgSetOrchestratorAddress.eth_address":
		x.EthAddress = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.v1.MsgSetOrchestratorAddress"))
		}
		panic(fmt.Errorf("message fx.gravity.v1.MsgSetOrchestratorAddress does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgSetOrchestratorAddress) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "fx.gravity.v1.MsgSetOrchestratorAddress.validator":
		value := x.Validator
		return protoreflect.ValueOfString(value)
	case "fx.gravity.v1.MsgSetOrchestratorAddress.orchestrator":
		value := x.Orchestrator
		return protoreflect.ValueOfString(value)
	case "fx.gravity.v1.MsgSetOrchestratorAddress.eth_address":
		value := x.EthAddress
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.v1.MsgSetOrchestratorAddress"))
		}
		panic(fmt.Errorf("message fx.gravity.v1.MsgSetOrchestratorAddress does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgSetOrchestratorAddress) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "fx.gravity.v1.MsgSetOrchestratorAddress.validator":
		x.Validator = value.Interface().(string)
	case "fx.gravity.v1.MsgSetOrchestratorAddress.orchestrator":
		x.Orchestrator = value.Interface().(string)
	case "fx.gravity.v1.MsgSetOrchestratorAddress.eth_address":
		x.EthAddress = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.v1.MsgSetOrchestratorAddress"))
		}
		panic(fmt.Errorf("message fx.gravity.v1.MsgSetOrchestratorAddress does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgSetOrchestratorAddress) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "fx.gravity.v1.MsgSetOrchestratorAddress.validator":
		panic(fmt.Errorf("field validator of message fx.gravity.v1.MsgSetOrchestratorAddress is not mutable"))
	case "fx.gravity.v1.MsgSetOrchestratorAddress.orchestrator":
		panic(fmt.Errorf("field orchestrator of message fx.gravity.v1.MsgSetOrchestratorAddress is not mutable"))
	case "fx.gravity.v1.MsgSetOrchestratorAddress.eth_address":
		panic(fmt.Errorf("field eth_address of message fx.gravity.v1.MsgSetOrchestratorAddress is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.v1.MsgSetOrchestratorAddress"))
		}
		panic(fmt.Errorf("message fx.gravity.v1.MsgSetOrchestratorAddress does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgSetOrchestratorAddress) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "fx.gravity.v1.MsgSetOrchestratorAddress.validator":
		return protoreflect.ValueOfString("")
	case "fx.gravity.v1.MsgSetOrchestratorAddress.orchestrator":
		return protoreflect.ValueOfString("")
	case "fx.gravity.v1.MsgSetOrchestratorAddress.eth_address":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.v1.MsgSetOrchestratorAddress"))
		}
		panic(fmt.Errorf("message fx.gravity.v1.MsgSetOrchestratorAddress does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgSetOrchestratorAddress) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in fx.gravity.v1.MsgSetOrchestratorAddress", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgSetOrchestratorAddress) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgSetOrchestratorAddress) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgSetOrchestratorAddress) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgSetOrchestratorAddress) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgSetOrchestratorAddress)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Validator)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Orchestrator)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.EthAddress)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgSetOrchestratorAddress)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.EthAddress) > 0 {
			i -= len(x.EthAddress)
			copy(dAtA[i:], x.EthAddress)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.EthAddress)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.Orchestrator) > 0 {
			i -= len(x.Orchestrator)
			copy(dAtA[i:], x.Orchestrator)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Orchestrator)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Validator) > 0 {
			i -= len(x.Validator)
			copy(dAtA[i:], x.Validator)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Validator)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgSetOrchestratorAddress)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgSetOrchestratorAddress: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgSetOrchestratorAddress: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Validator", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Validator = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Orchestrator", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Orchestrator = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field EthAddress", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.EthAddress = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgFxOriginatedTokenClaim                protoreflect.MessageDescriptor
	fd_MsgFxOriginatedTokenClaim_event_nonce    protoreflect.FieldDescriptor
	fd_MsgFxOriginatedTokenClaim_block_height   protoreflect.FieldDescriptor
	fd_MsgFxOriginatedTokenClaim_token_contract protoreflect.FieldDescriptor
	fd_MsgFxOriginatedTokenClaim_name           protoreflect.FieldDescriptor
	fd_MsgFxOriginatedTokenClaim_symbol         protoreflect.FieldDescriptor
	fd_MsgFxOriginatedTokenClaim_decimals       protoreflect.FieldDescriptor
	fd_MsgFxOriginatedTokenClaim_orchestrator   protoreflect.FieldDescriptor
)

func init() {
	file_fx_gravity_v1_gravity_legacy_proto_init()
	md_MsgFxOriginatedTokenClaim = File_fx_gravity_v1_gravity_legacy_proto.Messages().ByName("MsgFxOriginatedTokenClaim")
	fd_MsgFxOriginatedTokenClaim_event_nonce = md_MsgFxOriginatedTokenClaim.Fields().ByName("event_nonce")
	fd_MsgFxOriginatedTokenClaim_block_height = md_MsgFxOriginatedTokenClaim.Fields().ByName("block_height")
	fd_MsgFxOriginatedTokenClaim_token_contract = md_MsgFxOriginatedTokenClaim.Fields().ByName("token_contract")
	fd_MsgFxOriginatedTokenClaim_name = md_MsgFxOriginatedTokenClaim.Fields().ByName("name")
	fd_MsgFxOriginatedTokenClaim_symbol = md_MsgFxOriginatedTokenClaim.Fields().ByName("symbol")
	fd_MsgFxOriginatedTokenClaim_decimals = md_MsgFxOriginatedTokenClaim.Fields().ByName("decimals")
	fd_MsgFxOriginatedTokenClaim_orchestrator = md_MsgFxOriginatedTokenClaim.Fields().ByName("orchestrator")
}

var _ protoreflect.Message = (*fastReflection_MsgFxOriginatedTokenClaim)(nil)

type fastReflection_MsgFxOriginatedTokenClaim MsgFxOriginatedTokenClaim

func (x *MsgFxOriginatedTokenClaim) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgFxOriginatedTokenClaim)(x)
}

func (x *MsgFxOriginatedTokenClaim) slowProtoReflect() protoreflect.Message {
	mi := &file_fx_gravity_v1_gravity_legacy_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgFxOriginatedTokenClaim_messageType fastReflection_MsgFxOriginatedTokenClaim_messageType
var _ protoreflect.MessageType = fastReflection_MsgFxOriginatedTokenClaim_messageType{}

type fastReflection_MsgFxOriginatedTokenClaim_messageType struct{}

func (x fastReflection_MsgFxOriginatedTokenClaim_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgFxOriginatedTokenClaim)(nil)
}
func (x fastReflection_MsgFxOriginatedTokenClaim_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgFxOriginatedTokenClaim)
}
func (x fastReflection_MsgFxOriginatedTokenClaim_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgFxOriginatedTokenClaim
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgFxOriginatedTokenClaim) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgFxOriginatedTokenClaim
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgFxOriginatedTokenClaim) Type() protoreflect.MessageType {
	return _fastReflection_MsgFxOriginatedTokenClaim_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgFxOriginatedTokenClaim) New() protoreflect.Message {
	return new(fastReflection_MsgFxOriginatedTokenClaim)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgFxOriginatedTokenClaim) Interface() protoreflect.ProtoMessage {
	return (*MsgFxOriginatedTokenClaim)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgFxOriginatedTokenClaim) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.EventNonce != uint64(0) {
		value := protoreflect.ValueOfUint64(x.EventNonce)
		if !f(fd_MsgFxOriginatedTokenClaim_event_nonce, value) {
			return
		}
	}
	if x.BlockHeight != uint64(0) {
		value := protoreflect.ValueOfUint64(x.BlockHeight)
		if !f(fd_MsgFxOriginatedTokenClaim_block_height, value) {
			return
		}
	}
	if x.TokenContract != "" {
		value := protoreflect.ValueOfString(x.TokenContract)
		if !f(fd_MsgFxOriginatedTokenClaim_token_contract, value) {
			return
		}
	}
	if x.Name != "" {
		value := protoreflect.ValueOfString(x.Name)
		if !f(fd_MsgFxOriginatedTokenClaim_name, value) {
			return
		}
	}
	if x.Symbol != "" {
		value := protoreflect.ValueOfString(x.Symbol)
		if !f(fd_MsgFxOriginatedTokenClaim_symbol, value) {
			return
		}
	}
	if x.Decimals != uint64(0) {
		value := protoreflect.ValueOfUint64(x.Decimals)
		if !f(fd_MsgFxOriginatedTokenClaim_decimals, value) {
			return
		}
	}
	if x.Orchestrator != "" {
		value := protoreflect.ValueOfString(x.Orchestrator)
		if !f(fd_MsgFxOriginatedTokenClaim_orchestrator, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgFxOriginatedTokenClaim) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "fx.gravity.v1.MsgFxOriginatedTokenClaim.event_nonce":
		return x.EventNonce != uint64(0)
	case "fx.gravity.v1.MsgFxOriginatedTokenClaim.block_height":
		return x.BlockHeight != uint64(0)
	case "fx.gravity.v1.MsgFxOriginatedTokenClaim.token_contract":
		return x.TokenContract != ""
	case "fx.gravity.v1.MsgFxOriginatedTokenClaim.name":
		return x.Name != ""
	case "fx.gravity.v1.MsgFxOriginatedTokenClaim.symbol":
		return x.Symbol != ""
	case "fx.gravity.v1.MsgFxOriginatedTokenClaim.decimals":
		return x.Decimals != uint64(0)
	case "fx.gravity.v1.MsgFxOriginatedTokenClaim.orchestrator":
		return x.Orchestrator != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.v1.MsgFxOriginatedTokenClaim"))
		}
		panic(fmt.Errorf("message fx.gravity.v1.MsgFxOriginatedTokenClaim does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgFxOriginatedTokenClaim) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "fx.gravity.v1.MsgFxOriginatedTokenClaim.event_nonce":
		x.EventNonce = uint64(0)
	case "fx.gravity.v1.MsgFxOriginatedTokenClaim.block_height":
		x.BlockHeight = uint64(0)
	case "fx.gravity.v1.MsgFxOriginatedTokenClaim.token_contract":
		x.TokenContract = ""
	case "fx.gravity.v1.MsgFxOriginatedTokenClaim.name":
		x.Name = ""
	case "fx.gravity.v1.MsgFxOriginatedTokenClaim.symbol":
		x.Symbol = ""
	case "fx.gravity.v1.MsgFxOriginatedTokenClaim.decimals":
		x.Decimals = uint64(0)
	case "fx.gravity.v1.MsgFxOriginatedTokenClaim.orchestrator":
		x.Orchestrator = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.v1.MsgFxOriginatedTokenClaim"))
		}
		panic(fmt.Errorf("message fx.gravity.v1.MsgFxOriginatedTokenClaim does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgFxOriginatedTokenClaim) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "fx.gravity.v1.MsgFxOriginatedTokenClaim.event_nonce":
		value := x.EventNonce
		return protoreflect.ValueOfUint64(value)
	case "fx.gravity.v1.MsgFxOriginatedTokenClaim.block_height":
		value := x.BlockHeight
		return protoreflect.ValueOfUint64(value)
	case "fx.gravity.v1.MsgFxOriginatedTokenClaim.token_contract":
		value := x.TokenContract
		return protoreflect.ValueOfString(value)
	case "fx.gravity.v1.MsgFxOriginatedTokenClaim.name":
		value := x.Name
		return protoreflect.ValueOfString(value)
	case "fx.gravity.v1.MsgFxOriginatedTokenClaim.symbol":
		value := x.Symbol
		return protoreflect.ValueOfString(value)
	case "fx.gravity.v1.MsgFxOriginatedTokenClaim.decimals":
		value := x.Decimals
		return protoreflect.ValueOfUint64(value)
	case "fx.gravity.v1.MsgFxOriginatedTokenClaim.orchestrator":
		value := x.Orchestrator
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.v1.MsgFxOriginatedTokenClaim"))
		}
		panic(fmt.Errorf("message fx.gravity.v1.MsgFxOriginatedTokenClaim does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgFxOriginatedTokenClaim) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "fx.gravity.v1.MsgFxOriginatedTokenClaim.event_nonce":
		x.EventNonce = value.Uint()
	case "fx.gravity.v1.MsgFxOriginatedTokenClaim.block_height":
		x.BlockHeight = value.Uint()
	case "fx.gravity.v1.MsgFxOriginatedTokenClaim.token_contract":
		x.TokenContract = value.Interface().(string)
	case "fx.gravity.v1.MsgFxOriginatedTokenClaim.name":
		x.Name = value.Interface().(string)
	case "fx.gravity.v1.MsgFxOriginatedTokenClaim.symbol":
		x.Symbol = value.Interface().(string)
	case "fx.gravity.v1.MsgFxOriginatedTokenClaim.decimals":
		x.Decimals = value.Uint()
	case "fx.gravity.v1.MsgFxOriginatedTokenClaim.orchestrator":
		x.Orchestrator = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.v1.MsgFxOriginatedTokenClaim"))
		}
		panic(fmt.Errorf("message fx.gravity.v1.MsgFxOriginatedTokenClaim does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgFxOriginatedTokenClaim) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "fx.gravity.v1.MsgFxOriginatedTokenClaim.event_nonce":
		panic(fmt.Errorf("field event_nonce of message fx.gravity.v1.MsgFxOriginatedTokenClaim is not mutable"))
	case "fx.gravity.v1.MsgFxOriginatedTokenClaim.block_height":
		panic(fmt.Errorf("field block_height of message fx.gravity.v1.MsgFxOriginatedTokenClaim is not mutable"))
	case "fx.gravity.v1.MsgFxOriginatedTokenClaim.token_contract":
		panic(fmt.Errorf("field token_contract of message fx.gravity.v1.MsgFxOriginatedTokenClaim is not mutable"))
	case "fx.gravity.v1.MsgFxOriginatedTokenClaim.name":
		panic(fmt.Errorf("field name of message fx.gravity.v1.MsgFxOriginatedTokenClaim is not mutable"))
	case "fx.gravity.v1.MsgFxOriginatedTokenClaim.symbol":
		panic(fmt.Errorf("field symbol of message fx.gravity.v1.MsgFxOriginatedTokenClaim is not mutable"))
	case "fx.gravity.v1.MsgFxOriginatedTokenClaim.decimals":
		panic(fmt.Errorf("field decimals of message fx.gravity.v1.MsgFxOriginatedTokenClaim is not mutable"))
	case "fx.gravity.v1.MsgFxOriginatedTokenClaim.orchestrator":
		panic(fmt.Errorf("field orchestrator of message fx.gravity.v1.MsgFxOriginatedTokenClaim is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.v1.MsgFxOriginatedTokenClaim"))
		}
		panic(fmt.Errorf("message fx.gravity.v1.MsgFxOriginatedTokenClaim does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgFxOriginatedTokenClaim) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "fx.gravity.v1.MsgFxOriginatedTokenClaim.event_nonce":
		return protoreflect.ValueOfUint64(uint64(0))
	case "fx.gravity.v1.MsgFxOriginatedTokenClaim.block_height":
		return protoreflect.ValueOfUint64(uint64(0))
	case "fx.gravity.v1.MsgFxOriginatedTokenClaim.token_contract":
		return protoreflect.ValueOfString("")
	case "fx.gravity.v1.MsgFxOriginatedTokenClaim.name":
		return protoreflect.ValueOfString("")
	case "fx.gravity.v1.MsgFxOriginatedTokenClaim.symbol":
		return protoreflect.ValueOfString("")
	case "fx.gravity.v1.MsgFxOriginatedTokenClaim.decimals":
		return protoreflect.ValueOfUint64(uint64(0))
	case "fx.gravity.v1.MsgFxOriginatedTokenClaim.orchestrator":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.v1.MsgFxOriginatedTokenClaim"))
		}
		panic(fmt.Errorf("message fx.gravity.v1.MsgFxOriginatedTokenClaim does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgFxOriginatedTokenClaim) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in fx.gravity.v1.MsgFxOriginatedTokenClaim", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgFxOriginatedTokenClaim) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgFxOriginatedTokenClaim) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgFxOriginatedTokenClaim) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgFxOriginatedTokenClaim) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgFxOriginatedTokenClaim)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.EventNonce != 0 {
			n += 1 + runtime.Sov(uint64(x.EventNonce))
		}
		if x.BlockHeight != 0 {
			n += 1 + runtime.Sov(uint64(x.BlockHeight))
		}
		l = len(x.TokenContract)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Name)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Symbol)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.Decimals != 0 {
			n += 1 + runtime.Sov(uint64(x.Decimals))
		}
		l = len(x.Orchestrator)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgFxOriginatedTokenClaim)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Orchestrator) > 0 {
			i -= len(x.Orchestrator)
			copy(dAtA[i:], x.Orchestrator)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Orchestrator)))
			i--
			dAtA[i] = 0x3a
		}
		if x.Decimals != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Decimals))
			i--
			dAtA[i] = 0x30
		}
		if len(x.Symbol) > 0 {
			i -= len(x.Symbol)
			copy(dAtA[i:], x.Symbol)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Symbol)))
			i--
			dAtA[i] = 0x2a
		}
		if len(x.Name) > 0 {
			i -= len(x.Name)
			copy(dAtA[i:], x.Name)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Name)))
			i--
			dAtA[i] = 0x22
		}
		if len(x.TokenContract) > 0 {
			i -= len(x.TokenContract)
			copy(dAtA[i:], x.TokenContract)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.TokenContract)))
			i--
			dAtA[i] = 0x1a
		}
		if x.BlockHeight != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.BlockHeight))
			i--
			dAtA[i] = 0x10
		}
		if x.EventNonce != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.EventNonce))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgFxOriginatedTokenClaim)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgFxOriginatedTokenClaim: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgFxOriginatedTokenClaim: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field EventNonce", wireType)
				}
				x.EventNonce = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.EventNonce |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BlockHeight", wireType)
				}
				x.BlockHeight = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.BlockHeight |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TokenContract", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.TokenContract = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Name = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 5:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Symbol", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Symbol = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 6:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Decimals", wireType)
				}
				x.Decimals = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Decimals |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 7:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Orchestrator", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Orchestrator = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.0
// 	protoc        (unknown)
// source: fx/gravity/v1/gravity_legacy.proto

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Deprecated: after upgrade v3
type MsgValsetConfirm struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nonce        uint64 `protobuf:"varint,1,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Orchestrator string `protobuf:"bytes,2,opt,name=orchestrator,proto3" json:"orchestrator,omitempty"`
	EthAddress   string `protobuf:"bytes,3,opt,name=eth_address,json=ethAddress,proto3" json:"eth_address,omitempty"`
	Signature    string `protobuf:"bytes,4,opt,name=signature,proto3" json:"signature,omitempty"`
}

func (x *MsgValsetConfirm) Reset() {
	*x = MsgValsetConfirm{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fx_gravity_v1_gravity_legacy_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgValsetConfirm) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgValsetConfirm) ProtoMessage() {}

// Deprecated: Use MsgValsetConfirm.ProtoReflect.Descriptor instead.
func (*MsgValsetConfirm) Descriptor() ([]byte, []int) {
	return file_fx_gravity_v1_gravity_legacy_proto_rawDescGZIP(), []int{0}
}

func (x *MsgValsetConfirm) GetNonce() uint64 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *MsgValsetConfirm) GetOrchestrator() string {
	if x != nil {
		return x.Orchestrator
	}
	return ""
}

func (x *MsgValsetConfirm) GetEthAddress() string {
	if x != nil {
		return x.EthAddress
	}
	return ""
}

func (x *MsgValsetConfirm) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

// Deprecated: after upgrade v3
type MsgSendToEth struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sender    string        `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	EthDest   string        `protobuf:"bytes,2,opt,name=eth_dest,json=ethDest,proto3" json:"eth_dest,omitempty"`
	Amount    *v1beta1.Coin `protobuf:"bytes,3,opt,name=amount,proto3" json:"amount,omitempty"`
	BridgeFee *v1beta1.Coin `protobuf:"bytes,4,opt,name=bridge_fee,json=bridgeFee,proto3" json:"bridge_fee,omitempty"`
}

func (x *MsgSendToEth) Reset() {
	*x = MsgSendToEth{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fx_gravity_v1_gravity_legacy_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgSendToEth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgSendToEth) ProtoMessage() {}

// Deprecated: Use MsgSendToEth.ProtoReflect.Descriptor instead.
func (*MsgSendToEth) Descriptor() ([]byte, []int) {
	return file_fx_gravity_v1_gravity_legacy_proto_rawDescGZIP(), []int{1}
}

func (x *MsgSendToEth) GetSender() string {
	if x != nil {
		return x.Sender
	}
	return ""
}

func (x *MsgSendToEth) GetEthDest() string {
	if x != nil {
		return x.EthDest
	}
	return ""
}

func (x *MsgSendToEth) GetAmount() *v1beta1.Coin {
	if x != nil {
		return x.Amount
	}
	return nil
}

func (x *MsgSendToEth) GetBridgeFee() *v1beta1.Coin {
	if x != nil {
		return x.BridgeFee
	}
	return nil
}

// Deprecated: after upgrade v3
type MsgRequestBatch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sender     string `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	Denom      string `protobuf:"bytes,2,opt,name=denom,proto3" json:"denom,omitempty"`
	MinimumFee string `protobuf:"bytes,3,opt,name=minimum_fee,json=minimumFee,proto3" json:"minimum_fee,omitempty"`
	FeeReceive string `protobuf:"bytes,4,opt,name=fee_receive,json=feeReceive,proto3" json:"fee_receive,omitempty"`
	BaseFee    string `protobuf:"bytes,5,opt,name=base_fee,json=baseFee,proto3" json:"base_fee,omitempty"`
}

func (x *MsgRequestBatch) Reset() {
	*x = MsgRequestBatch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fx_gravity_v1_gravity_legacy_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgRequestBatch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgRequestBatch) ProtoMessage() {}

// Deprecated: Use MsgRequestBatch.ProtoReflect.Descriptor instead.
func (*MsgRequestBatch) Descriptor() ([]byte, []int) {
	return file_fx_gravity_v1_gravity_legacy_proto_rawDescGZIP(), []int{2}
}

func (x *MsgRequestBatch) GetSender() string {
	if x != nil {
		return x.Sender
	}
	return ""
}

func (x *MsgRequestBatch) GetDenom() string {
	if x != nil {
		return x.Denom
	}
	return ""
}

func (x *MsgRequestBatch) GetMinimumFee() string {
	if x != nil {
		return x.MinimumFee
	}
	return ""
}

func (x *MsgRequestBatch) GetFeeReceive() string {
	if x != nil {
		return x.FeeReceive
	}
	return ""
}

func (x *MsgRequestBatch) GetBaseFee() string {
	if x != nil {
		return x.BaseFee
	}
	return ""
}

// Deprecated: after upgrade v3
type MsgConfirmBatch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nonce         uint64 `protobuf:"varint,1,opt,name=nonce,proto3" json:"nonce,omitempty"`
	TokenContract string `protobuf:"bytes,2,opt,name=token_contract,json=tokenContract,proto3" json:"token_contract,omitempty"`
	EthSigner     string `protobuf:"bytes,3,opt,name=eth_signer,json=ethSigner,proto3" json:"eth_signer,omitempty"`
	Orchestrator  string `protobuf:"bytes,4,opt,name=orchestrator,proto3" json:"orchestrator,omitempty"`
	Signature     string `protobuf:"bytes,5,opt,name=signature,proto3" json:"signature,omitempty"`
}

func (x *MsgConfirmBatch) Reset() {
	*x = MsgConfirmBatch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fx_gravity_v1_gravity_legacy_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgConfirmBatch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgConfirmBatch) ProtoMessage() {}

// Deprecated: Use MsgConfirmBatch.ProtoReflect.Descriptor instead.
func (*MsgConfirmBatch) Descriptor() ([]byte, []int) {
	return file_fx_gravity_v1_gravity_legacy_proto_rawDescGZIP(), []int{3}
}

func (x *MsgConfirmBatch) GetNonce() uint64 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *MsgConfirmBatch) GetTokenContract() string {
	if x != nil {
		return x.TokenContract
	}
	return ""
}

func (x *MsgConfirmBatch) GetEthSigner() string {
	if x != nil {
		return x.EthSigner
	}
	return ""
}

func (x *MsgConfirmBatch) GetOrchestrator() string {
	if x != nil {
		return x.Orchestrator
	}
	return ""
}

func (x *MsgConfirmBatch) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

// Deprecated: after upgrade v3
type MsgDepositClaim struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventNonce    uint64 `protobuf:"varint,1,opt,name=event_nonce,json=eventNonce,proto3" json:"event_nonce,omitempty"`
	BlockHeight   uint64 `protobuf:"varint,2,opt,name=block_height,json=blockHeight,proto3" json:"block_height,omitempty"`
	TokenContract string `protobuf:"bytes,3,opt,name=token_contract,json=tokenContract,proto3" json:"token_contract,omitempty"`
	Amount        string `protobuf:"bytes,4,opt,name=amount,proto3" json:"amount,omitempty"`
	EthSender     string `protobuf:"bytes,5,opt,name=eth_sender,json=ethSender,proto3" json:"eth_sender,omitempty"`
	FxReceiver    string `protobuf:"bytes,6,opt,name=fx_receiver,json=fxReceiver,proto3" json:"fx_receiver,omitempty"`
	TargetIbc     string `protobuf:"bytes,7,opt,name=target_ibc,json=targetIbc,proto3" json:"target_ibc,omitempty"`
	Orchestrator  string `protobuf:"bytes,8,opt,name=orchestrator,proto3" json:"orchestrator,omitempty"`
}

func (x *MsgDepositClaim) Reset() {
	*x = MsgDepositClaim{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fx_gravity_v1_gravity_legacy_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgDepositClaim) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgDepositClaim) ProtoMessage() {}

// Deprecated: Use MsgDepositClaim.ProtoReflect.Descriptor instead.
func (*MsgDepositClaim) Descriptor() ([]byte, []int) {
	return file_fx_gravity_v1_gravity_legacy_proto_rawDescGZIP(), []int{4}
}

func (x *MsgDepositClaim) GetEventNonce() uint64 {
	if x != nil {
		return x.EventNonce
	}
	return 0
}

func (x *MsgDepositClaim) GetBlockHeight() uint64 {
	if x != nil {
		return x.BlockHeight
	}
	return 0
}

func (x *MsgDepositClaim) GetTokenContract() string {
	if x != nil {
		return x.TokenContract
	}
	return ""
}

func (x *MsgDepositClaim) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *MsgDepositClaim) GetEthSender() string {
	if x != nil {
		return x.EthSender
	}
	return ""
}

func (x *MsgDepositClaim) GetFxReceiver() string {
	if x != nil {
		return x.FxReceiver
	}
	return ""
}

func (x *MsgDepositClaim) GetTargetIbc() string {
	if x != nil {
		return x.TargetIbc
	}
	return ""
}

func (x *MsgDepositClaim) GetOrchestrator() string {
	if x != nil {
		return x.Orchestrator
	}
	return ""
}

// Deprecated: after upgrade v3
type MsgWithdrawClaim struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventNonce    uint64 `protobuf:"varint,1,opt,name=event_nonce,json=eventNonce,proto3" json:"event_nonce,omitempty"`
	BlockHeight   uint64 `protobuf:"varint,2,opt,name=block_height,json=blockHeight,proto3" json:"block_height,omitempty"`
	BatchNonce    uint64 `protobuf:"varint,3,opt,name=batch_nonce,json=batchNonce,proto3" json:"batch_nonce,omitempty"`
	TokenContract string `protobuf:"bytes,4,opt,name=token_contract,json=tokenContract,proto3" json:"token_contract,omitempty"`
	Orchestrator  string `protobuf:"bytes,5,opt,name=orchestrator,proto3" json:"orchestrator,omitempty"`
}

func (x *MsgWithdrawClaim) Reset() {
	*x = MsgWithdrawClaim{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fx_gravity_v1_gravity_legacy_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgWithdrawClaim) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgWithdrawClaim) ProtoMessage() {}

// Deprecated: Use MsgWithdrawClaim.ProtoReflect.Descriptor instead.
func (*MsgWithdrawClaim) Descriptor() ([]byte, []int) {
	return file_fx_gravity_v1_gravity_legacy_proto_rawDescGZIP(), []int{5}
}

func (x *MsgWithdrawClaim) GetEventNonce() uint64 {
	if x != nil {
		return x.EventNonce
	}
	return 0
}

func (x *MsgWithdrawClaim) GetBlockHeight() uint64 {
	if x != nil {
		return x.BlockHeight
	}
	return 0
}

func (x *MsgWithdrawClaim) GetBatchNonce() uint64 {
	if x != nil {
		return x.BatchNonce
	}
	return 0
}

func (x *MsgWithdrawClaim) GetTokenContract() string {
	if x != nil {
		return x.TokenContract
	}
	return ""
}

func (x *MsgWithdrawClaim) GetOrchestrator() string {
	if x != nil {
		return x.Orchestrator
	}
	return ""
}

// Deprecated: after upgrade v3
type MsgCancelSendToEth struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransactionId uint64 `protobuf:"varint,1,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	Sender        string `protobuf:"bytes,2,opt,name=sender,proto3" json:"sender,omitempty"`
}

func (x *MsgCancelSendToEth) Reset() {
	*x = MsgCancelSendToEth{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fx_gravity_v1_gravity_legacy_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgCancelSendToEth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgCancelSendToEth) ProtoMessage() {}

// Deprecated: Use MsgCancelSendToEth.ProtoReflect.Descriptor instead.
func (*MsgCancelSendToEth) Descriptor() ([]byte, []int) {
	return file_fx_gravity_v1_gravity_legacy_proto_rawDescGZIP(), []int{6}
}

func (x *MsgCancelSendToEth) GetTransactionId() uint64 {
	if x != nil {
		return x.TransactionId
	}
	return 0
}

func (x *MsgCancelSendToEth) GetSender() string {
	if x != nil {
		return x.Sender
	}
	return ""
}

// Deprecated: after upgrade v3
type MsgValsetUpdatedClaim struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventNonce   uint64             `protobuf:"varint,1,opt,name=event_nonce,json=eventNonce,proto3" json:"event_nonce,omitempty"`
	BlockHeight  uint64             `protobuf:"varint,2,opt,name=block_height,json=blockHeight,proto3" json:"block_height,omitempty"`
	ValsetNonce  uint64             `protobuf:"varint,3,opt,name=valset_nonce,json=valsetNonce,proto3" json:"valset_nonce,omitempty"`
	Members      []*BridgeValidator `protobuf:"bytes,4,rep,name=members,proto3" json:"members,omitempty"`
	Orchestrator string             `protobuf:"bytes,6,opt,name=orchestrator,proto3" json:"orchestrator,omitempty"`
}

func (x *MsgValsetUpdatedClaim) Reset() {
	*x = MsgValsetUpdatedClaim{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fx_gravity_v1_gravity_legacy_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgValsetUpdatedClaim) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgValsetUpdatedClaim) ProtoMessage() {}

// Deprecated: Use MsgValsetUpdatedClaim.ProtoReflect.Descriptor instead.
func (*MsgValsetUpdatedClaim) Descriptor() ([]byte, []int) {
	return file_fx_gravity_v1_gravity_legacy_proto_rawDescGZIP(), []int{7}
}

func (x *MsgValsetUpdatedClaim) GetEventNonce() uint64 {
	if x != nil {
		return x.EventNonce
	}
	return 0
}

func (x *MsgValsetUpdatedClaim) GetBlockHeight() uint64 {
	if x != nil {
		return x.BlockHeight
	}
	return 0
}

func (x *MsgValsetUpdatedClaim) GetValsetNonce() uint64 {
	if x != nil {
		return x.ValsetNonce
	}
	return 0
}

func (x *MsgValsetUpdatedClaim) GetMembers() []*BridgeValidator {
	if x != nil {
		return x.Members
	}
	return nil
}

func (x *MsgValsetUpdatedClaim) GetOrchestrator() string {
	if x != nil {
		return x.Orchestrator
	}
	return ""
}

// Deprecated: after upgrade v3
type BridgeValidator struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Power      uint64 `protobuf:"varint,1,opt,name=power,proto3" json:"power,omitempty"`
	EthAddress string `protobuf:"bytes,2,opt,name=eth_address,json=ethAddress,proto3" json:"eth_address,omitempty"`
}

func (x *BridgeValidator) Reset() {
	*x = BridgeValidator{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fx_gravity_v1_gravity_legacy_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BridgeValidator) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BridgeValidator) ProtoMessage() {}

// Deprecated: Use BridgeValidator.ProtoReflect.Descriptor instead.
func (*BridgeValidator) Descriptor() ([]byte, []int) {
	return file_fx_gravity_v1_gravity_legacy_proto_rawDescGZIP(), []int{8}
}

func (x *BridgeValidator) GetPower() uint64 {
	if x != nil {
		return x.Power
	}
	return 0
}

func (x *BridgeValidator) GetEthAddress() string {
	if x != nil {
		return x.EthAddress
	}
	return ""
}

// Deprecated: after upgrade v3
type MsgSetOrchestratorAddress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Validator    string `protobuf:"bytes,1,opt,name=validator,proto3" json:"validator,omitempty"`
	Orchestrator string `protobuf:"bytes,2,opt,name=orchestrator,proto3" json:"orchestrator,omitempty"`
	EthAddress   string `protobuf:"bytes,3,opt,name=eth_address,json=ethAddress,proto3" json:"eth_address,omitempty"`
}

func (x *MsgSetOrchestratorAddress) Reset() {
	*x = MsgSetOrchestratorAddress{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fx_gravity_v1_gravity_legacy_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgSetOrchestratorAddress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgSetOrchestratorAddress) ProtoMessage() {}

// Deprecated: Use MsgSetOrchestratorAddress.ProtoReflect.Descriptor instead.
func (*MsgSetOrchestratorAddress) Descriptor() ([]byte, []int) {
	return file_fx_gravity_v1_gravity_legacy_proto_rawDescGZIP(), []int{9}
}

func (x *MsgSetOrchestratorAddress) GetValidator() string {
	if x != nil {
		return x.Validator
	}
	return ""
}

func (x *MsgSetOrchestratorAddress) GetOrchestrator() string {
	if x != nil {
		return x.Orchestrator
	}
	return ""
}

func (x *MsgSetOrchestratorAddress) GetEthAddress() string {
	if x != nil {
		return x.EthAddress
	}
	return ""
}

// Deprecated: after upgrade v3
type MsgFxOriginatedTokenClaim struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventNonce    uint64 `protobuf:"varint,1,opt,name=event_nonce,json=eventNonce,proto3" json:"event_nonce,omitempty"`
	BlockHeight   uint64 `protobuf:"varint,2,opt,name=block_height,json=blockHeight,proto3" json:"block_height,omitempty"`
	TokenContract string `protobuf:"bytes,3,opt,name=token_contract,json=tokenContract,proto3" json:"token_contract,omitempty"`
	Name          string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Symbol        string `protobuf:"bytes,5,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Decimals      uint64 `protobuf:"varint,6,opt,name=decimals,proto3" json:"decimals,omitempty"`
	Orchestrator  string `protobuf:"bytes,7,opt,name=orchestrator,proto3" json:"orchestrator,omitempty"`
}

func (x *MsgFxOriginatedTokenClaim) Reset() {
	*x = MsgFxOriginatedTokenClaim{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fx_gravity_v1_gravity_legacy_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgFxOriginatedTokenClaim) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgFxOriginatedTokenClaim) ProtoMessage() {}

// Deprecated: Use MsgFxOriginatedTokenClaim.ProtoReflect.Descriptor instead.
func (*MsgFxOriginatedTokenClaim) Descriptor() ([]byte, []int) {
	return file_fx_gravity_v1_gravity_legacy_proto_rawDescGZIP(), []int{10}
}

func (x *MsgFxOriginatedTokenClaim) GetEventNonce() uint64 {
	if x != nil {
		return x.EventNonce
	}
	return 0
}

func (x *MsgFxOriginatedTokenClaim) GetBlockHeight() uint64 {
	if x != nil {
		return x.BlockHeight
	}
	return 0
}

func (x *MsgFxOriginatedTokenClaim) GetTokenContract() string {
	if x != nil {
		return x.TokenContract
	}
	return ""
}

func (x *MsgFxOriginatedTokenClaim) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MsgFxOriginatedTokenClaim) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *MsgFxOriginatedTokenClaim) GetDecimals() uint64 {
	if x != nil {
		return x.Decimals
	}
	return 0
}

func (x *MsgFxOriginatedTokenClaim) GetOrchestrator() string {
	if x != nil {
		return x.Orchestrator
	}
	return ""
}

var File_fx_gravity_v1_gravity_legacy_proto protoreflect.FileDescriptor

var file_fx_gravity_v1_gravity_legacy_proto_rawDesc = []byte{
	0x0a, 0x22, 0x66, 0x78, 0x2f, 0x67, 0x72, 0x61, 0x76, 0x69, 0x74, 0x79, 0x2f, 0x76, 0x31, 0x2f,
	0x67, 0x72, 0x61, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x6c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x66, 0x78, 0x2e, 0x67, 0x72, 0x61, 0x76, 0x69, 0x74, 0x79,
	0x2e, 0x76, 0x31, 0x1a, 0x1e, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2f, 0x62, 0x61, 0x73, 0x65,
	0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2f, 0x63, 0x6f, 0x69, 0x6e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x67, 0x6f, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67,
	0x6f, 0x67, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x8b, 0x01, 0x0a, 0x10, 0x4d, 0x73,
	0x67, 0x56, 0x61, 0x6c, 0x73, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x12, 0x14,
	0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x6e,
	0x6f, 0x6e, 0x63, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x6f, 0x72, 0x63, 0x68, 0x65, 0x73, 0x74, 0x72,
	0x61, 0x74, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6f, 0x72, 0x63, 0x68,
	0x65, 0x73, 0x74, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x74, 0x68, 0x5f,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65,
	0x74, 0x68, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67,
	0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x69,
	0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x22, 0xba, 0x01, 0x0a, 0x0c, 0x4d, 0x73, 0x67, 0x53,
	0x65, 0x6e, 0x64, 0x54, 0x6f, 0x45, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x12, 0x19, 0x0a, 0x08, 0x65, 0x74, 0x68, 0x5f, 0x64, 0x65, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x65, 0x74, 0x68, 0x44, 0x65, 0x73, 0x74, 0x12, 0x37, 0x0a, 0x06, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x6f,
	0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61,
	0x31, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x42, 0x04, 0xc8, 0xde, 0x1f, 0x00, 0x52, 0x06, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x3e, 0x0a, 0x0a, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x5f, 0x66,
	0x65, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x6f,
	0x73, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x43,
	0x6f, 0x69, 0x6e, 0x42, 0x04, 0xc8, 0xde, 0x1f, 0x00, 0x52, 0x09, 0x62, 0x72, 0x69, 0x64, 0x67,
	0x65, 0x46, 0x65, 0x65, 0x22, 0xda, 0x01, 0x0a, 0x0f, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x42, 0x61, 0x74, 0x63, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x12, 0x14, 0x0a, 0x05, 0x64, 0x65, 0x6e, 0x6f, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x64, 0x65, 0x6e, 0x6f, 0x6d, 0x12, 0x3e, 0x0a, 0x0b, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75,
	0x6d, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1d, 0xc8, 0xde, 0x1f,
	0x00, 0xda, 0xde, 0x1f, 0x15, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x73, 0x64, 0x6b, 0x2e, 0x69,
	0x6f, 0x2f, 0x6d, 0x61, 0x74, 0x68, 0x2e, 0x49, 0x6e, 0x74, 0x52, 0x0a, 0x6d, 0x69, 0x6e, 0x69,
	0x6d, 0x75, 0x6d, 0x46, 0x65, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x65, 0x65, 0x5f, 0x72, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x65, 0x65,
	0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x12, 0x38, 0x0a, 0x08, 0x62, 0x61, 0x73, 0x65, 0x5f,
	0x66, 0x65, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1d, 0xc8, 0xde, 0x1f, 0x00, 0xda,
	0xde, 0x1f, 0x15, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x73, 0x64, 0x6b, 0x2e, 0x69, 0x6f, 0x2f,
	0x6d, 0x61, 0x74, 0x68, 0x2e, 0x49, 0x6e, 0x74, 0x52, 0x07, 0x62, 0x61, 0x73, 0x65, 0x46, 0x65,
	0x65, 0x22, 0xaf, 0x01, 0x0a, 0x0f, 0x4d, 0x73, 0x67, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d,
	0x42, 0x61, 0x74, 0x63, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x74, 0x68, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x74, 0x68, 0x53, 0x69, 0x67, 0x6e, 0x65,
	0x72, 0x12, 0x22, 0x0a, 0x0c, 0x6f, 0x72, 0x63, 0x68, 0x65, 0x73, 0x74, 0x72, 0x61, 0x74, 0x6f,
	0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6f, 0x72, 0x63, 0x68, 0x65, 0x73, 0x74,
	0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x22, 0xb6, 0x02, 0x0a, 0x0f, 0x4d, 0x73, 0x67, 0x44, 0x65, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x5f, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x12, 0x35, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x1d, 0xc8, 0xde, 0x1f, 0x00, 0xda, 0xde, 0x1f, 0x15, 0x63, 0x6f, 0x73, 0x6d,
	0x6f, 0x73, 0x73, 0x64, 0x6b, 0x2e, 0x69, 0x6f, 0x2f, 0x6d, 0x61, 0x74, 0x68, 0x2e, 0x49, 0x6e,
	0x74, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x74, 0x68,
	0x5f, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65,
	0x74, 0x68, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x78, 0x5f, 0x72,
	0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66,
	0x78, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x5f, 0x69, 0x62, 0x63, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x62, 0x63, 0x12, 0x22, 0x0a, 0x0c, 0x6f, 0x72, 0x63, 0x68,
	0x65, 0x73, 0x74, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x6f, 0x72, 0x63, 0x68, 0x65, 0x73, 0x74, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x22, 0xc2, 0x01, 0x0a,
	0x10, 0x4d, 0x73, 0x67, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x43, 0x6c, 0x61, 0x69,
	0x6d, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x6f, 0x6e, 0x63, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x6e,
	0x63, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x6e,
	0x6f, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x62, 0x61, 0x74, 0x63,
	0x68, 0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x12, 0x22, 0x0a,
	0x0c, 0x6f, 0x72, 0x63, 0x68, 0x65, 0x73, 0x74, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x6f, 0x72, 0x63, 0x68, 0x65, 0x73, 0x74, 0x72, 0x61, 0x74, 0x6f,
	0x72, 0x22, 0x53, 0x0a, 0x12, 0x4d, 0x73, 0x67, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x53, 0x65,
	0x6e, 0x64, 0x54, 0x6f, 0x45, 0x74, 0x68, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x22, 0xdc, 0x01, 0x0a, 0x15, 0x4d, 0x73, 0x67, 0x56, 0x61,
	0x6c, 0x73, 0x65, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x43, 0x6c, 0x61, 0x69, 0x6d,
	0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x6e, 0x63,
	0x65, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x76, 0x61, 0x6c, 0x73, 0x65, 0x74, 0x5f, 0x6e,
	0x6f, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x76, 0x61, 0x6c, 0x73,
	0x65, 0x74, 0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x38, 0x0a, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x66, 0x78, 0x2e, 0x67, 0x72,
	0x61, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x72, 0x69, 0x64, 0x67, 0x65, 0x56,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x73, 0x12, 0x22, 0x0a, 0x0c, 0x6f, 0x72, 0x63, 0x68, 0x65, 0x73, 0x74, 0x72, 0x61, 0x74, 0x6f,
	0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6f, 0x72, 0x63, 0x68, 0x65, 0x73, 0x74,
	0x72, 0x61, 0x74, 0x6f, 0x72, 0x22, 0x48, 0x0a, 0x0f, 0x42, 0x72, 0x69, 0x64, 0x67, 0x65, 0x56,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x6f, 0x77, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x12, 0x1f,
	0x0a, 0x0b, 0x65, 0x74, 0x68, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x74, 0x68, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22,
	0x7e, 0x0a, 0x19, 0x4d, 0x73, 0x67, 0x53, 0x65, 0x74, 0x4f, 0x72, 0x63, 0x68, 0x65, 0x73, 0x74,
	0x72, 0x61, 0x74, 0x6f, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1c, 0x0a, 0x09,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x6f, 0x72,
	0x63, 0x68, 0x65, 0x73, 0x74, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x6f, 0x72, 0x63, 0x68, 0x65, 0x73, 0x74, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x1f,
	0x0a, 0x0b, 0x65, 0x74, 0x68, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x74, 0x68, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22,
	0xf2, 0x01, 0x0a, 0x19, 0x4d, 0x73, 0x67, 0x46, 0x78, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61,
	0x74, 0x65, 0x64, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x12, 0x1f, 0x0a,
	0x0b, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0a, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x21,
	0x0a, 0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79,
	0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x73,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x73,
	0x12, 0x22, 0x0a, 0x0c, 0x6f, 0x72, 0x63, 0x68, 0x65, 0x73, 0x74, 0x72, 0x61, 0x74, 0x6f, 0x72,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6f, 0x72, 0x63, 0x68, 0x65, 0x73, 0x74, 0x72,
	0x61, 0x74, 0x6f, 0x72, 0x42, 0xa7, 0x01, 0x0a, 0x11, 0x63, 0x6f, 0x6d, 0x2e, 0x66, 0x78, 0x2e,
	0x67, 0x72, 0x61, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x31, 0x42, 0x12, 0x47, 0x72, 0x61, 0x76,
	0x69, 0x74, 0x79, 0x4c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01,
	0x5a, 0x28, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x73, 0x64, 0x6b, 0x2e, 0x69, 0x6f, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x66, 0x78, 0x2f, 0x67, 0x72, 0x61, 0x76, 0x69, 0x74, 0x79, 0x2f, 0x76, 0x31,
	0x3b, 0x67, 0x72, 0x61, 0x76, 0x69, 0x74, 0x79, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x46, 0x47, 0x58,
	0xaa, 0x02, 0x0d, 0x46, 0x78, 0x2e, 0x47, 0x72, 0x61, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x56, 0x31,
	0xca, 0x02, 0x0d, 0x46, 0x78, 0x5c, 0x47, 0x72, 0x61, 0x76, 0x69, 0x74, 0x79, 0x5c, 0x56, 0x31,
	0xe2, 0x02, 0x19, 0x46, 0x78, 0x5c, 0x47, 0x72, 0x61, 0x76, 0x69, 0x74, 0x79, 0x5c, 0x56, 0x31,
	0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x0f, 0x46,
	0x78, 0x3a, 0x3a, 0x47, 0x72, 0x61, 0x76, 0x69, 0x74, 0x79, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_fx_gravity_v1_gravity_legacy_proto_rawDescOnce sync.Once
	file_fx_gravity_v1_gravity_legacy_proto_rawDescData = file_fx_gravity_v1_gravity_legacy_proto_rawDesc
)

func file_fx_gravity_v1_gravity_legacy_proto_rawDescGZIP() []byte {
	file_fx_gravity_v1_gravity_legacy_proto_rawDescOnce.Do(func() {
		file_fx_gravity_v1_gravity_legacy_proto_rawDescData = protoimpl.X.CompressGZIP(file_fx_gravity_v1_gravity_legacy_proto_rawDescData)
	})
	return file_fx_gravity_v1_gravity_legacy_proto_rawDescData
}

var file_fx_gravity_v1_gravity_legacy_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_fx_gravity_v1_gravity_legacy_proto_goTypes = []interface{}{
	(*MsgValsetConfirm)(nil),          // 0: fx.gravity.v1.MsgValsetConfirm
	(*MsgSendToEth)(nil),              // 1: fx.gravity.v1.MsgSendToEth
	(*MsgRequestBatch)(nil),           // 2: fx.gravity.v1.MsgRequestBatch
	(*MsgConfirmBatch)(nil),           // 3: fx.gravity.v1.MsgConfirmBatch
	(*MsgDepositClaim)(nil),           // 4: fx.gravity.v1.MsgDepositClaim
	(*MsgWithdrawClaim)(nil),          // 5: fx.gravity.v1.MsgWithdrawClaim
	(*MsgCancelSendToEth)(nil),        // 6: fx.gravity.v1.MsgCancelSendToEth
	(*MsgValsetUpdatedClaim)(nil),     // 7: fx.gravity.v1.MsgValsetUpdatedClaim
	(*BridgeValidator)(nil),           // 8: fx.gravity.v1.BridgeValidator
	(*MsgSetOrchestratorAddress)(nil), // 9: fx.gravity.v1.MsgSetOrchestratorAddress
	(*MsgFxOriginatedTokenClaim)(nil), // 10: fx.gravity.v1.MsgFxOriginatedTokenClaim
	(*v1beta1.Coin)(nil),              // 11: cosmos.base.v1beta1.Coin
}
var file_fx_gravity_v1_gravity_legacy_proto_depIdxs = []int32{
	11, // 0: fx.gravity.v1.MsgSendToEth.amount:type_name -> cosmos.base.v1beta1.Coin
	11, // 1: fx.gravity.v1.MsgSendToEth.bridge_fee:type_name -> cosmos.base.v1beta1.Coin
	8,  // 2: fx.gravity.v1.MsgValsetUpdatedClaim.members:type_name -> fx.gravity.v1.BridgeValidator
	3,  // [3:3] is the sub-list for method output_type
	3,  // [3:3] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_fx_gravity_v1_gravity_legacy_proto_init() }
func file_fx_gravity_v1_gravity_legacy_proto_init() {
	if File_fx_gravity_v1_gravity_legacy_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_fx_gravity_v1_gravity_legacy_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgValsetConfirm); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fx_gravity_v1_gravity_legacy_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgSendToEth); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fx_gravity_v1_gravity_legacy_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgRequestBatch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fx_gravity_v1_gravity_legacy_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgConfirmBatch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fx_gravity_v1_gravity_legacy_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgDepositClaim); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fx_gravity_v1_gravity_legacy_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgWithdrawClaim); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fx_gravity_v1_gravity_legacy_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgCancelSendToEth); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fx_gravity_v1_gravity_legacy_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgValsetUpdatedClaim); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fx_gravity_v1_gravity_legacy_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BridgeValidator); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fx_gravity_v1_gravity_legacy_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgSetOrchestratorAddress); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fx_gravity_v1_gravity_legacy_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgFxOriginatedTokenClaim); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_fx_gravity_v1_gravity_legacy_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_fx_gravity_v1_gravity_legacy_proto_goTypes,
		DependencyIndexes: file_fx_gravity_v1_gravity_legacy_proto_depIdxs,
		MessageInfos:      file_fx_gravity_v1_gravity_legacy_proto_msgTypes,
	}.Build()
	File_fx_gravity_v1_gravity_legacy_proto = out.File
	file_fx_gravity_v1_gravity_legacy_proto_rawDesc = nil
	file_fx_gravity_v1_gravity_legacy_proto_goTypes = nil
	file_fx_gravity_v1_gravity_legacy_proto_depIdxs = nil
}
