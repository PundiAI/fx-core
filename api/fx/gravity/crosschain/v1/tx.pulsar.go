// Code generated by protoc-gen-go-pulsar. DO NOT EDIT.
package crosschainv1

import (
	_ "cosmossdk.io/api/amino"
	v1beta1 "cosmossdk.io/api/cosmos/base/v1beta1"
	_ "cosmossdk.io/api/cosmos/msg/v1"
	fmt "fmt"
	_ "github.com/cosmos/cosmos-proto"
	runtime "github.com/cosmos/cosmos-proto/runtime"
	_ "github.com/cosmos/gogoproto/gogoproto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoiface "google.golang.org/protobuf/runtime/protoiface"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	io "io"
	reflect "reflect"
	sync "sync"
)

var (
	md_MsgBondedOracle                   protoreflect.MessageDescriptor
	fd_MsgBondedOracle_chain_name        protoreflect.FieldDescriptor
	fd_MsgBondedOracle_oracle_address    protoreflect.FieldDescriptor
	fd_MsgBondedOracle_bridger_address   protoreflect.FieldDescriptor
	fd_MsgBondedOracle_external_address  protoreflect.FieldDescriptor
	fd_MsgBondedOracle_validator_address protoreflect.FieldDescriptor
	fd_MsgBondedOracle_delegate_amount   protoreflect.FieldDescriptor
)

func init() {
	file_fx_gravity_crosschain_v1_tx_proto_init()
	md_MsgBondedOracle = File_fx_gravity_crosschain_v1_tx_proto.Messages().ByName("MsgBondedOracle")
	fd_MsgBondedOracle_chain_name = md_MsgBondedOracle.Fields().ByName("chain_name")
	fd_MsgBondedOracle_oracle_address = md_MsgBondedOracle.Fields().ByName("oracle_address")
	fd_MsgBondedOracle_bridger_address = md_MsgBondedOracle.Fields().ByName("bridger_address")
	fd_MsgBondedOracle_external_address = md_MsgBondedOracle.Fields().ByName("external_address")
	fd_MsgBondedOracle_validator_address = md_MsgBondedOracle.Fields().ByName("validator_address")
	fd_MsgBondedOracle_delegate_amount = md_MsgBondedOracle.Fields().ByName("delegate_amount")
}

var _ protoreflect.Message = (*fastReflection_MsgBondedOracle)(nil)

type fastReflection_MsgBondedOracle MsgBondedOracle

func (x *MsgBondedOracle) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgBondedOracle)(x)
}

func (x *MsgBondedOracle) slowProtoReflect() protoreflect.Message {
	mi := &file_fx_gravity_crosschain_v1_tx_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgBondedOracle_messageType fastReflection_MsgBondedOracle_messageType
var _ protoreflect.MessageType = fastReflection_MsgBondedOracle_messageType{}

type fastReflection_MsgBondedOracle_messageType struct{}

func (x fastReflection_MsgBondedOracle_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgBondedOracle)(nil)
}
func (x fastReflection_MsgBondedOracle_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgBondedOracle)
}
func (x fastReflection_MsgBondedOracle_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgBondedOracle
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgBondedOracle) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgBondedOracle
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgBondedOracle) Type() protoreflect.MessageType {
	return _fastReflection_MsgBondedOracle_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgBondedOracle) New() protoreflect.Message {
	return new(fastReflection_MsgBondedOracle)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgBondedOracle) Interface() protoreflect.ProtoMessage {
	return (*MsgBondedOracle)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgBondedOracle) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.ChainName != "" {
		value := protoreflect.ValueOfString(x.ChainName)
		if !f(fd_MsgBondedOracle_chain_name, value) {
			return
		}
	}
	if x.OracleAddress != "" {
		value := protoreflect.ValueOfString(x.OracleAddress)
		if !f(fd_MsgBondedOracle_oracle_address, value) {
			return
		}
	}
	if x.BridgerAddress != "" {
		value := protoreflect.ValueOfString(x.BridgerAddress)
		if !f(fd_MsgBondedOracle_bridger_address, value) {
			return
		}
	}
	if x.ExternalAddress != "" {
		value := protoreflect.ValueOfString(x.ExternalAddress)
		if !f(fd_MsgBondedOracle_external_address, value) {
			return
		}
	}
	if x.ValidatorAddress != "" {
		value := protoreflect.ValueOfString(x.ValidatorAddress)
		if !f(fd_MsgBondedOracle_validator_address, value) {
			return
		}
	}
	if x.DelegateAmount != nil {
		value := protoreflect.ValueOfMessage(x.DelegateAmount.ProtoReflect())
		if !f(fd_MsgBondedOracle_delegate_amount, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgBondedOracle) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "fx.gravity.crosschain.v1.MsgBondedOracle.chain_name":
		return x.ChainName != ""
	case "fx.gravity.crosschain.v1.MsgBondedOracle.oracle_address":
		return x.OracleAddress != ""
	case "fx.gravity.crosschain.v1.MsgBondedOracle.bridger_address":
		return x.BridgerAddress != ""
	case "fx.gravity.crosschain.v1.MsgBondedOracle.external_address":
		return x.ExternalAddress != ""
	case "fx.gravity.crosschain.v1.MsgBondedOracle.validator_address":
		return x.ValidatorAddress != ""
	case "fx.gravity.crosschain.v1.MsgBondedOracle.delegate_amount":
		return x.DelegateAmount != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgBondedOracle"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgBondedOracle does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgBondedOracle) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "fx.gravity.crosschain.v1.MsgBondedOracle.chain_name":
		x.ChainName = ""
	case "fx.gravity.crosschain.v1.MsgBondedOracle.oracle_address":
		x.OracleAddress = ""
	case "fx.gravity.crosschain.v1.MsgBondedOracle.bridger_address":
		x.BridgerAddress = ""
	case "fx.gravity.crosschain.v1.MsgBondedOracle.external_address":
		x.ExternalAddress = ""
	case "fx.gravity.crosschain.v1.MsgBondedOracle.validator_address":
		x.ValidatorAddress = ""
	case "fx.gravity.crosschain.v1.MsgBondedOracle.delegate_amount":
		x.DelegateAmount = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgBondedOracle"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgBondedOracle does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgBondedOracle) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "fx.gravity.crosschain.v1.MsgBondedOracle.chain_name":
		value := x.ChainName
		return protoreflect.ValueOfString(value)
	case "fx.gravity.crosschain.v1.MsgBondedOracle.oracle_address":
		value := x.OracleAddress
		return protoreflect.ValueOfString(value)
	case "fx.gravity.crosschain.v1.MsgBondedOracle.bridger_address":
		value := x.BridgerAddress
		return protoreflect.ValueOfString(value)
	case "fx.gravity.crosschain.v1.MsgBondedOracle.external_address":
		value := x.ExternalAddress
		return protoreflect.ValueOfString(value)
	case "fx.gravity.crosschain.v1.MsgBondedOracle.validator_address":
		value := x.ValidatorAddress
		return protoreflect.ValueOfString(value)
	case "fx.gravity.crosschain.v1.MsgBondedOracle.delegate_amount":
		value := x.DelegateAmount
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgBondedOracle"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgBondedOracle does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgBondedOracle) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "fx.gravity.crosschain.v1.MsgBondedOracle.chain_name":
		x.ChainName = value.Interface().(string)
	case "fx.gravity.crosschain.v1.MsgBondedOracle.oracle_address":
		x.OracleAddress = value.Interface().(string)
	case "fx.gravity.crosschain.v1.MsgBondedOracle.bridger_address":
		x.BridgerAddress = value.Interface().(string)
	case "fx.gravity.crosschain.v1.MsgBondedOracle.external_address":
		x.ExternalAddress = value.Interface().(string)
	case "fx.gravity.crosschain.v1.MsgBondedOracle.validator_address":
		x.ValidatorAddress = value.Interface().(string)
	case "fx.gravity.crosschain.v1.MsgBondedOracle.delegate_amount":
		x.DelegateAmount = value.Message().Interface().(*v1beta1.Coin)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgBondedOracle"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgBondedOracle does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgBondedOracle) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "fx.gravity.crosschain.v1.MsgBondedOracle.delegate_amount":
		if x.DelegateAmount == nil {
			x.DelegateAmount = new(v1beta1.Coin)
		}
		return protoreflect.ValueOfMessage(x.DelegateAmount.ProtoReflect())
	case "fx.gravity.crosschain.v1.MsgBondedOracle.chain_name":
		panic(fmt.Errorf("field chain_name of message fx.gravity.crosschain.v1.MsgBondedOracle is not mutable"))
	case "fx.gravity.crosschain.v1.MsgBondedOracle.oracle_address":
		panic(fmt.Errorf("field oracle_address of message fx.gravity.crosschain.v1.MsgBondedOracle is not mutable"))
	case "fx.gravity.crosschain.v1.MsgBondedOracle.bridger_address":
		panic(fmt.Errorf("field bridger_address of message fx.gravity.crosschain.v1.MsgBondedOracle is not mutable"))
	case "fx.gravity.crosschain.v1.MsgBondedOracle.external_address":
		panic(fmt.Errorf("field external_address of message fx.gravity.crosschain.v1.MsgBondedOracle is not mutable"))
	case "fx.gravity.crosschain.v1.MsgBondedOracle.validator_address":
		panic(fmt.Errorf("field validator_address of message fx.gravity.crosschain.v1.MsgBondedOracle is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgBondedOracle"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgBondedOracle does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgBondedOracle) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "fx.gravity.crosschain.v1.MsgBondedOracle.chain_name":
		return protoreflect.ValueOfString("")
	case "fx.gravity.crosschain.v1.MsgBondedOracle.oracle_address":
		return protoreflect.ValueOfString("")
	case "fx.gravity.crosschain.v1.MsgBondedOracle.bridger_address":
		return protoreflect.ValueOfString("")
	case "fx.gravity.crosschain.v1.MsgBondedOracle.external_address":
		return protoreflect.ValueOfString("")
	case "fx.gravity.crosschain.v1.MsgBondedOracle.validator_address":
		return protoreflect.ValueOfString("")
	case "fx.gravity.crosschain.v1.MsgBondedOracle.delegate_amount":
		m := new(v1beta1.Coin)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgBondedOracle"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgBondedOracle does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgBondedOracle) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in fx.gravity.crosschain.v1.MsgBondedOracle", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgBondedOracle) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgBondedOracle) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgBondedOracle) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgBondedOracle) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgBondedOracle)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.ChainName)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.OracleAddress)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.BridgerAddress)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.ExternalAddress)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.ValidatorAddress)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.DelegateAmount != nil {
			l = options.Size(x.DelegateAmount)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgBondedOracle)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.DelegateAmount != nil {
			encoded, err := options.Marshal(x.DelegateAmount)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x32
		}
		if len(x.ValidatorAddress) > 0 {
			i -= len(x.ValidatorAddress)
			copy(dAtA[i:], x.ValidatorAddress)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ValidatorAddress)))
			i--
			dAtA[i] = 0x2a
		}
		if len(x.ExternalAddress) > 0 {
			i -= len(x.ExternalAddress)
			copy(dAtA[i:], x.ExternalAddress)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ExternalAddress)))
			i--
			dAtA[i] = 0x22
		}
		if len(x.BridgerAddress) > 0 {
			i -= len(x.BridgerAddress)
			copy(dAtA[i:], x.BridgerAddress)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.BridgerAddress)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.OracleAddress) > 0 {
			i -= len(x.OracleAddress)
			copy(dAtA[i:], x.OracleAddress)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.OracleAddress)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.ChainName) > 0 {
			i -= len(x.ChainName)
			copy(dAtA[i:], x.ChainName)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ChainName)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgBondedOracle)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgBondedOracle: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgBondedOracle: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ChainName", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ChainName = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field OracleAddress", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.OracleAddress = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BridgerAddress", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.BridgerAddress = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ExternalAddress", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ExternalAddress = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 5:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ValidatorAddress", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ValidatorAddress = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 6:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field DelegateAmount", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.DelegateAmount == nil {
					x.DelegateAmount = &v1beta1.Coin{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.DelegateAmount); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgBondedOracleResponse protoreflect.MessageDescriptor
)

func init() {
	file_fx_gravity_crosschain_v1_tx_proto_init()
	md_MsgBondedOracleResponse = File_fx_gravity_crosschain_v1_tx_proto.Messages().ByName("MsgBondedOracleResponse")
}

var _ protoreflect.Message = (*fastReflection_MsgBondedOracleResponse)(nil)

type fastReflection_MsgBondedOracleResponse MsgBondedOracleResponse

func (x *MsgBondedOracleResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgBondedOracleResponse)(x)
}

func (x *MsgBondedOracleResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_fx_gravity_crosschain_v1_tx_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgBondedOracleResponse_messageType fastReflection_MsgBondedOracleResponse_messageType
var _ protoreflect.MessageType = fastReflection_MsgBondedOracleResponse_messageType{}

type fastReflection_MsgBondedOracleResponse_messageType struct{}

func (x fastReflection_MsgBondedOracleResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgBondedOracleResponse)(nil)
}
func (x fastReflection_MsgBondedOracleResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgBondedOracleResponse)
}
func (x fastReflection_MsgBondedOracleResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgBondedOracleResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgBondedOracleResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgBondedOracleResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgBondedOracleResponse) Type() protoreflect.MessageType {
	return _fastReflection_MsgBondedOracleResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgBondedOracleResponse) New() protoreflect.Message {
	return new(fastReflection_MsgBondedOracleResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgBondedOracleResponse) Interface() protoreflect.ProtoMessage {
	return (*MsgBondedOracleResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgBondedOracleResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgBondedOracleResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgBondedOracleResponse"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgBondedOracleResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgBondedOracleResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgBondedOracleResponse"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgBondedOracleResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgBondedOracleResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgBondedOracleResponse"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgBondedOracleResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgBondedOracleResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgBondedOracleResponse"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgBondedOracleResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgBondedOracleResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgBondedOracleResponse"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgBondedOracleResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgBondedOracleResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgBondedOracleResponse"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgBondedOracleResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgBondedOracleResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in fx.gravity.crosschain.v1.MsgBondedOracleResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgBondedOracleResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgBondedOracleResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgBondedOracleResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgBondedOracleResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgBondedOracleResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgBondedOracleResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgBondedOracleResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgBondedOracleResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgBondedOracleResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgAddDelegate                protoreflect.MessageDescriptor
	fd_MsgAddDelegate_chain_name     protoreflect.FieldDescriptor
	fd_MsgAddDelegate_oracle_address protoreflect.FieldDescriptor
	fd_MsgAddDelegate_amount         protoreflect.FieldDescriptor
)

func init() {
	file_fx_gravity_crosschain_v1_tx_proto_init()
	md_MsgAddDelegate = File_fx_gravity_crosschain_v1_tx_proto.Messages().ByName("MsgAddDelegate")
	fd_MsgAddDelegate_chain_name = md_MsgAddDelegate.Fields().ByName("chain_name")
	fd_MsgAddDelegate_oracle_address = md_MsgAddDelegate.Fields().ByName("oracle_address")
	fd_MsgAddDelegate_amount = md_MsgAddDelegate.Fields().ByName("amount")
}

var _ protoreflect.Message = (*fastReflection_MsgAddDelegate)(nil)

type fastReflection_MsgAddDelegate MsgAddDelegate

func (x *MsgAddDelegate) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgAddDelegate)(x)
}

func (x *MsgAddDelegate) slowProtoReflect() protoreflect.Message {
	mi := &file_fx_gravity_crosschain_v1_tx_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgAddDelegate_messageType fastReflection_MsgAddDelegate_messageType
var _ protoreflect.MessageType = fastReflection_MsgAddDelegate_messageType{}

type fastReflection_MsgAddDelegate_messageType struct{}

func (x fastReflection_MsgAddDelegate_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgAddDelegate)(nil)
}
func (x fastReflection_MsgAddDelegate_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgAddDelegate)
}
func (x fastReflection_MsgAddDelegate_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgAddDelegate
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgAddDelegate) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgAddDelegate
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgAddDelegate) Type() protoreflect.MessageType {
	return _fastReflection_MsgAddDelegate_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgAddDelegate) New() protoreflect.Message {
	return new(fastReflection_MsgAddDelegate)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgAddDelegate) Interface() protoreflect.ProtoMessage {
	return (*MsgAddDelegate)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgAddDelegate) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.ChainName != "" {
		value := protoreflect.ValueOfString(x.ChainName)
		if !f(fd_MsgAddDelegate_chain_name, value) {
			return
		}
	}
	if x.OracleAddress != "" {
		value := protoreflect.ValueOfString(x.OracleAddress)
		if !f(fd_MsgAddDelegate_oracle_address, value) {
			return
		}
	}
	if x.Amount != nil {
		value := protoreflect.ValueOfMessage(x.Amount.ProtoReflect())
		if !f(fd_MsgAddDelegate_amount, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgAddDelegate) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "fx.gravity.crosschain.v1.MsgAddDelegate.chain_name":
		return x.ChainName != ""
	case "fx.gravity.crosschain.v1.MsgAddDelegate.oracle_address":
		return x.OracleAddress != ""
	case "fx.gravity.crosschain.v1.MsgAddDelegate.amount":
		return x.Amount != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgAddDelegate"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgAddDelegate does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgAddDelegate) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "fx.gravity.crosschain.v1.MsgAddDelegate.chain_name":
		x.ChainName = ""
	case "fx.gravity.crosschain.v1.MsgAddDelegate.oracle_address":
		x.OracleAddress = ""
	case "fx.gravity.crosschain.v1.MsgAddDelegate.amount":
		x.Amount = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgAddDelegate"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgAddDelegate does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgAddDelegate) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "fx.gravity.crosschain.v1.MsgAddDelegate.chain_name":
		value := x.ChainName
		return protoreflect.ValueOfString(value)
	case "fx.gravity.crosschain.v1.MsgAddDelegate.oracle_address":
		value := x.OracleAddress
		return protoreflect.ValueOfString(value)
	case "fx.gravity.crosschain.v1.MsgAddDelegate.amount":
		value := x.Amount
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgAddDelegate"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgAddDelegate does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgAddDelegate) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "fx.gravity.crosschain.v1.MsgAddDelegate.chain_name":
		x.ChainName = value.Interface().(string)
	case "fx.gravity.crosschain.v1.MsgAddDelegate.oracle_address":
		x.OracleAddress = value.Interface().(string)
	case "fx.gravity.crosschain.v1.MsgAddDelegate.amount":
		x.Amount = value.Message().Interface().(*v1beta1.Coin)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgAddDelegate"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgAddDelegate does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgAddDelegate) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "fx.gravity.crosschain.v1.MsgAddDelegate.amount":
		if x.Amount == nil {
			x.Amount = new(v1beta1.Coin)
		}
		return protoreflect.ValueOfMessage(x.Amount.ProtoReflect())
	case "fx.gravity.crosschain.v1.MsgAddDelegate.chain_name":
		panic(fmt.Errorf("field chain_name of message fx.gravity.crosschain.v1.MsgAddDelegate is not mutable"))
	case "fx.gravity.crosschain.v1.MsgAddDelegate.oracle_address":
		panic(fmt.Errorf("field oracle_address of message fx.gravity.crosschain.v1.MsgAddDelegate is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgAddDelegate"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgAddDelegate does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgAddDelegate) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "fx.gravity.crosschain.v1.MsgAddDelegate.chain_name":
		return protoreflect.ValueOfString("")
	case "fx.gravity.crosschain.v1.MsgAddDelegate.oracle_address":
		return protoreflect.ValueOfString("")
	case "fx.gravity.crosschain.v1.MsgAddDelegate.amount":
		m := new(v1beta1.Coin)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgAddDelegate"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgAddDelegate does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgAddDelegate) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in fx.gravity.crosschain.v1.MsgAddDelegate", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgAddDelegate) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgAddDelegate) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgAddDelegate) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgAddDelegate) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgAddDelegate)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.ChainName)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.OracleAddress)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.Amount != nil {
			l = options.Size(x.Amount)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgAddDelegate)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Amount != nil {
			encoded, err := options.Marshal(x.Amount)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.OracleAddress) > 0 {
			i -= len(x.OracleAddress)
			copy(dAtA[i:], x.OracleAddress)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.OracleAddress)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.ChainName) > 0 {
			i -= len(x.ChainName)
			copy(dAtA[i:], x.ChainName)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ChainName)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgAddDelegate)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgAddDelegate: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgAddDelegate: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ChainName", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ChainName = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field OracleAddress", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.OracleAddress = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Amount", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Amount == nil {
					x.Amount = &v1beta1.Coin{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Amount); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgAddDelegateResponse protoreflect.MessageDescriptor
)

func init() {
	file_fx_gravity_crosschain_v1_tx_proto_init()
	md_MsgAddDelegateResponse = File_fx_gravity_crosschain_v1_tx_proto.Messages().ByName("MsgAddDelegateResponse")
}

var _ protoreflect.Message = (*fastReflection_MsgAddDelegateResponse)(nil)

type fastReflection_MsgAddDelegateResponse MsgAddDelegateResponse

func (x *MsgAddDelegateResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgAddDelegateResponse)(x)
}

func (x *MsgAddDelegateResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_fx_gravity_crosschain_v1_tx_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgAddDelegateResponse_messageType fastReflection_MsgAddDelegateResponse_messageType
var _ protoreflect.MessageType = fastReflection_MsgAddDelegateResponse_messageType{}

type fastReflection_MsgAddDelegateResponse_messageType struct{}

func (x fastReflection_MsgAddDelegateResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgAddDelegateResponse)(nil)
}
func (x fastReflection_MsgAddDelegateResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgAddDelegateResponse)
}
func (x fastReflection_MsgAddDelegateResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgAddDelegateResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgAddDelegateResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgAddDelegateResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgAddDelegateResponse) Type() protoreflect.MessageType {
	return _fastReflection_MsgAddDelegateResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgAddDelegateResponse) New() protoreflect.Message {
	return new(fastReflection_MsgAddDelegateResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgAddDelegateResponse) Interface() protoreflect.ProtoMessage {
	return (*MsgAddDelegateResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgAddDelegateResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgAddDelegateResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgAddDelegateResponse"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgAddDelegateResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgAddDelegateResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgAddDelegateResponse"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgAddDelegateResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgAddDelegateResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgAddDelegateResponse"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgAddDelegateResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgAddDelegateResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgAddDelegateResponse"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgAddDelegateResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgAddDelegateResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgAddDelegateResponse"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgAddDelegateResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgAddDelegateResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgAddDelegateResponse"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgAddDelegateResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgAddDelegateResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in fx.gravity.crosschain.v1.MsgAddDelegateResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgAddDelegateResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgAddDelegateResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgAddDelegateResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgAddDelegateResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgAddDelegateResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgAddDelegateResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgAddDelegateResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgAddDelegateResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgAddDelegateResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgReDelegate                   protoreflect.MessageDescriptor
	fd_MsgReDelegate_chain_name        protoreflect.FieldDescriptor
	fd_MsgReDelegate_oracle_address    protoreflect.FieldDescriptor
	fd_MsgReDelegate_validator_address protoreflect.FieldDescriptor
)

func init() {
	file_fx_gravity_crosschain_v1_tx_proto_init()
	md_MsgReDelegate = File_fx_gravity_crosschain_v1_tx_proto.Messages().ByName("MsgReDelegate")
	fd_MsgReDelegate_chain_name = md_MsgReDelegate.Fields().ByName("chain_name")
	fd_MsgReDelegate_oracle_address = md_MsgReDelegate.Fields().ByName("oracle_address")
	fd_MsgReDelegate_validator_address = md_MsgReDelegate.Fields().ByName("validator_address")
}

var _ protoreflect.Message = (*fastReflection_MsgReDelegate)(nil)

type fastReflection_MsgReDelegate MsgReDelegate

func (x *MsgReDelegate) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgReDelegate)(x)
}

func (x *MsgReDelegate) slowProtoReflect() protoreflect.Message {
	mi := &file_fx_gravity_crosschain_v1_tx_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgReDelegate_messageType fastReflection_MsgReDelegate_messageType
var _ protoreflect.MessageType = fastReflection_MsgReDelegate_messageType{}

type fastReflection_MsgReDelegate_messageType struct{}

func (x fastReflection_MsgReDelegate_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgReDelegate)(nil)
}
func (x fastReflection_MsgReDelegate_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgReDelegate)
}
func (x fastReflection_MsgReDelegate_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgReDelegate
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgReDelegate) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgReDelegate
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgReDelegate) Type() protoreflect.MessageType {
	return _fastReflection_MsgReDelegate_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgReDelegate) New() protoreflect.Message {
	return new(fastReflection_MsgReDelegate)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgReDelegate) Interface() protoreflect.ProtoMessage {
	return (*MsgReDelegate)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgReDelegate) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.ChainName != "" {
		value := protoreflect.ValueOfString(x.ChainName)
		if !f(fd_MsgReDelegate_chain_name, value) {
			return
		}
	}
	if x.OracleAddress != "" {
		value := protoreflect.ValueOfString(x.OracleAddress)
		if !f(fd_MsgReDelegate_oracle_address, value) {
			return
		}
	}
	if x.ValidatorAddress != "" {
		value := protoreflect.ValueOfString(x.ValidatorAddress)
		if !f(fd_MsgReDelegate_validator_address, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgReDelegate) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "fx.gravity.crosschain.v1.MsgReDelegate.chain_name":
		return x.ChainName != ""
	case "fx.gravity.crosschain.v1.MsgReDelegate.oracle_address":
		return x.OracleAddress != ""
	case "fx.gravity.crosschain.v1.MsgReDelegate.validator_address":
		return x.ValidatorAddress != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgReDelegate"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgReDelegate does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgReDelegate) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "fx.gravity.crosschain.v1.MsgReDelegate.chain_name":
		x.ChainName = ""
	case "fx.gravity.crosschain.v1.MsgReDelegate.oracle_address":
		x.OracleAddress = ""
	case "fx.gravity.crosschain.v1.MsgReDelegate.validator_address":
		x.ValidatorAddress = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgReDelegate"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgReDelegate does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgReDelegate) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "fx.gravity.crosschain.v1.MsgReDelegate.chain_name":
		value := x.ChainName
		return protoreflect.ValueOfString(value)
	case "fx.gravity.crosschain.v1.MsgReDelegate.oracle_address":
		value := x.OracleAddress
		return protoreflect.ValueOfString(value)
	case "fx.gravity.crosschain.v1.MsgReDelegate.validator_address":
		value := x.ValidatorAddress
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgReDelegate"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgReDelegate does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgReDelegate) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "fx.gravity.crosschain.v1.MsgReDelegate.chain_name":
		x.ChainName = value.Interface().(string)
	case "fx.gravity.crosschain.v1.MsgReDelegate.oracle_address":
		x.OracleAddress = value.Interface().(string)
	case "fx.gravity.crosschain.v1.MsgReDelegate.validator_address":
		x.ValidatorAddress = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgReDelegate"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgReDelegate does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgReDelegate) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "fx.gravity.crosschain.v1.MsgReDelegate.chain_name":
		panic(fmt.Errorf("field chain_name of message fx.gravity.crosschain.v1.MsgReDelegate is not mutable"))
	case "fx.gravity.crosschain.v1.MsgReDelegate.oracle_address":
		panic(fmt.Errorf("field oracle_address of message fx.gravity.crosschain.v1.MsgReDelegate is not mutable"))
	case "fx.gravity.crosschain.v1.MsgReDelegate.validator_address":
		panic(fmt.Errorf("field validator_address of message fx.gravity.crosschain.v1.MsgReDelegate is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgReDelegate"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgReDelegate does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgReDelegate) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "fx.gravity.crosschain.v1.MsgReDelegate.chain_name":
		return protoreflect.ValueOfString("")
	case "fx.gravity.crosschain.v1.MsgReDelegate.oracle_address":
		return protoreflect.ValueOfString("")
	case "fx.gravity.crosschain.v1.MsgReDelegate.validator_address":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgReDelegate"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgReDelegate does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgReDelegate) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in fx.gravity.crosschain.v1.MsgReDelegate", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgReDelegate) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgReDelegate) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgReDelegate) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgReDelegate) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgReDelegate)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.ChainName)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.OracleAddress)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.ValidatorAddress)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgReDelegate)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.ValidatorAddress) > 0 {
			i -= len(x.ValidatorAddress)
			copy(dAtA[i:], x.ValidatorAddress)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ValidatorAddress)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.OracleAddress) > 0 {
			i -= len(x.OracleAddress)
			copy(dAtA[i:], x.OracleAddress)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.OracleAddress)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.ChainName) > 0 {
			i -= len(x.ChainName)
			copy(dAtA[i:], x.ChainName)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ChainName)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgReDelegate)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgReDelegate: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgReDelegate: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ChainName", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ChainName = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field OracleAddress", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.OracleAddress = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ValidatorAddress", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ValidatorAddress = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgReDelegateResponse protoreflect.MessageDescriptor
)

func init() {
	file_fx_gravity_crosschain_v1_tx_proto_init()
	md_MsgReDelegateResponse = File_fx_gravity_crosschain_v1_tx_proto.Messages().ByName("MsgReDelegateResponse")
}

var _ protoreflect.Message = (*fastReflection_MsgReDelegateResponse)(nil)

type fastReflection_MsgReDelegateResponse MsgReDelegateResponse

func (x *MsgReDelegateResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgReDelegateResponse)(x)
}

func (x *MsgReDelegateResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_fx_gravity_crosschain_v1_tx_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgReDelegateResponse_messageType fastReflection_MsgReDelegateResponse_messageType
var _ protoreflect.MessageType = fastReflection_MsgReDelegateResponse_messageType{}

type fastReflection_MsgReDelegateResponse_messageType struct{}

func (x fastReflection_MsgReDelegateResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgReDelegateResponse)(nil)
}
func (x fastReflection_MsgReDelegateResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgReDelegateResponse)
}
func (x fastReflection_MsgReDelegateResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgReDelegateResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgReDelegateResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgReDelegateResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgReDelegateResponse) Type() protoreflect.MessageType {
	return _fastReflection_MsgReDelegateResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgReDelegateResponse) New() protoreflect.Message {
	return new(fastReflection_MsgReDelegateResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgReDelegateResponse) Interface() protoreflect.ProtoMessage {
	return (*MsgReDelegateResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgReDelegateResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgReDelegateResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgReDelegateResponse"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgReDelegateResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgReDelegateResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgReDelegateResponse"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgReDelegateResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgReDelegateResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgReDelegateResponse"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgReDelegateResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgReDelegateResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgReDelegateResponse"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgReDelegateResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgReDelegateResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgReDelegateResponse"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgReDelegateResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgReDelegateResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgReDelegateResponse"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgReDelegateResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgReDelegateResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in fx.gravity.crosschain.v1.MsgReDelegateResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgReDelegateResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgReDelegateResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgReDelegateResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgReDelegateResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgReDelegateResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgReDelegateResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgReDelegateResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgReDelegateResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgReDelegateResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgEditBridger                 protoreflect.MessageDescriptor
	fd_MsgEditBridger_chain_name      protoreflect.FieldDescriptor
	fd_MsgEditBridger_oracle_address  protoreflect.FieldDescriptor
	fd_MsgEditBridger_bridger_address protoreflect.FieldDescriptor
)

func init() {
	file_fx_gravity_crosschain_v1_tx_proto_init()
	md_MsgEditBridger = File_fx_gravity_crosschain_v1_tx_proto.Messages().ByName("MsgEditBridger")
	fd_MsgEditBridger_chain_name = md_MsgEditBridger.Fields().ByName("chain_name")
	fd_MsgEditBridger_oracle_address = md_MsgEditBridger.Fields().ByName("oracle_address")
	fd_MsgEditBridger_bridger_address = md_MsgEditBridger.Fields().ByName("bridger_address")
}

var _ protoreflect.Message = (*fastReflection_MsgEditBridger)(nil)

type fastReflection_MsgEditBridger MsgEditBridger

func (x *MsgEditBridger) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgEditBridger)(x)
}

func (x *MsgEditBridger) slowProtoReflect() protoreflect.Message {
	mi := &file_fx_gravity_crosschain_v1_tx_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgEditBridger_messageType fastReflection_MsgEditBridger_messageType
var _ protoreflect.MessageType = fastReflection_MsgEditBridger_messageType{}

type fastReflection_MsgEditBridger_messageType struct{}

func (x fastReflection_MsgEditBridger_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgEditBridger)(nil)
}
func (x fastReflection_MsgEditBridger_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgEditBridger)
}
func (x fastReflection_MsgEditBridger_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgEditBridger
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgEditBridger) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgEditBridger
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgEditBridger) Type() protoreflect.MessageType {
	return _fastReflection_MsgEditBridger_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgEditBridger) New() protoreflect.Message {
	return new(fastReflection_MsgEditBridger)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgEditBridger) Interface() protoreflect.ProtoMessage {
	return (*MsgEditBridger)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgEditBridger) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.ChainName != "" {
		value := protoreflect.ValueOfString(x.ChainName)
		if !f(fd_MsgEditBridger_chain_name, value) {
			return
		}
	}
	if x.OracleAddress != "" {
		value := protoreflect.ValueOfString(x.OracleAddress)
		if !f(fd_MsgEditBridger_oracle_address, value) {
			return
		}
	}
	if x.BridgerAddress != "" {
		value := protoreflect.ValueOfString(x.BridgerAddress)
		if !f(fd_MsgEditBridger_bridger_address, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgEditBridger) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "fx.gravity.crosschain.v1.MsgEditBridger.chain_name":
		return x.ChainName != ""
	case "fx.gravity.crosschain.v1.MsgEditBridger.oracle_address":
		return x.OracleAddress != ""
	case "fx.gravity.crosschain.v1.MsgEditBridger.bridger_address":
		return x.BridgerAddress != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgEditBridger"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgEditBridger does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgEditBridger) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "fx.gravity.crosschain.v1.MsgEditBridger.chain_name":
		x.ChainName = ""
	case "fx.gravity.crosschain.v1.MsgEditBridger.oracle_address":
		x.OracleAddress = ""
	case "fx.gravity.crosschain.v1.MsgEditBridger.bridger_address":
		x.BridgerAddress = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgEditBridger"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgEditBridger does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgEditBridger) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "fx.gravity.crosschain.v1.MsgEditBridger.chain_name":
		value := x.ChainName
		return protoreflect.ValueOfString(value)
	case "fx.gravity.crosschain.v1.MsgEditBridger.oracle_address":
		value := x.OracleAddress
		return protoreflect.ValueOfString(value)
	case "fx.gravity.crosschain.v1.MsgEditBridger.bridger_address":
		value := x.BridgerAddress
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgEditBridger"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgEditBridger does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgEditBridger) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "fx.gravity.crosschain.v1.MsgEditBridger.chain_name":
		x.ChainName = value.Interface().(string)
	case "fx.gravity.crosschain.v1.MsgEditBridger.oracle_address":
		x.OracleAddress = value.Interface().(string)
	case "fx.gravity.crosschain.v1.MsgEditBridger.bridger_address":
		x.BridgerAddress = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgEditBridger"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgEditBridger does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgEditBridger) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "fx.gravity.crosschain.v1.MsgEditBridger.chain_name":
		panic(fmt.Errorf("field chain_name of message fx.gravity.crosschain.v1.MsgEditBridger is not mutable"))
	case "fx.gravity.crosschain.v1.MsgEditBridger.oracle_address":
		panic(fmt.Errorf("field oracle_address of message fx.gravity.crosschain.v1.MsgEditBridger is not mutable"))
	case "fx.gravity.crosschain.v1.MsgEditBridger.bridger_address":
		panic(fmt.Errorf("field bridger_address of message fx.gravity.crosschain.v1.MsgEditBridger is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgEditBridger"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgEditBridger does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgEditBridger) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "fx.gravity.crosschain.v1.MsgEditBridger.chain_name":
		return protoreflect.ValueOfString("")
	case "fx.gravity.crosschain.v1.MsgEditBridger.oracle_address":
		return protoreflect.ValueOfString("")
	case "fx.gravity.crosschain.v1.MsgEditBridger.bridger_address":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgEditBridger"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgEditBridger does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgEditBridger) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in fx.gravity.crosschain.v1.MsgEditBridger", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgEditBridger) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgEditBridger) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgEditBridger) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgEditBridger) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgEditBridger)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.ChainName)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.OracleAddress)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.BridgerAddress)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgEditBridger)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.BridgerAddress) > 0 {
			i -= len(x.BridgerAddress)
			copy(dAtA[i:], x.BridgerAddress)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.BridgerAddress)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.OracleAddress) > 0 {
			i -= len(x.OracleAddress)
			copy(dAtA[i:], x.OracleAddress)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.OracleAddress)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.ChainName) > 0 {
			i -= len(x.ChainName)
			copy(dAtA[i:], x.ChainName)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ChainName)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgEditBridger)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgEditBridger: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgEditBridger: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ChainName", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ChainName = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field OracleAddress", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.OracleAddress = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BridgerAddress", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.BridgerAddress = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgEditBridgerResponse protoreflect.MessageDescriptor
)

func init() {
	file_fx_gravity_crosschain_v1_tx_proto_init()
	md_MsgEditBridgerResponse = File_fx_gravity_crosschain_v1_tx_proto.Messages().ByName("MsgEditBridgerResponse")
}

var _ protoreflect.Message = (*fastReflection_MsgEditBridgerResponse)(nil)

type fastReflection_MsgEditBridgerResponse MsgEditBridgerResponse

func (x *MsgEditBridgerResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgEditBridgerResponse)(x)
}

func (x *MsgEditBridgerResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_fx_gravity_crosschain_v1_tx_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgEditBridgerResponse_messageType fastReflection_MsgEditBridgerResponse_messageType
var _ protoreflect.MessageType = fastReflection_MsgEditBridgerResponse_messageType{}

type fastReflection_MsgEditBridgerResponse_messageType struct{}

func (x fastReflection_MsgEditBridgerResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgEditBridgerResponse)(nil)
}
func (x fastReflection_MsgEditBridgerResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgEditBridgerResponse)
}
func (x fastReflection_MsgEditBridgerResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgEditBridgerResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgEditBridgerResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgEditBridgerResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgEditBridgerResponse) Type() protoreflect.MessageType {
	return _fastReflection_MsgEditBridgerResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgEditBridgerResponse) New() protoreflect.Message {
	return new(fastReflection_MsgEditBridgerResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgEditBridgerResponse) Interface() protoreflect.ProtoMessage {
	return (*MsgEditBridgerResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgEditBridgerResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgEditBridgerResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgEditBridgerResponse"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgEditBridgerResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgEditBridgerResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgEditBridgerResponse"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgEditBridgerResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgEditBridgerResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgEditBridgerResponse"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgEditBridgerResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgEditBridgerResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgEditBridgerResponse"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgEditBridgerResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgEditBridgerResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgEditBridgerResponse"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgEditBridgerResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgEditBridgerResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgEditBridgerResponse"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgEditBridgerResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgEditBridgerResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in fx.gravity.crosschain.v1.MsgEditBridgerResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgEditBridgerResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgEditBridgerResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgEditBridgerResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgEditBridgerResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgEditBridgerResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgEditBridgerResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgEditBridgerResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgEditBridgerResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgEditBridgerResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgUnbondedOracle                protoreflect.MessageDescriptor
	fd_MsgUnbondedOracle_chain_name     protoreflect.FieldDescriptor
	fd_MsgUnbondedOracle_oracle_address protoreflect.FieldDescriptor
)

func init() {
	file_fx_gravity_crosschain_v1_tx_proto_init()
	md_MsgUnbondedOracle = File_fx_gravity_crosschain_v1_tx_proto.Messages().ByName("MsgUnbondedOracle")
	fd_MsgUnbondedOracle_chain_name = md_MsgUnbondedOracle.Fields().ByName("chain_name")
	fd_MsgUnbondedOracle_oracle_address = md_MsgUnbondedOracle.Fields().ByName("oracle_address")
}

var _ protoreflect.Message = (*fastReflection_MsgUnbondedOracle)(nil)

type fastReflection_MsgUnbondedOracle MsgUnbondedOracle

func (x *MsgUnbondedOracle) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgUnbondedOracle)(x)
}

func (x *MsgUnbondedOracle) slowProtoReflect() protoreflect.Message {
	mi := &file_fx_gravity_crosschain_v1_tx_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgUnbondedOracle_messageType fastReflection_MsgUnbondedOracle_messageType
var _ protoreflect.MessageType = fastReflection_MsgUnbondedOracle_messageType{}

type fastReflection_MsgUnbondedOracle_messageType struct{}

func (x fastReflection_MsgUnbondedOracle_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgUnbondedOracle)(nil)
}
func (x fastReflection_MsgUnbondedOracle_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgUnbondedOracle)
}
func (x fastReflection_MsgUnbondedOracle_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgUnbondedOracle
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgUnbondedOracle) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgUnbondedOracle
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgUnbondedOracle) Type() protoreflect.MessageType {
	return _fastReflection_MsgUnbondedOracle_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgUnbondedOracle) New() protoreflect.Message {
	return new(fastReflection_MsgUnbondedOracle)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgUnbondedOracle) Interface() protoreflect.ProtoMessage {
	return (*MsgUnbondedOracle)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgUnbondedOracle) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.ChainName != "" {
		value := protoreflect.ValueOfString(x.ChainName)
		if !f(fd_MsgUnbondedOracle_chain_name, value) {
			return
		}
	}
	if x.OracleAddress != "" {
		value := protoreflect.ValueOfString(x.OracleAddress)
		if !f(fd_MsgUnbondedOracle_oracle_address, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgUnbondedOracle) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "fx.gravity.crosschain.v1.MsgUnbondedOracle.chain_name":
		return x.ChainName != ""
	case "fx.gravity.crosschain.v1.MsgUnbondedOracle.oracle_address":
		return x.OracleAddress != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgUnbondedOracle"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgUnbondedOracle does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUnbondedOracle) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "fx.gravity.crosschain.v1.MsgUnbondedOracle.chain_name":
		x.ChainName = ""
	case "fx.gravity.crosschain.v1.MsgUnbondedOracle.oracle_address":
		x.OracleAddress = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgUnbondedOracle"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgUnbondedOracle does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgUnbondedOracle) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "fx.gravity.crosschain.v1.MsgUnbondedOracle.chain_name":
		value := x.ChainName
		return protoreflect.ValueOfString(value)
	case "fx.gravity.crosschain.v1.MsgUnbondedOracle.oracle_address":
		value := x.OracleAddress
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgUnbondedOracle"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgUnbondedOracle does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUnbondedOracle) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "fx.gravity.crosschain.v1.MsgUnbondedOracle.chain_name":
		x.ChainName = value.Interface().(string)
	case "fx.gravity.crosschain.v1.MsgUnbondedOracle.oracle_address":
		x.OracleAddress = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgUnbondedOracle"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgUnbondedOracle does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUnbondedOracle) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "fx.gravity.crosschain.v1.MsgUnbondedOracle.chain_name":
		panic(fmt.Errorf("field chain_name of message fx.gravity.crosschain.v1.MsgUnbondedOracle is not mutable"))
	case "fx.gravity.crosschain.v1.MsgUnbondedOracle.oracle_address":
		panic(fmt.Errorf("field oracle_address of message fx.gravity.crosschain.v1.MsgUnbondedOracle is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgUnbondedOracle"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgUnbondedOracle does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgUnbondedOracle) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "fx.gravity.crosschain.v1.MsgUnbondedOracle.chain_name":
		return protoreflect.ValueOfString("")
	case "fx.gravity.crosschain.v1.MsgUnbondedOracle.oracle_address":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgUnbondedOracle"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgUnbondedOracle does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgUnbondedOracle) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in fx.gravity.crosschain.v1.MsgUnbondedOracle", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgUnbondedOracle) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUnbondedOracle) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgUnbondedOracle) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgUnbondedOracle) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgUnbondedOracle)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.ChainName)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.OracleAddress)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgUnbondedOracle)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.OracleAddress) > 0 {
			i -= len(x.OracleAddress)
			copy(dAtA[i:], x.OracleAddress)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.OracleAddress)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.ChainName) > 0 {
			i -= len(x.ChainName)
			copy(dAtA[i:], x.ChainName)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ChainName)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgUnbondedOracle)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgUnbondedOracle: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgUnbondedOracle: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ChainName", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ChainName = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field OracleAddress", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.OracleAddress = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgUnbondedOracleResponse protoreflect.MessageDescriptor
)

func init() {
	file_fx_gravity_crosschain_v1_tx_proto_init()
	md_MsgUnbondedOracleResponse = File_fx_gravity_crosschain_v1_tx_proto.Messages().ByName("MsgUnbondedOracleResponse")
}

var _ protoreflect.Message = (*fastReflection_MsgUnbondedOracleResponse)(nil)

type fastReflection_MsgUnbondedOracleResponse MsgUnbondedOracleResponse

func (x *MsgUnbondedOracleResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgUnbondedOracleResponse)(x)
}

func (x *MsgUnbondedOracleResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_fx_gravity_crosschain_v1_tx_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgUnbondedOracleResponse_messageType fastReflection_MsgUnbondedOracleResponse_messageType
var _ protoreflect.MessageType = fastReflection_MsgUnbondedOracleResponse_messageType{}

type fastReflection_MsgUnbondedOracleResponse_messageType struct{}

func (x fastReflection_MsgUnbondedOracleResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgUnbondedOracleResponse)(nil)
}
func (x fastReflection_MsgUnbondedOracleResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgUnbondedOracleResponse)
}
func (x fastReflection_MsgUnbondedOracleResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgUnbondedOracleResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgUnbondedOracleResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgUnbondedOracleResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgUnbondedOracleResponse) Type() protoreflect.MessageType {
	return _fastReflection_MsgUnbondedOracleResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgUnbondedOracleResponse) New() protoreflect.Message {
	return new(fastReflection_MsgUnbondedOracleResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgUnbondedOracleResponse) Interface() protoreflect.ProtoMessage {
	return (*MsgUnbondedOracleResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgUnbondedOracleResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgUnbondedOracleResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgUnbondedOracleResponse"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgUnbondedOracleResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUnbondedOracleResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgUnbondedOracleResponse"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgUnbondedOracleResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgUnbondedOracleResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgUnbondedOracleResponse"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgUnbondedOracleResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUnbondedOracleResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgUnbondedOracleResponse"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgUnbondedOracleResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUnbondedOracleResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgUnbondedOracleResponse"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgUnbondedOracleResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgUnbondedOracleResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgUnbondedOracleResponse"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgUnbondedOracleResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgUnbondedOracleResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in fx.gravity.crosschain.v1.MsgUnbondedOracleResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgUnbondedOracleResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUnbondedOracleResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgUnbondedOracleResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgUnbondedOracleResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgUnbondedOracleResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgUnbondedOracleResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgUnbondedOracleResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgUnbondedOracleResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgUnbondedOracleResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgWithdrawReward                protoreflect.MessageDescriptor
	fd_MsgWithdrawReward_chain_name     protoreflect.FieldDescriptor
	fd_MsgWithdrawReward_oracle_address protoreflect.FieldDescriptor
)

func init() {
	file_fx_gravity_crosschain_v1_tx_proto_init()
	md_MsgWithdrawReward = File_fx_gravity_crosschain_v1_tx_proto.Messages().ByName("MsgWithdrawReward")
	fd_MsgWithdrawReward_chain_name = md_MsgWithdrawReward.Fields().ByName("chain_name")
	fd_MsgWithdrawReward_oracle_address = md_MsgWithdrawReward.Fields().ByName("oracle_address")
}

var _ protoreflect.Message = (*fastReflection_MsgWithdrawReward)(nil)

type fastReflection_MsgWithdrawReward MsgWithdrawReward

func (x *MsgWithdrawReward) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgWithdrawReward)(x)
}

func (x *MsgWithdrawReward) slowProtoReflect() protoreflect.Message {
	mi := &file_fx_gravity_crosschain_v1_tx_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgWithdrawReward_messageType fastReflection_MsgWithdrawReward_messageType
var _ protoreflect.MessageType = fastReflection_MsgWithdrawReward_messageType{}

type fastReflection_MsgWithdrawReward_messageType struct{}

func (x fastReflection_MsgWithdrawReward_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgWithdrawReward)(nil)
}
func (x fastReflection_MsgWithdrawReward_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgWithdrawReward)
}
func (x fastReflection_MsgWithdrawReward_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgWithdrawReward
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgWithdrawReward) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgWithdrawReward
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgWithdrawReward) Type() protoreflect.MessageType {
	return _fastReflection_MsgWithdrawReward_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgWithdrawReward) New() protoreflect.Message {
	return new(fastReflection_MsgWithdrawReward)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgWithdrawReward) Interface() protoreflect.ProtoMessage {
	return (*MsgWithdrawReward)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgWithdrawReward) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.ChainName != "" {
		value := protoreflect.ValueOfString(x.ChainName)
		if !f(fd_MsgWithdrawReward_chain_name, value) {
			return
		}
	}
	if x.OracleAddress != "" {
		value := protoreflect.ValueOfString(x.OracleAddress)
		if !f(fd_MsgWithdrawReward_oracle_address, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgWithdrawReward) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "fx.gravity.crosschain.v1.MsgWithdrawReward.chain_name":
		return x.ChainName != ""
	case "fx.gravity.crosschain.v1.MsgWithdrawReward.oracle_address":
		return x.OracleAddress != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgWithdrawReward"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgWithdrawReward does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgWithdrawReward) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "fx.gravity.crosschain.v1.MsgWithdrawReward.chain_name":
		x.ChainName = ""
	case "fx.gravity.crosschain.v1.MsgWithdrawReward.oracle_address":
		x.OracleAddress = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgWithdrawReward"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgWithdrawReward does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgWithdrawReward) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "fx.gravity.crosschain.v1.MsgWithdrawReward.chain_name":
		value := x.ChainName
		return protoreflect.ValueOfString(value)
	case "fx.gravity.crosschain.v1.MsgWithdrawReward.oracle_address":
		value := x.OracleAddress
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgWithdrawReward"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgWithdrawReward does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgWithdrawReward) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "fx.gravity.crosschain.v1.MsgWithdrawReward.chain_name":
		x.ChainName = value.Interface().(string)
	case "fx.gravity.crosschain.v1.MsgWithdrawReward.oracle_address":
		x.OracleAddress = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgWithdrawReward"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgWithdrawReward does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgWithdrawReward) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "fx.gravity.crosschain.v1.MsgWithdrawReward.chain_name":
		panic(fmt.Errorf("field chain_name of message fx.gravity.crosschain.v1.MsgWithdrawReward is not mutable"))
	case "fx.gravity.crosschain.v1.MsgWithdrawReward.oracle_address":
		panic(fmt.Errorf("field oracle_address of message fx.gravity.crosschain.v1.MsgWithdrawReward is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgWithdrawReward"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgWithdrawReward does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgWithdrawReward) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "fx.gravity.crosschain.v1.MsgWithdrawReward.chain_name":
		return protoreflect.ValueOfString("")
	case "fx.gravity.crosschain.v1.MsgWithdrawReward.oracle_address":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgWithdrawReward"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgWithdrawReward does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgWithdrawReward) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in fx.gravity.crosschain.v1.MsgWithdrawReward", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgWithdrawReward) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgWithdrawReward) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgWithdrawReward) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgWithdrawReward) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgWithdrawReward)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.ChainName)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.OracleAddress)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgWithdrawReward)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.OracleAddress) > 0 {
			i -= len(x.OracleAddress)
			copy(dAtA[i:], x.OracleAddress)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.OracleAddress)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.ChainName) > 0 {
			i -= len(x.ChainName)
			copy(dAtA[i:], x.ChainName)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ChainName)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgWithdrawReward)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgWithdrawReward: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgWithdrawReward: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ChainName", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ChainName = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field OracleAddress", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.OracleAddress = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgWithdrawRewardResponse protoreflect.MessageDescriptor
)

func init() {
	file_fx_gravity_crosschain_v1_tx_proto_init()
	md_MsgWithdrawRewardResponse = File_fx_gravity_crosschain_v1_tx_proto.Messages().ByName("MsgWithdrawRewardResponse")
}

var _ protoreflect.Message = (*fastReflection_MsgWithdrawRewardResponse)(nil)

type fastReflection_MsgWithdrawRewardResponse MsgWithdrawRewardResponse

func (x *MsgWithdrawRewardResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgWithdrawRewardResponse)(x)
}

func (x *MsgWithdrawRewardResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_fx_gravity_crosschain_v1_tx_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgWithdrawRewardResponse_messageType fastReflection_MsgWithdrawRewardResponse_messageType
var _ protoreflect.MessageType = fastReflection_MsgWithdrawRewardResponse_messageType{}

type fastReflection_MsgWithdrawRewardResponse_messageType struct{}

func (x fastReflection_MsgWithdrawRewardResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgWithdrawRewardResponse)(nil)
}
func (x fastReflection_MsgWithdrawRewardResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgWithdrawRewardResponse)
}
func (x fastReflection_MsgWithdrawRewardResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgWithdrawRewardResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgWithdrawRewardResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgWithdrawRewardResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgWithdrawRewardResponse) Type() protoreflect.MessageType {
	return _fastReflection_MsgWithdrawRewardResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgWithdrawRewardResponse) New() protoreflect.Message {
	return new(fastReflection_MsgWithdrawRewardResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgWithdrawRewardResponse) Interface() protoreflect.ProtoMessage {
	return (*MsgWithdrawRewardResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgWithdrawRewardResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgWithdrawRewardResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgWithdrawRewardResponse"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgWithdrawRewardResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgWithdrawRewardResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgWithdrawRewardResponse"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgWithdrawRewardResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgWithdrawRewardResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgWithdrawRewardResponse"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgWithdrawRewardResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgWithdrawRewardResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgWithdrawRewardResponse"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgWithdrawRewardResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgWithdrawRewardResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgWithdrawRewardResponse"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgWithdrawRewardResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgWithdrawRewardResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgWithdrawRewardResponse"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgWithdrawRewardResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgWithdrawRewardResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in fx.gravity.crosschain.v1.MsgWithdrawRewardResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgWithdrawRewardResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgWithdrawRewardResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgWithdrawRewardResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgWithdrawRewardResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgWithdrawRewardResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgWithdrawRewardResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgWithdrawRewardResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgWithdrawRewardResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgWithdrawRewardResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgOracleSetConfirm                  protoreflect.MessageDescriptor
	fd_MsgOracleSetConfirm_nonce            protoreflect.FieldDescriptor
	fd_MsgOracleSetConfirm_bridger_address  protoreflect.FieldDescriptor
	fd_MsgOracleSetConfirm_external_address protoreflect.FieldDescriptor
	fd_MsgOracleSetConfirm_signature        protoreflect.FieldDescriptor
	fd_MsgOracleSetConfirm_chain_name       protoreflect.FieldDescriptor
)

func init() {
	file_fx_gravity_crosschain_v1_tx_proto_init()
	md_MsgOracleSetConfirm = File_fx_gravity_crosschain_v1_tx_proto.Messages().ByName("MsgOracleSetConfirm")
	fd_MsgOracleSetConfirm_nonce = md_MsgOracleSetConfirm.Fields().ByName("nonce")
	fd_MsgOracleSetConfirm_bridger_address = md_MsgOracleSetConfirm.Fields().ByName("bridger_address")
	fd_MsgOracleSetConfirm_external_address = md_MsgOracleSetConfirm.Fields().ByName("external_address")
	fd_MsgOracleSetConfirm_signature = md_MsgOracleSetConfirm.Fields().ByName("signature")
	fd_MsgOracleSetConfirm_chain_name = md_MsgOracleSetConfirm.Fields().ByName("chain_name")
}

var _ protoreflect.Message = (*fastReflection_MsgOracleSetConfirm)(nil)

type fastReflection_MsgOracleSetConfirm MsgOracleSetConfirm

func (x *MsgOracleSetConfirm) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgOracleSetConfirm)(x)
}

func (x *MsgOracleSetConfirm) slowProtoReflect() protoreflect.Message {
	mi := &file_fx_gravity_crosschain_v1_tx_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgOracleSetConfirm_messageType fastReflection_MsgOracleSetConfirm_messageType
var _ protoreflect.MessageType = fastReflection_MsgOracleSetConfirm_messageType{}

type fastReflection_MsgOracleSetConfirm_messageType struct{}

func (x fastReflection_MsgOracleSetConfirm_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgOracleSetConfirm)(nil)
}
func (x fastReflection_MsgOracleSetConfirm_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgOracleSetConfirm)
}
func (x fastReflection_MsgOracleSetConfirm_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgOracleSetConfirm
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgOracleSetConfirm) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgOracleSetConfirm
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgOracleSetConfirm) Type() protoreflect.MessageType {
	return _fastReflection_MsgOracleSetConfirm_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgOracleSetConfirm) New() protoreflect.Message {
	return new(fastReflection_MsgOracleSetConfirm)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgOracleSetConfirm) Interface() protoreflect.ProtoMessage {
	return (*MsgOracleSetConfirm)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgOracleSetConfirm) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Nonce != uint64(0) {
		value := protoreflect.ValueOfUint64(x.Nonce)
		if !f(fd_MsgOracleSetConfirm_nonce, value) {
			return
		}
	}
	if x.BridgerAddress != "" {
		value := protoreflect.ValueOfString(x.BridgerAddress)
		if !f(fd_MsgOracleSetConfirm_bridger_address, value) {
			return
		}
	}
	if x.ExternalAddress != "" {
		value := protoreflect.ValueOfString(x.ExternalAddress)
		if !f(fd_MsgOracleSetConfirm_external_address, value) {
			return
		}
	}
	if x.Signature != "" {
		value := protoreflect.ValueOfString(x.Signature)
		if !f(fd_MsgOracleSetConfirm_signature, value) {
			return
		}
	}
	if x.ChainName != "" {
		value := protoreflect.ValueOfString(x.ChainName)
		if !f(fd_MsgOracleSetConfirm_chain_name, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgOracleSetConfirm) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "fx.gravity.crosschain.v1.MsgOracleSetConfirm.nonce":
		return x.Nonce != uint64(0)
	case "fx.gravity.crosschain.v1.MsgOracleSetConfirm.bridger_address":
		return x.BridgerAddress != ""
	case "fx.gravity.crosschain.v1.MsgOracleSetConfirm.external_address":
		return x.ExternalAddress != ""
	case "fx.gravity.crosschain.v1.MsgOracleSetConfirm.signature":
		return x.Signature != ""
	case "fx.gravity.crosschain.v1.MsgOracleSetConfirm.chain_name":
		return x.ChainName != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgOracleSetConfirm"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgOracleSetConfirm does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgOracleSetConfirm) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "fx.gravity.crosschain.v1.MsgOracleSetConfirm.nonce":
		x.Nonce = uint64(0)
	case "fx.gravity.crosschain.v1.MsgOracleSetConfirm.bridger_address":
		x.BridgerAddress = ""
	case "fx.gravity.crosschain.v1.MsgOracleSetConfirm.external_address":
		x.ExternalAddress = ""
	case "fx.gravity.crosschain.v1.MsgOracleSetConfirm.signature":
		x.Signature = ""
	case "fx.gravity.crosschain.v1.MsgOracleSetConfirm.chain_name":
		x.ChainName = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgOracleSetConfirm"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgOracleSetConfirm does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgOracleSetConfirm) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "fx.gravity.crosschain.v1.MsgOracleSetConfirm.nonce":
		value := x.Nonce
		return protoreflect.ValueOfUint64(value)
	case "fx.gravity.crosschain.v1.MsgOracleSetConfirm.bridger_address":
		value := x.BridgerAddress
		return protoreflect.ValueOfString(value)
	case "fx.gravity.crosschain.v1.MsgOracleSetConfirm.external_address":
		value := x.ExternalAddress
		return protoreflect.ValueOfString(value)
	case "fx.gravity.crosschain.v1.MsgOracleSetConfirm.signature":
		value := x.Signature
		return protoreflect.ValueOfString(value)
	case "fx.gravity.crosschain.v1.MsgOracleSetConfirm.chain_name":
		value := x.ChainName
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgOracleSetConfirm"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgOracleSetConfirm does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgOracleSetConfirm) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "fx.gravity.crosschain.v1.MsgOracleSetConfirm.nonce":
		x.Nonce = value.Uint()
	case "fx.gravity.crosschain.v1.MsgOracleSetConfirm.bridger_address":
		x.BridgerAddress = value.Interface().(string)
	case "fx.gravity.crosschain.v1.MsgOracleSetConfirm.external_address":
		x.ExternalAddress = value.Interface().(string)
	case "fx.gravity.crosschain.v1.MsgOracleSetConfirm.signature":
		x.Signature = value.Interface().(string)
	case "fx.gravity.crosschain.v1.MsgOracleSetConfirm.chain_name":
		x.ChainName = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgOracleSetConfirm"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgOracleSetConfirm does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgOracleSetConfirm) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "fx.gravity.crosschain.v1.MsgOracleSetConfirm.nonce":
		panic(fmt.Errorf("field nonce of message fx.gravity.crosschain.v1.MsgOracleSetConfirm is not mutable"))
	case "fx.gravity.crosschain.v1.MsgOracleSetConfirm.bridger_address":
		panic(fmt.Errorf("field bridger_address of message fx.gravity.crosschain.v1.MsgOracleSetConfirm is not mutable"))
	case "fx.gravity.crosschain.v1.MsgOracleSetConfirm.external_address":
		panic(fmt.Errorf("field external_address of message fx.gravity.crosschain.v1.MsgOracleSetConfirm is not mutable"))
	case "fx.gravity.crosschain.v1.MsgOracleSetConfirm.signature":
		panic(fmt.Errorf("field signature of message fx.gravity.crosschain.v1.MsgOracleSetConfirm is not mutable"))
	case "fx.gravity.crosschain.v1.MsgOracleSetConfirm.chain_name":
		panic(fmt.Errorf("field chain_name of message fx.gravity.crosschain.v1.MsgOracleSetConfirm is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgOracleSetConfirm"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgOracleSetConfirm does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgOracleSetConfirm) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "fx.gravity.crosschain.v1.MsgOracleSetConfirm.nonce":
		return protoreflect.ValueOfUint64(uint64(0))
	case "fx.gravity.crosschain.v1.MsgOracleSetConfirm.bridger_address":
		return protoreflect.ValueOfString("")
	case "fx.gravity.crosschain.v1.MsgOracleSetConfirm.external_address":
		return protoreflect.ValueOfString("")
	case "fx.gravity.crosschain.v1.MsgOracleSetConfirm.signature":
		return protoreflect.ValueOfString("")
	case "fx.gravity.crosschain.v1.MsgOracleSetConfirm.chain_name":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgOracleSetConfirm"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgOracleSetConfirm does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgOracleSetConfirm) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in fx.gravity.crosschain.v1.MsgOracleSetConfirm", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgOracleSetConfirm) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgOracleSetConfirm) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgOracleSetConfirm) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgOracleSetConfirm) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgOracleSetConfirm)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Nonce != 0 {
			n += 1 + runtime.Sov(uint64(x.Nonce))
		}
		l = len(x.BridgerAddress)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.ExternalAddress)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Signature)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.ChainName)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgOracleSetConfirm)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.ChainName) > 0 {
			i -= len(x.ChainName)
			copy(dAtA[i:], x.ChainName)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ChainName)))
			i--
			dAtA[i] = 0x2a
		}
		if len(x.Signature) > 0 {
			i -= len(x.Signature)
			copy(dAtA[i:], x.Signature)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Signature)))
			i--
			dAtA[i] = 0x22
		}
		if len(x.ExternalAddress) > 0 {
			i -= len(x.ExternalAddress)
			copy(dAtA[i:], x.ExternalAddress)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ExternalAddress)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.BridgerAddress) > 0 {
			i -= len(x.BridgerAddress)
			copy(dAtA[i:], x.BridgerAddress)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.BridgerAddress)))
			i--
			dAtA[i] = 0x12
		}
		if x.Nonce != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Nonce))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgOracleSetConfirm)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgOracleSetConfirm: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgOracleSetConfirm: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Nonce", wireType)
				}
				x.Nonce = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Nonce |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BridgerAddress", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.BridgerAddress = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ExternalAddress", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ExternalAddress = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Signature", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Signature = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 5:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ChainName", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ChainName = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_MsgOracleSetUpdatedClaim_4_list)(nil)

type _MsgOracleSetUpdatedClaim_4_list struct {
	list *[]*BridgeValidator
}

func (x *_MsgOracleSetUpdatedClaim_4_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_MsgOracleSetUpdatedClaim_4_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_MsgOracleSetUpdatedClaim_4_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*BridgeValidator)
	(*x.list)[i] = concreteValue
}

func (x *_MsgOracleSetUpdatedClaim_4_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*BridgeValidator)
	*x.list = append(*x.list, concreteValue)
}

func (x *_MsgOracleSetUpdatedClaim_4_list) AppendMutable() protoreflect.Value {
	v := new(BridgeValidator)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgOracleSetUpdatedClaim_4_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_MsgOracleSetUpdatedClaim_4_list) NewElement() protoreflect.Value {
	v := new(BridgeValidator)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgOracleSetUpdatedClaim_4_list) IsValid() bool {
	return x.list != nil
}

var (
	md_MsgOracleSetUpdatedClaim                  protoreflect.MessageDescriptor
	fd_MsgOracleSetUpdatedClaim_event_nonce      protoreflect.FieldDescriptor
	fd_MsgOracleSetUpdatedClaim_block_height     protoreflect.FieldDescriptor
	fd_MsgOracleSetUpdatedClaim_oracle_set_nonce protoreflect.FieldDescriptor
	fd_MsgOracleSetUpdatedClaim_members          protoreflect.FieldDescriptor
	fd_MsgOracleSetUpdatedClaim_bridger_address  protoreflect.FieldDescriptor
	fd_MsgOracleSetUpdatedClaim_chain_name       protoreflect.FieldDescriptor
)

func init() {
	file_fx_gravity_crosschain_v1_tx_proto_init()
	md_MsgOracleSetUpdatedClaim = File_fx_gravity_crosschain_v1_tx_proto.Messages().ByName("MsgOracleSetUpdatedClaim")
	fd_MsgOracleSetUpdatedClaim_event_nonce = md_MsgOracleSetUpdatedClaim.Fields().ByName("event_nonce")
	fd_MsgOracleSetUpdatedClaim_block_height = md_MsgOracleSetUpdatedClaim.Fields().ByName("block_height")
	fd_MsgOracleSetUpdatedClaim_oracle_set_nonce = md_MsgOracleSetUpdatedClaim.Fields().ByName("oracle_set_nonce")
	fd_MsgOracleSetUpdatedClaim_members = md_MsgOracleSetUpdatedClaim.Fields().ByName("members")
	fd_MsgOracleSetUpdatedClaim_bridger_address = md_MsgOracleSetUpdatedClaim.Fields().ByName("bridger_address")
	fd_MsgOracleSetUpdatedClaim_chain_name = md_MsgOracleSetUpdatedClaim.Fields().ByName("chain_name")
}

var _ protoreflect.Message = (*fastReflection_MsgOracleSetUpdatedClaim)(nil)

type fastReflection_MsgOracleSetUpdatedClaim MsgOracleSetUpdatedClaim

func (x *MsgOracleSetUpdatedClaim) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgOracleSetUpdatedClaim)(x)
}

func (x *MsgOracleSetUpdatedClaim) slowProtoReflect() protoreflect.Message {
	mi := &file_fx_gravity_crosschain_v1_tx_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgOracleSetUpdatedClaim_messageType fastReflection_MsgOracleSetUpdatedClaim_messageType
var _ protoreflect.MessageType = fastReflection_MsgOracleSetUpdatedClaim_messageType{}

type fastReflection_MsgOracleSetUpdatedClaim_messageType struct{}

func (x fastReflection_MsgOracleSetUpdatedClaim_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgOracleSetUpdatedClaim)(nil)
}
func (x fastReflection_MsgOracleSetUpdatedClaim_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgOracleSetUpdatedClaim)
}
func (x fastReflection_MsgOracleSetUpdatedClaim_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgOracleSetUpdatedClaim
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgOracleSetUpdatedClaim) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgOracleSetUpdatedClaim
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgOracleSetUpdatedClaim) Type() protoreflect.MessageType {
	return _fastReflection_MsgOracleSetUpdatedClaim_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgOracleSetUpdatedClaim) New() protoreflect.Message {
	return new(fastReflection_MsgOracleSetUpdatedClaim)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgOracleSetUpdatedClaim) Interface() protoreflect.ProtoMessage {
	return (*MsgOracleSetUpdatedClaim)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgOracleSetUpdatedClaim) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.EventNonce != uint64(0) {
		value := protoreflect.ValueOfUint64(x.EventNonce)
		if !f(fd_MsgOracleSetUpdatedClaim_event_nonce, value) {
			return
		}
	}
	if x.BlockHeight != uint64(0) {
		value := protoreflect.ValueOfUint64(x.BlockHeight)
		if !f(fd_MsgOracleSetUpdatedClaim_block_height, value) {
			return
		}
	}
	if x.OracleSetNonce != uint64(0) {
		value := protoreflect.ValueOfUint64(x.OracleSetNonce)
		if !f(fd_MsgOracleSetUpdatedClaim_oracle_set_nonce, value) {
			return
		}
	}
	if len(x.Members) != 0 {
		value := protoreflect.ValueOfList(&_MsgOracleSetUpdatedClaim_4_list{list: &x.Members})
		if !f(fd_MsgOracleSetUpdatedClaim_members, value) {
			return
		}
	}
	if x.BridgerAddress != "" {
		value := protoreflect.ValueOfString(x.BridgerAddress)
		if !f(fd_MsgOracleSetUpdatedClaim_bridger_address, value) {
			return
		}
	}
	if x.ChainName != "" {
		value := protoreflect.ValueOfString(x.ChainName)
		if !f(fd_MsgOracleSetUpdatedClaim_chain_name, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgOracleSetUpdatedClaim) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "fx.gravity.crosschain.v1.MsgOracleSetUpdatedClaim.event_nonce":
		return x.EventNonce != uint64(0)
	case "fx.gravity.crosschain.v1.MsgOracleSetUpdatedClaim.block_height":
		return x.BlockHeight != uint64(0)
	case "fx.gravity.crosschain.v1.MsgOracleSetUpdatedClaim.oracle_set_nonce":
		return x.OracleSetNonce != uint64(0)
	case "fx.gravity.crosschain.v1.MsgOracleSetUpdatedClaim.members":
		return len(x.Members) != 0
	case "fx.gravity.crosschain.v1.MsgOracleSetUpdatedClaim.bridger_address":
		return x.BridgerAddress != ""
	case "fx.gravity.crosschain.v1.MsgOracleSetUpdatedClaim.chain_name":
		return x.ChainName != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgOracleSetUpdatedClaim"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgOracleSetUpdatedClaim does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgOracleSetUpdatedClaim) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "fx.gravity.crosschain.v1.MsgOracleSetUpdatedClaim.event_nonce":
		x.EventNonce = uint64(0)
	case "fx.gravity.crosschain.v1.MsgOracleSetUpdatedClaim.block_height":
		x.BlockHeight = uint64(0)
	case "fx.gravity.crosschain.v1.MsgOracleSetUpdatedClaim.oracle_set_nonce":
		x.OracleSetNonce = uint64(0)
	case "fx.gravity.crosschain.v1.MsgOracleSetUpdatedClaim.members":
		x.Members = nil
	case "fx.gravity.crosschain.v1.MsgOracleSetUpdatedClaim.bridger_address":
		x.BridgerAddress = ""
	case "fx.gravity.crosschain.v1.MsgOracleSetUpdatedClaim.chain_name":
		x.ChainName = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgOracleSetUpdatedClaim"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgOracleSetUpdatedClaim does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgOracleSetUpdatedClaim) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "fx.gravity.crosschain.v1.MsgOracleSetUpdatedClaim.event_nonce":
		value := x.EventNonce
		return protoreflect.ValueOfUint64(value)
	case "fx.gravity.crosschain.v1.MsgOracleSetUpdatedClaim.block_height":
		value := x.BlockHeight
		return protoreflect.ValueOfUint64(value)
	case "fx.gravity.crosschain.v1.MsgOracleSetUpdatedClaim.oracle_set_nonce":
		value := x.OracleSetNonce
		return protoreflect.ValueOfUint64(value)
	case "fx.gravity.crosschain.v1.MsgOracleSetUpdatedClaim.members":
		if len(x.Members) == 0 {
			return protoreflect.ValueOfList(&_MsgOracleSetUpdatedClaim_4_list{})
		}
		listValue := &_MsgOracleSetUpdatedClaim_4_list{list: &x.Members}
		return protoreflect.ValueOfList(listValue)
	case "fx.gravity.crosschain.v1.MsgOracleSetUpdatedClaim.bridger_address":
		value := x.BridgerAddress
		return protoreflect.ValueOfString(value)
	case "fx.gravity.crosschain.v1.MsgOracleSetUpdatedClaim.chain_name":
		value := x.ChainName
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgOracleSetUpdatedClaim"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgOracleSetUpdatedClaim does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgOracleSetUpdatedClaim) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "fx.gravity.crosschain.v1.MsgOracleSetUpdatedClaim.event_nonce":
		x.EventNonce = value.Uint()
	case "fx.gravity.crosschain.v1.MsgOracleSetUpdatedClaim.block_height":
		x.BlockHeight = value.Uint()
	case "fx.gravity.crosschain.v1.MsgOracleSetUpdatedClaim.oracle_set_nonce":
		x.OracleSetNonce = value.Uint()
	case "fx.gravity.crosschain.v1.MsgOracleSetUpdatedClaim.members":
		lv := value.List()
		clv := lv.(*_MsgOracleSetUpdatedClaim_4_list)
		x.Members = *clv.list
	case "fx.gravity.crosschain.v1.MsgOracleSetUpdatedClaim.bridger_address":
		x.BridgerAddress = value.Interface().(string)
	case "fx.gravity.crosschain.v1.MsgOracleSetUpdatedClaim.chain_name":
		x.ChainName = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgOracleSetUpdatedClaim"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgOracleSetUpdatedClaim does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgOracleSetUpdatedClaim) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "fx.gravity.crosschain.v1.MsgOracleSetUpdatedClaim.members":
		if x.Members == nil {
			x.Members = []*BridgeValidator{}
		}
		value := &_MsgOracleSetUpdatedClaim_4_list{list: &x.Members}
		return protoreflect.ValueOfList(value)
	case "fx.gravity.crosschain.v1.MsgOracleSetUpdatedClaim.event_nonce":
		panic(fmt.Errorf("field event_nonce of message fx.gravity.crosschain.v1.MsgOracleSetUpdatedClaim is not mutable"))
	case "fx.gravity.crosschain.v1.MsgOracleSetUpdatedClaim.block_height":
		panic(fmt.Errorf("field block_height of message fx.gravity.crosschain.v1.MsgOracleSetUpdatedClaim is not mutable"))
	case "fx.gravity.crosschain.v1.MsgOracleSetUpdatedClaim.oracle_set_nonce":
		panic(fmt.Errorf("field oracle_set_nonce of message fx.gravity.crosschain.v1.MsgOracleSetUpdatedClaim is not mutable"))
	case "fx.gravity.crosschain.v1.MsgOracleSetUpdatedClaim.bridger_address":
		panic(fmt.Errorf("field bridger_address of message fx.gravity.crosschain.v1.MsgOracleSetUpdatedClaim is not mutable"))
	case "fx.gravity.crosschain.v1.MsgOracleSetUpdatedClaim.chain_name":
		panic(fmt.Errorf("field chain_name of message fx.gravity.crosschain.v1.MsgOracleSetUpdatedClaim is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgOracleSetUpdatedClaim"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgOracleSetUpdatedClaim does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgOracleSetUpdatedClaim) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "fx.gravity.crosschain.v1.MsgOracleSetUpdatedClaim.event_nonce":
		return protoreflect.ValueOfUint64(uint64(0))
	case "fx.gravity.crosschain.v1.MsgOracleSetUpdatedClaim.block_height":
		return protoreflect.ValueOfUint64(uint64(0))
	case "fx.gravity.crosschain.v1.MsgOracleSetUpdatedClaim.oracle_set_nonce":
		return protoreflect.ValueOfUint64(uint64(0))
	case "fx.gravity.crosschain.v1.MsgOracleSetUpdatedClaim.members":
		list := []*BridgeValidator{}
		return protoreflect.ValueOfList(&_MsgOracleSetUpdatedClaim_4_list{list: &list})
	case "fx.gravity.crosschain.v1.MsgOracleSetUpdatedClaim.bridger_address":
		return protoreflect.ValueOfString("")
	case "fx.gravity.crosschain.v1.MsgOracleSetUpdatedClaim.chain_name":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgOracleSetUpdatedClaim"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgOracleSetUpdatedClaim does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgOracleSetUpdatedClaim) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in fx.gravity.crosschain.v1.MsgOracleSetUpdatedClaim", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgOracleSetUpdatedClaim) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgOracleSetUpdatedClaim) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgOracleSetUpdatedClaim) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgOracleSetUpdatedClaim) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgOracleSetUpdatedClaim)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.EventNonce != 0 {
			n += 1 + runtime.Sov(uint64(x.EventNonce))
		}
		if x.BlockHeight != 0 {
			n += 1 + runtime.Sov(uint64(x.BlockHeight))
		}
		if x.OracleSetNonce != 0 {
			n += 1 + runtime.Sov(uint64(x.OracleSetNonce))
		}
		if len(x.Members) > 0 {
			for _, e := range x.Members {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		l = len(x.BridgerAddress)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.ChainName)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgOracleSetUpdatedClaim)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.ChainName) > 0 {
			i -= len(x.ChainName)
			copy(dAtA[i:], x.ChainName)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ChainName)))
			i--
			dAtA[i] = 0x3a
		}
		if len(x.BridgerAddress) > 0 {
			i -= len(x.BridgerAddress)
			copy(dAtA[i:], x.BridgerAddress)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.BridgerAddress)))
			i--
			dAtA[i] = 0x32
		}
		if len(x.Members) > 0 {
			for iNdEx := len(x.Members) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.Members[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x22
			}
		}
		if x.OracleSetNonce != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.OracleSetNonce))
			i--
			dAtA[i] = 0x18
		}
		if x.BlockHeight != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.BlockHeight))
			i--
			dAtA[i] = 0x10
		}
		if x.EventNonce != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.EventNonce))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgOracleSetUpdatedClaim)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgOracleSetUpdatedClaim: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgOracleSetUpdatedClaim: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field EventNonce", wireType)
				}
				x.EventNonce = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.EventNonce |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BlockHeight", wireType)
				}
				x.BlockHeight = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.BlockHeight |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 3:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field OracleSetNonce", wireType)
				}
				x.OracleSetNonce = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.OracleSetNonce |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Members", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Members = append(x.Members, &BridgeValidator{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Members[len(x.Members)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 6:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BridgerAddress", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.BridgerAddress = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 7:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ChainName", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ChainName = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgSendToFxClaim                 protoreflect.MessageDescriptor
	fd_MsgSendToFxClaim_event_nonce     protoreflect.FieldDescriptor
	fd_MsgSendToFxClaim_block_height    protoreflect.FieldDescriptor
	fd_MsgSendToFxClaim_token_contract  protoreflect.FieldDescriptor
	fd_MsgSendToFxClaim_amount          protoreflect.FieldDescriptor
	fd_MsgSendToFxClaim_sender          protoreflect.FieldDescriptor
	fd_MsgSendToFxClaim_receiver        protoreflect.FieldDescriptor
	fd_MsgSendToFxClaim_target_ibc      protoreflect.FieldDescriptor
	fd_MsgSendToFxClaim_bridger_address protoreflect.FieldDescriptor
	fd_MsgSendToFxClaim_chain_name      protoreflect.FieldDescriptor
)

func init() {
	file_fx_gravity_crosschain_v1_tx_proto_init()
	md_MsgSendToFxClaim = File_fx_gravity_crosschain_v1_tx_proto.Messages().ByName("MsgSendToFxClaim")
	fd_MsgSendToFxClaim_event_nonce = md_MsgSendToFxClaim.Fields().ByName("event_nonce")
	fd_MsgSendToFxClaim_block_height = md_MsgSendToFxClaim.Fields().ByName("block_height")
	fd_MsgSendToFxClaim_token_contract = md_MsgSendToFxClaim.Fields().ByName("token_contract")
	fd_MsgSendToFxClaim_amount = md_MsgSendToFxClaim.Fields().ByName("amount")
	fd_MsgSendToFxClaim_sender = md_MsgSendToFxClaim.Fields().ByName("sender")
	fd_MsgSendToFxClaim_receiver = md_MsgSendToFxClaim.Fields().ByName("receiver")
	fd_MsgSendToFxClaim_target_ibc = md_MsgSendToFxClaim.Fields().ByName("target_ibc")
	fd_MsgSendToFxClaim_bridger_address = md_MsgSendToFxClaim.Fields().ByName("bridger_address")
	fd_MsgSendToFxClaim_chain_name = md_MsgSendToFxClaim.Fields().ByName("chain_name")
}

var _ protoreflect.Message = (*fastReflection_MsgSendToFxClaim)(nil)

type fastReflection_MsgSendToFxClaim MsgSendToFxClaim

func (x *MsgSendToFxClaim) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgSendToFxClaim)(x)
}

func (x *MsgSendToFxClaim) slowProtoReflect() protoreflect.Message {
	mi := &file_fx_gravity_crosschain_v1_tx_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgSendToFxClaim_messageType fastReflection_MsgSendToFxClaim_messageType
var _ protoreflect.MessageType = fastReflection_MsgSendToFxClaim_messageType{}

type fastReflection_MsgSendToFxClaim_messageType struct{}

func (x fastReflection_MsgSendToFxClaim_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgSendToFxClaim)(nil)
}
func (x fastReflection_MsgSendToFxClaim_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgSendToFxClaim)
}
func (x fastReflection_MsgSendToFxClaim_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgSendToFxClaim
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgSendToFxClaim) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgSendToFxClaim
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgSendToFxClaim) Type() protoreflect.MessageType {
	return _fastReflection_MsgSendToFxClaim_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgSendToFxClaim) New() protoreflect.Message {
	return new(fastReflection_MsgSendToFxClaim)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgSendToFxClaim) Interface() protoreflect.ProtoMessage {
	return (*MsgSendToFxClaim)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgSendToFxClaim) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.EventNonce != uint64(0) {
		value := protoreflect.ValueOfUint64(x.EventNonce)
		if !f(fd_MsgSendToFxClaim_event_nonce, value) {
			return
		}
	}
	if x.BlockHeight != uint64(0) {
		value := protoreflect.ValueOfUint64(x.BlockHeight)
		if !f(fd_MsgSendToFxClaim_block_height, value) {
			return
		}
	}
	if x.TokenContract != "" {
		value := protoreflect.ValueOfString(x.TokenContract)
		if !f(fd_MsgSendToFxClaim_token_contract, value) {
			return
		}
	}
	if x.Amount != "" {
		value := protoreflect.ValueOfString(x.Amount)
		if !f(fd_MsgSendToFxClaim_amount, value) {
			return
		}
	}
	if x.Sender != "" {
		value := protoreflect.ValueOfString(x.Sender)
		if !f(fd_MsgSendToFxClaim_sender, value) {
			return
		}
	}
	if x.Receiver != "" {
		value := protoreflect.ValueOfString(x.Receiver)
		if !f(fd_MsgSendToFxClaim_receiver, value) {
			return
		}
	}
	if x.TargetIbc != "" {
		value := protoreflect.ValueOfString(x.TargetIbc)
		if !f(fd_MsgSendToFxClaim_target_ibc, value) {
			return
		}
	}
	if x.BridgerAddress != "" {
		value := protoreflect.ValueOfString(x.BridgerAddress)
		if !f(fd_MsgSendToFxClaim_bridger_address, value) {
			return
		}
	}
	if x.ChainName != "" {
		value := protoreflect.ValueOfString(x.ChainName)
		if !f(fd_MsgSendToFxClaim_chain_name, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgSendToFxClaim) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "fx.gravity.crosschain.v1.MsgSendToFxClaim.event_nonce":
		return x.EventNonce != uint64(0)
	case "fx.gravity.crosschain.v1.MsgSendToFxClaim.block_height":
		return x.BlockHeight != uint64(0)
	case "fx.gravity.crosschain.v1.MsgSendToFxClaim.token_contract":
		return x.TokenContract != ""
	case "fx.gravity.crosschain.v1.MsgSendToFxClaim.amount":
		return x.Amount != ""
	case "fx.gravity.crosschain.v1.MsgSendToFxClaim.sender":
		return x.Sender != ""
	case "fx.gravity.crosschain.v1.MsgSendToFxClaim.receiver":
		return x.Receiver != ""
	case "fx.gravity.crosschain.v1.MsgSendToFxClaim.target_ibc":
		return x.TargetIbc != ""
	case "fx.gravity.crosschain.v1.MsgSendToFxClaim.bridger_address":
		return x.BridgerAddress != ""
	case "fx.gravity.crosschain.v1.MsgSendToFxClaim.chain_name":
		return x.ChainName != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgSendToFxClaim"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgSendToFxClaim does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgSendToFxClaim) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "fx.gravity.crosschain.v1.MsgSendToFxClaim.event_nonce":
		x.EventNonce = uint64(0)
	case "fx.gravity.crosschain.v1.MsgSendToFxClaim.block_height":
		x.BlockHeight = uint64(0)
	case "fx.gravity.crosschain.v1.MsgSendToFxClaim.token_contract":
		x.TokenContract = ""
	case "fx.gravity.crosschain.v1.MsgSendToFxClaim.amount":
		x.Amount = ""
	case "fx.gravity.crosschain.v1.MsgSendToFxClaim.sender":
		x.Sender = ""
	case "fx.gravity.crosschain.v1.MsgSendToFxClaim.receiver":
		x.Receiver = ""
	case "fx.gravity.crosschain.v1.MsgSendToFxClaim.target_ibc":
		x.TargetIbc = ""
	case "fx.gravity.crosschain.v1.MsgSendToFxClaim.bridger_address":
		x.BridgerAddress = ""
	case "fx.gravity.crosschain.v1.MsgSendToFxClaim.chain_name":
		x.ChainName = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgSendToFxClaim"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgSendToFxClaim does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgSendToFxClaim) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "fx.gravity.crosschain.v1.MsgSendToFxClaim.event_nonce":
		value := x.EventNonce
		return protoreflect.ValueOfUint64(value)
	case "fx.gravity.crosschain.v1.MsgSendToFxClaim.block_height":
		value := x.BlockHeight
		return protoreflect.ValueOfUint64(value)
	case "fx.gravity.crosschain.v1.MsgSendToFxClaim.token_contract":
		value := x.TokenContract
		return protoreflect.ValueOfString(value)
	case "fx.gravity.crosschain.v1.MsgSendToFxClaim.amount":
		value := x.Amount
		return protoreflect.ValueOfString(value)
	case "fx.gravity.crosschain.v1.MsgSendToFxClaim.sender":
		value := x.Sender
		return protoreflect.ValueOfString(value)
	case "fx.gravity.crosschain.v1.MsgSendToFxClaim.receiver":
		value := x.Receiver
		return protoreflect.ValueOfString(value)
	case "fx.gravity.crosschain.v1.MsgSendToFxClaim.target_ibc":
		value := x.TargetIbc
		return protoreflect.ValueOfString(value)
	case "fx.gravity.crosschain.v1.MsgSendToFxClaim.bridger_address":
		value := x.BridgerAddress
		return protoreflect.ValueOfString(value)
	case "fx.gravity.crosschain.v1.MsgSendToFxClaim.chain_name":
		value := x.ChainName
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgSendToFxClaim"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgSendToFxClaim does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgSendToFxClaim) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "fx.gravity.crosschain.v1.MsgSendToFxClaim.event_nonce":
		x.EventNonce = value.Uint()
	case "fx.gravity.crosschain.v1.MsgSendToFxClaim.block_height":
		x.BlockHeight = value.Uint()
	case "fx.gravity.crosschain.v1.MsgSendToFxClaim.token_contract":
		x.TokenContract = value.Interface().(string)
	case "fx.gravity.crosschain.v1.MsgSendToFxClaim.amount":
		x.Amount = value.Interface().(string)
	case "fx.gravity.crosschain.v1.MsgSendToFxClaim.sender":
		x.Sender = value.Interface().(string)
	case "fx.gravity.crosschain.v1.MsgSendToFxClaim.receiver":
		x.Receiver = value.Interface().(string)
	case "fx.gravity.crosschain.v1.MsgSendToFxClaim.target_ibc":
		x.TargetIbc = value.Interface().(string)
	case "fx.gravity.crosschain.v1.MsgSendToFxClaim.bridger_address":
		x.BridgerAddress = value.Interface().(string)
	case "fx.gravity.crosschain.v1.MsgSendToFxClaim.chain_name":
		x.ChainName = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgSendToFxClaim"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgSendToFxClaim does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgSendToFxClaim) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "fx.gravity.crosschain.v1.MsgSendToFxClaim.event_nonce":
		panic(fmt.Errorf("field event_nonce of message fx.gravity.crosschain.v1.MsgSendToFxClaim is not mutable"))
	case "fx.gravity.crosschain.v1.MsgSendToFxClaim.block_height":
		panic(fmt.Errorf("field block_height of message fx.gravity.crosschain.v1.MsgSendToFxClaim is not mutable"))
	case "fx.gravity.crosschain.v1.MsgSendToFxClaim.token_contract":
		panic(fmt.Errorf("field token_contract of message fx.gravity.crosschain.v1.MsgSendToFxClaim is not mutable"))
	case "fx.gravity.crosschain.v1.MsgSendToFxClaim.amount":
		panic(fmt.Errorf("field amount of message fx.gravity.crosschain.v1.MsgSendToFxClaim is not mutable"))
	case "fx.gravity.crosschain.v1.MsgSendToFxClaim.sender":
		panic(fmt.Errorf("field sender of message fx.gravity.crosschain.v1.MsgSendToFxClaim is not mutable"))
	case "fx.gravity.crosschain.v1.MsgSendToFxClaim.receiver":
		panic(fmt.Errorf("field receiver of message fx.gravity.crosschain.v1.MsgSendToFxClaim is not mutable"))
	case "fx.gravity.crosschain.v1.MsgSendToFxClaim.target_ibc":
		panic(fmt.Errorf("field target_ibc of message fx.gravity.crosschain.v1.MsgSendToFxClaim is not mutable"))
	case "fx.gravity.crosschain.v1.MsgSendToFxClaim.bridger_address":
		panic(fmt.Errorf("field bridger_address of message fx.gravity.crosschain.v1.MsgSendToFxClaim is not mutable"))
	case "fx.gravity.crosschain.v1.MsgSendToFxClaim.chain_name":
		panic(fmt.Errorf("field chain_name of message fx.gravity.crosschain.v1.MsgSendToFxClaim is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgSendToFxClaim"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgSendToFxClaim does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgSendToFxClaim) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "fx.gravity.crosschain.v1.MsgSendToFxClaim.event_nonce":
		return protoreflect.ValueOfUint64(uint64(0))
	case "fx.gravity.crosschain.v1.MsgSendToFxClaim.block_height":
		return protoreflect.ValueOfUint64(uint64(0))
	case "fx.gravity.crosschain.v1.MsgSendToFxClaim.token_contract":
		return protoreflect.ValueOfString("")
	case "fx.gravity.crosschain.v1.MsgSendToFxClaim.amount":
		return protoreflect.ValueOfString("")
	case "fx.gravity.crosschain.v1.MsgSendToFxClaim.sender":
		return protoreflect.ValueOfString("")
	case "fx.gravity.crosschain.v1.MsgSendToFxClaim.receiver":
		return protoreflect.ValueOfString("")
	case "fx.gravity.crosschain.v1.MsgSendToFxClaim.target_ibc":
		return protoreflect.ValueOfString("")
	case "fx.gravity.crosschain.v1.MsgSendToFxClaim.bridger_address":
		return protoreflect.ValueOfString("")
	case "fx.gravity.crosschain.v1.MsgSendToFxClaim.chain_name":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgSendToFxClaim"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgSendToFxClaim does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgSendToFxClaim) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in fx.gravity.crosschain.v1.MsgSendToFxClaim", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgSendToFxClaim) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgSendToFxClaim) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgSendToFxClaim) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgSendToFxClaim) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgSendToFxClaim)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.EventNonce != 0 {
			n += 1 + runtime.Sov(uint64(x.EventNonce))
		}
		if x.BlockHeight != 0 {
			n += 1 + runtime.Sov(uint64(x.BlockHeight))
		}
		l = len(x.TokenContract)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Amount)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Sender)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Receiver)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.TargetIbc)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.BridgerAddress)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.ChainName)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgSendToFxClaim)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.ChainName) > 0 {
			i -= len(x.ChainName)
			copy(dAtA[i:], x.ChainName)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ChainName)))
			i--
			dAtA[i] = 0x4a
		}
		if len(x.BridgerAddress) > 0 {
			i -= len(x.BridgerAddress)
			copy(dAtA[i:], x.BridgerAddress)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.BridgerAddress)))
			i--
			dAtA[i] = 0x42
		}
		if len(x.TargetIbc) > 0 {
			i -= len(x.TargetIbc)
			copy(dAtA[i:], x.TargetIbc)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.TargetIbc)))
			i--
			dAtA[i] = 0x3a
		}
		if len(x.Receiver) > 0 {
			i -= len(x.Receiver)
			copy(dAtA[i:], x.Receiver)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Receiver)))
			i--
			dAtA[i] = 0x32
		}
		if len(x.Sender) > 0 {
			i -= len(x.Sender)
			copy(dAtA[i:], x.Sender)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Sender)))
			i--
			dAtA[i] = 0x2a
		}
		if len(x.Amount) > 0 {
			i -= len(x.Amount)
			copy(dAtA[i:], x.Amount)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Amount)))
			i--
			dAtA[i] = 0x22
		}
		if len(x.TokenContract) > 0 {
			i -= len(x.TokenContract)
			copy(dAtA[i:], x.TokenContract)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.TokenContract)))
			i--
			dAtA[i] = 0x1a
		}
		if x.BlockHeight != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.BlockHeight))
			i--
			dAtA[i] = 0x10
		}
		if x.EventNonce != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.EventNonce))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgSendToFxClaim)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgSendToFxClaim: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgSendToFxClaim: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field EventNonce", wireType)
				}
				x.EventNonce = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.EventNonce |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BlockHeight", wireType)
				}
				x.BlockHeight = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.BlockHeight |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TokenContract", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.TokenContract = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Amount", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Amount = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 5:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Sender", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Sender = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 6:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Receiver", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Receiver = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 7:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TargetIbc", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.TargetIbc = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 8:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BridgerAddress", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.BridgerAddress = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 9:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ChainName", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ChainName = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_MsgBridgeCallClaim_7_list)(nil)

type _MsgBridgeCallClaim_7_list struct {
	list *[]string
}

func (x *_MsgBridgeCallClaim_7_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_MsgBridgeCallClaim_7_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfString((*x.list)[i])
}

func (x *_MsgBridgeCallClaim_7_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	(*x.list)[i] = concreteValue
}

func (x *_MsgBridgeCallClaim_7_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	*x.list = append(*x.list, concreteValue)
}

func (x *_MsgBridgeCallClaim_7_list) AppendMutable() protoreflect.Value {
	panic(fmt.Errorf("AppendMutable can not be called on message MsgBridgeCallClaim at list field TokenContracts as it is not of Message kind"))
}

func (x *_MsgBridgeCallClaim_7_list) Truncate(n int) {
	*x.list = (*x.list)[:n]
}

func (x *_MsgBridgeCallClaim_7_list) NewElement() protoreflect.Value {
	v := ""
	return protoreflect.ValueOfString(v)
}

func (x *_MsgBridgeCallClaim_7_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_MsgBridgeCallClaim_8_list)(nil)

type _MsgBridgeCallClaim_8_list struct {
	list *[]string
}

func (x *_MsgBridgeCallClaim_8_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_MsgBridgeCallClaim_8_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfString((*x.list)[i])
}

func (x *_MsgBridgeCallClaim_8_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	(*x.list)[i] = concreteValue
}

func (x *_MsgBridgeCallClaim_8_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	*x.list = append(*x.list, concreteValue)
}

func (x *_MsgBridgeCallClaim_8_list) AppendMutable() protoreflect.Value {
	panic(fmt.Errorf("AppendMutable can not be called on message MsgBridgeCallClaim at list field Amounts as it is not of Message kind"))
}

func (x *_MsgBridgeCallClaim_8_list) Truncate(n int) {
	*x.list = (*x.list)[:n]
}

func (x *_MsgBridgeCallClaim_8_list) NewElement() protoreflect.Value {
	v := ""
	return protoreflect.ValueOfString(v)
}

func (x *_MsgBridgeCallClaim_8_list) IsValid() bool {
	return x.list != nil
}

var (
	md_MsgBridgeCallClaim                 protoreflect.MessageDescriptor
	fd_MsgBridgeCallClaim_chain_name      protoreflect.FieldDescriptor
	fd_MsgBridgeCallClaim_bridger_address protoreflect.FieldDescriptor
	fd_MsgBridgeCallClaim_event_nonce     protoreflect.FieldDescriptor
	fd_MsgBridgeCallClaim_block_height    protoreflect.FieldDescriptor
	fd_MsgBridgeCallClaim_sender          protoreflect.FieldDescriptor
	fd_MsgBridgeCallClaim_refund          protoreflect.FieldDescriptor
	fd_MsgBridgeCallClaim_token_contracts protoreflect.FieldDescriptor
	fd_MsgBridgeCallClaim_amounts         protoreflect.FieldDescriptor
	fd_MsgBridgeCallClaim_to              protoreflect.FieldDescriptor
	fd_MsgBridgeCallClaim_data            protoreflect.FieldDescriptor
	fd_MsgBridgeCallClaim_quote_id        protoreflect.FieldDescriptor
	fd_MsgBridgeCallClaim_gas_limit       protoreflect.FieldDescriptor
	fd_MsgBridgeCallClaim_memo            protoreflect.FieldDescriptor
	fd_MsgBridgeCallClaim_tx_origin       protoreflect.FieldDescriptor
)

func init() {
	file_fx_gravity_crosschain_v1_tx_proto_init()
	md_MsgBridgeCallClaim = File_fx_gravity_crosschain_v1_tx_proto.Messages().ByName("MsgBridgeCallClaim")
	fd_MsgBridgeCallClaim_chain_name = md_MsgBridgeCallClaim.Fields().ByName("chain_name")
	fd_MsgBridgeCallClaim_bridger_address = md_MsgBridgeCallClaim.Fields().ByName("bridger_address")
	fd_MsgBridgeCallClaim_event_nonce = md_MsgBridgeCallClaim.Fields().ByName("event_nonce")
	fd_MsgBridgeCallClaim_block_height = md_MsgBridgeCallClaim.Fields().ByName("block_height")
	fd_MsgBridgeCallClaim_sender = md_MsgBridgeCallClaim.Fields().ByName("sender")
	fd_MsgBridgeCallClaim_refund = md_MsgBridgeCallClaim.Fields().ByName("refund")
	fd_MsgBridgeCallClaim_token_contracts = md_MsgBridgeCallClaim.Fields().ByName("token_contracts")
	fd_MsgBridgeCallClaim_amounts = md_MsgBridgeCallClaim.Fields().ByName("amounts")
	fd_MsgBridgeCallClaim_to = md_MsgBridgeCallClaim.Fields().ByName("to")
	fd_MsgBridgeCallClaim_data = md_MsgBridgeCallClaim.Fields().ByName("data")
	fd_MsgBridgeCallClaim_quote_id = md_MsgBridgeCallClaim.Fields().ByName("quote_id")
	fd_MsgBridgeCallClaim_gas_limit = md_MsgBridgeCallClaim.Fields().ByName("gas_limit")
	fd_MsgBridgeCallClaim_memo = md_MsgBridgeCallClaim.Fields().ByName("memo")
	fd_MsgBridgeCallClaim_tx_origin = md_MsgBridgeCallClaim.Fields().ByName("tx_origin")
}

var _ protoreflect.Message = (*fastReflection_MsgBridgeCallClaim)(nil)

type fastReflection_MsgBridgeCallClaim MsgBridgeCallClaim

func (x *MsgBridgeCallClaim) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgBridgeCallClaim)(x)
}

func (x *MsgBridgeCallClaim) slowProtoReflect() protoreflect.Message {
	mi := &file_fx_gravity_crosschain_v1_tx_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgBridgeCallClaim_messageType fastReflection_MsgBridgeCallClaim_messageType
var _ protoreflect.MessageType = fastReflection_MsgBridgeCallClaim_messageType{}

type fastReflection_MsgBridgeCallClaim_messageType struct{}

func (x fastReflection_MsgBridgeCallClaim_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgBridgeCallClaim)(nil)
}
func (x fastReflection_MsgBridgeCallClaim_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgBridgeCallClaim)
}
func (x fastReflection_MsgBridgeCallClaim_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgBridgeCallClaim
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgBridgeCallClaim) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgBridgeCallClaim
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgBridgeCallClaim) Type() protoreflect.MessageType {
	return _fastReflection_MsgBridgeCallClaim_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgBridgeCallClaim) New() protoreflect.Message {
	return new(fastReflection_MsgBridgeCallClaim)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgBridgeCallClaim) Interface() protoreflect.ProtoMessage {
	return (*MsgBridgeCallClaim)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgBridgeCallClaim) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.ChainName != "" {
		value := protoreflect.ValueOfString(x.ChainName)
		if !f(fd_MsgBridgeCallClaim_chain_name, value) {
			return
		}
	}
	if x.BridgerAddress != "" {
		value := protoreflect.ValueOfString(x.BridgerAddress)
		if !f(fd_MsgBridgeCallClaim_bridger_address, value) {
			return
		}
	}
	if x.EventNonce != uint64(0) {
		value := protoreflect.ValueOfUint64(x.EventNonce)
		if !f(fd_MsgBridgeCallClaim_event_nonce, value) {
			return
		}
	}
	if x.BlockHeight != uint64(0) {
		value := protoreflect.ValueOfUint64(x.BlockHeight)
		if !f(fd_MsgBridgeCallClaim_block_height, value) {
			return
		}
	}
	if x.Sender != "" {
		value := protoreflect.ValueOfString(x.Sender)
		if !f(fd_MsgBridgeCallClaim_sender, value) {
			return
		}
	}
	if x.Refund != "" {
		value := protoreflect.ValueOfString(x.Refund)
		if !f(fd_MsgBridgeCallClaim_refund, value) {
			return
		}
	}
	if len(x.TokenContracts) != 0 {
		value := protoreflect.ValueOfList(&_MsgBridgeCallClaim_7_list{list: &x.TokenContracts})
		if !f(fd_MsgBridgeCallClaim_token_contracts, value) {
			return
		}
	}
	if len(x.Amounts) != 0 {
		value := protoreflect.ValueOfList(&_MsgBridgeCallClaim_8_list{list: &x.Amounts})
		if !f(fd_MsgBridgeCallClaim_amounts, value) {
			return
		}
	}
	if x.To != "" {
		value := protoreflect.ValueOfString(x.To)
		if !f(fd_MsgBridgeCallClaim_to, value) {
			return
		}
	}
	if x.Data != "" {
		value := protoreflect.ValueOfString(x.Data)
		if !f(fd_MsgBridgeCallClaim_data, value) {
			return
		}
	}
	if x.QuoteId != "" {
		value := protoreflect.ValueOfString(x.QuoteId)
		if !f(fd_MsgBridgeCallClaim_quote_id, value) {
			return
		}
	}
	if x.GasLimit != "" {
		value := protoreflect.ValueOfString(x.GasLimit)
		if !f(fd_MsgBridgeCallClaim_gas_limit, value) {
			return
		}
	}
	if x.Memo != "" {
		value := protoreflect.ValueOfString(x.Memo)
		if !f(fd_MsgBridgeCallClaim_memo, value) {
			return
		}
	}
	if x.TxOrigin != "" {
		value := protoreflect.ValueOfString(x.TxOrigin)
		if !f(fd_MsgBridgeCallClaim_tx_origin, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgBridgeCallClaim) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "fx.gravity.crosschain.v1.MsgBridgeCallClaim.chain_name":
		return x.ChainName != ""
	case "fx.gravity.crosschain.v1.MsgBridgeCallClaim.bridger_address":
		return x.BridgerAddress != ""
	case "fx.gravity.crosschain.v1.MsgBridgeCallClaim.event_nonce":
		return x.EventNonce != uint64(0)
	case "fx.gravity.crosschain.v1.MsgBridgeCallClaim.block_height":
		return x.BlockHeight != uint64(0)
	case "fx.gravity.crosschain.v1.MsgBridgeCallClaim.sender":
		return x.Sender != ""
	case "fx.gravity.crosschain.v1.MsgBridgeCallClaim.refund":
		return x.Refund != ""
	case "fx.gravity.crosschain.v1.MsgBridgeCallClaim.token_contracts":
		return len(x.TokenContracts) != 0
	case "fx.gravity.crosschain.v1.MsgBridgeCallClaim.amounts":
		return len(x.Amounts) != 0
	case "fx.gravity.crosschain.v1.MsgBridgeCallClaim.to":
		return x.To != ""
	case "fx.gravity.crosschain.v1.MsgBridgeCallClaim.data":
		return x.Data != ""
	case "fx.gravity.crosschain.v1.MsgBridgeCallClaim.quote_id":
		return x.QuoteId != ""
	case "fx.gravity.crosschain.v1.MsgBridgeCallClaim.gas_limit":
		return x.GasLimit != ""
	case "fx.gravity.crosschain.v1.MsgBridgeCallClaim.memo":
		return x.Memo != ""
	case "fx.gravity.crosschain.v1.MsgBridgeCallClaim.tx_origin":
		return x.TxOrigin != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgBridgeCallClaim"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgBridgeCallClaim does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgBridgeCallClaim) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "fx.gravity.crosschain.v1.MsgBridgeCallClaim.chain_name":
		x.ChainName = ""
	case "fx.gravity.crosschain.v1.MsgBridgeCallClaim.bridger_address":
		x.BridgerAddress = ""
	case "fx.gravity.crosschain.v1.MsgBridgeCallClaim.event_nonce":
		x.EventNonce = uint64(0)
	case "fx.gravity.crosschain.v1.MsgBridgeCallClaim.block_height":
		x.BlockHeight = uint64(0)
	case "fx.gravity.crosschain.v1.MsgBridgeCallClaim.sender":
		x.Sender = ""
	case "fx.gravity.crosschain.v1.MsgBridgeCallClaim.refund":
		x.Refund = ""
	case "fx.gravity.crosschain.v1.MsgBridgeCallClaim.token_contracts":
		x.TokenContracts = nil
	case "fx.gravity.crosschain.v1.MsgBridgeCallClaim.amounts":
		x.Amounts = nil
	case "fx.gravity.crosschain.v1.MsgBridgeCallClaim.to":
		x.To = ""
	case "fx.gravity.crosschain.v1.MsgBridgeCallClaim.data":
		x.Data = ""
	case "fx.gravity.crosschain.v1.MsgBridgeCallClaim.quote_id":
		x.QuoteId = ""
	case "fx.gravity.crosschain.v1.MsgBridgeCallClaim.gas_limit":
		x.GasLimit = ""
	case "fx.gravity.crosschain.v1.MsgBridgeCallClaim.memo":
		x.Memo = ""
	case "fx.gravity.crosschain.v1.MsgBridgeCallClaim.tx_origin":
		x.TxOrigin = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgBridgeCallClaim"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgBridgeCallClaim does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgBridgeCallClaim) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "fx.gravity.crosschain.v1.MsgBridgeCallClaim.chain_name":
		value := x.ChainName
		return protoreflect.ValueOfString(value)
	case "fx.gravity.crosschain.v1.MsgBridgeCallClaim.bridger_address":
		value := x.BridgerAddress
		return protoreflect.ValueOfString(value)
	case "fx.gravity.crosschain.v1.MsgBridgeCallClaim.event_nonce":
		value := x.EventNonce
		return protoreflect.ValueOfUint64(value)
	case "fx.gravity.crosschain.v1.MsgBridgeCallClaim.block_height":
		value := x.BlockHeight
		return protoreflect.ValueOfUint64(value)
	case "fx.gravity.crosschain.v1.MsgBridgeCallClaim.sender":
		value := x.Sender
		return protoreflect.ValueOfString(value)
	case "fx.gravity.crosschain.v1.MsgBridgeCallClaim.refund":
		value := x.Refund
		return protoreflect.ValueOfString(value)
	case "fx.gravity.crosschain.v1.MsgBridgeCallClaim.token_contracts":
		if len(x.TokenContracts) == 0 {
			return protoreflect.ValueOfList(&_MsgBridgeCallClaim_7_list{})
		}
		listValue := &_MsgBridgeCallClaim_7_list{list: &x.TokenContracts}
		return protoreflect.ValueOfList(listValue)
	case "fx.gravity.crosschain.v1.MsgBridgeCallClaim.amounts":
		if len(x.Amounts) == 0 {
			return protoreflect.ValueOfList(&_MsgBridgeCallClaim_8_list{})
		}
		listValue := &_MsgBridgeCallClaim_8_list{list: &x.Amounts}
		return protoreflect.ValueOfList(listValue)
	case "fx.gravity.crosschain.v1.MsgBridgeCallClaim.to":
		value := x.To
		return protoreflect.ValueOfString(value)
	case "fx.gravity.crosschain.v1.MsgBridgeCallClaim.data":
		value := x.Data
		return protoreflect.ValueOfString(value)
	case "fx.gravity.crosschain.v1.MsgBridgeCallClaim.quote_id":
		value := x.QuoteId
		return protoreflect.ValueOfString(value)
	case "fx.gravity.crosschain.v1.MsgBridgeCallClaim.gas_limit":
		value := x.GasLimit
		return protoreflect.ValueOfString(value)
	case "fx.gravity.crosschain.v1.MsgBridgeCallClaim.memo":
		value := x.Memo
		return protoreflect.ValueOfString(value)
	case "fx.gravity.crosschain.v1.MsgBridgeCallClaim.tx_origin":
		value := x.TxOrigin
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgBridgeCallClaim"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgBridgeCallClaim does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgBridgeCallClaim) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "fx.gravity.crosschain.v1.MsgBridgeCallClaim.chain_name":
		x.ChainName = value.Interface().(string)
	case "fx.gravity.crosschain.v1.MsgBridgeCallClaim.bridger_address":
		x.BridgerAddress = value.Interface().(string)
	case "fx.gravity.crosschain.v1.MsgBridgeCallClaim.event_nonce":
		x.EventNonce = value.Uint()
	case "fx.gravity.crosschain.v1.MsgBridgeCallClaim.block_height":
		x.BlockHeight = value.Uint()
	case "fx.gravity.crosschain.v1.MsgBridgeCallClaim.sender":
		x.Sender = value.Interface().(string)
	case "fx.gravity.crosschain.v1.MsgBridgeCallClaim.refund":
		x.Refund = value.Interface().(string)
	case "fx.gravity.crosschain.v1.MsgBridgeCallClaim.token_contracts":
		lv := value.List()
		clv := lv.(*_MsgBridgeCallClaim_7_list)
		x.TokenContracts = *clv.list
	case "fx.gravity.crosschain.v1.MsgBridgeCallClaim.amounts":
		lv := value.List()
		clv := lv.(*_MsgBridgeCallClaim_8_list)
		x.Amounts = *clv.list
	case "fx.gravity.crosschain.v1.MsgBridgeCallClaim.to":
		x.To = value.Interface().(string)
	case "fx.gravity.crosschain.v1.MsgBridgeCallClaim.data":
		x.Data = value.Interface().(string)
	case "fx.gravity.crosschain.v1.MsgBridgeCallClaim.quote_id":
		x.QuoteId = value.Interface().(string)
	case "fx.gravity.crosschain.v1.MsgBridgeCallClaim.gas_limit":
		x.GasLimit = value.Interface().(string)
	case "fx.gravity.crosschain.v1.MsgBridgeCallClaim.memo":
		x.Memo = value.Interface().(string)
	case "fx.gravity.crosschain.v1.MsgBridgeCallClaim.tx_origin":
		x.TxOrigin = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgBridgeCallClaim"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgBridgeCallClaim does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgBridgeCallClaim) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "fx.gravity.crosschain.v1.MsgBridgeCallClaim.token_contracts":
		if x.TokenContracts == nil {
			x.TokenContracts = []string{}
		}
		value := &_MsgBridgeCallClaim_7_list{list: &x.TokenContracts}
		return protoreflect.ValueOfList(value)
	case "fx.gravity.crosschain.v1.MsgBridgeCallClaim.amounts":
		if x.Amounts == nil {
			x.Amounts = []string{}
		}
		value := &_MsgBridgeCallClaim_8_list{list: &x.Amounts}
		return protoreflect.ValueOfList(value)
	case "fx.gravity.crosschain.v1.MsgBridgeCallClaim.chain_name":
		panic(fmt.Errorf("field chain_name of message fx.gravity.crosschain.v1.MsgBridgeCallClaim is not mutable"))
	case "fx.gravity.crosschain.v1.MsgBridgeCallClaim.bridger_address":
		panic(fmt.Errorf("field bridger_address of message fx.gravity.crosschain.v1.MsgBridgeCallClaim is not mutable"))
	case "fx.gravity.crosschain.v1.MsgBridgeCallClaim.event_nonce":
		panic(fmt.Errorf("field event_nonce of message fx.gravity.crosschain.v1.MsgBridgeCallClaim is not mutable"))
	case "fx.gravity.crosschain.v1.MsgBridgeCallClaim.block_height":
		panic(fmt.Errorf("field block_height of message fx.gravity.crosschain.v1.MsgBridgeCallClaim is not mutable"))
	case "fx.gravity.crosschain.v1.MsgBridgeCallClaim.sender":
		panic(fmt.Errorf("field sender of message fx.gravity.crosschain.v1.MsgBridgeCallClaim is not mutable"))
	case "fx.gravity.crosschain.v1.MsgBridgeCallClaim.refund":
		panic(fmt.Errorf("field refund of message fx.gravity.crosschain.v1.MsgBridgeCallClaim is not mutable"))
	case "fx.gravity.crosschain.v1.MsgBridgeCallClaim.to":
		panic(fmt.Errorf("field to of message fx.gravity.crosschain.v1.MsgBridgeCallClaim is not mutable"))
	case "fx.gravity.crosschain.v1.MsgBridgeCallClaim.data":
		panic(fmt.Errorf("field data of message fx.gravity.crosschain.v1.MsgBridgeCallClaim is not mutable"))
	case "fx.gravity.crosschain.v1.MsgBridgeCallClaim.quote_id":
		panic(fmt.Errorf("field quote_id of message fx.gravity.crosschain.v1.MsgBridgeCallClaim is not mutable"))
	case "fx.gravity.crosschain.v1.MsgBridgeCallClaim.gas_limit":
		panic(fmt.Errorf("field gas_limit of message fx.gravity.crosschain.v1.MsgBridgeCallClaim is not mutable"))
	case "fx.gravity.crosschain.v1.MsgBridgeCallClaim.memo":
		panic(fmt.Errorf("field memo of message fx.gravity.crosschain.v1.MsgBridgeCallClaim is not mutable"))
	case "fx.gravity.crosschain.v1.MsgBridgeCallClaim.tx_origin":
		panic(fmt.Errorf("field tx_origin of message fx.gravity.crosschain.v1.MsgBridgeCallClaim is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgBridgeCallClaim"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgBridgeCallClaim does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgBridgeCallClaim) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "fx.gravity.crosschain.v1.MsgBridgeCallClaim.chain_name":
		return protoreflect.ValueOfString("")
	case "fx.gravity.crosschain.v1.MsgBridgeCallClaim.bridger_address":
		return protoreflect.ValueOfString("")
	case "fx.gravity.crosschain.v1.MsgBridgeCallClaim.event_nonce":
		return protoreflect.ValueOfUint64(uint64(0))
	case "fx.gravity.crosschain.v1.MsgBridgeCallClaim.block_height":
		return protoreflect.ValueOfUint64(uint64(0))
	case "fx.gravity.crosschain.v1.MsgBridgeCallClaim.sender":
		return protoreflect.ValueOfString("")
	case "fx.gravity.crosschain.v1.MsgBridgeCallClaim.refund":
		return protoreflect.ValueOfString("")
	case "fx.gravity.crosschain.v1.MsgBridgeCallClaim.token_contracts":
		list := []string{}
		return protoreflect.ValueOfList(&_MsgBridgeCallClaim_7_list{list: &list})
	case "fx.gravity.crosschain.v1.MsgBridgeCallClaim.amounts":
		list := []string{}
		return protoreflect.ValueOfList(&_MsgBridgeCallClaim_8_list{list: &list})
	case "fx.gravity.crosschain.v1.MsgBridgeCallClaim.to":
		return protoreflect.ValueOfString("")
	case "fx.gravity.crosschain.v1.MsgBridgeCallClaim.data":
		return protoreflect.ValueOfString("")
	case "fx.gravity.crosschain.v1.MsgBridgeCallClaim.quote_id":
		return protoreflect.ValueOfString("")
	case "fx.gravity.crosschain.v1.MsgBridgeCallClaim.gas_limit":
		return protoreflect.ValueOfString("")
	case "fx.gravity.crosschain.v1.MsgBridgeCallClaim.memo":
		return protoreflect.ValueOfString("")
	case "fx.gravity.crosschain.v1.MsgBridgeCallClaim.tx_origin":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgBridgeCallClaim"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgBridgeCallClaim does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgBridgeCallClaim) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in fx.gravity.crosschain.v1.MsgBridgeCallClaim", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgBridgeCallClaim) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgBridgeCallClaim) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgBridgeCallClaim) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgBridgeCallClaim) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgBridgeCallClaim)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.ChainName)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.BridgerAddress)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.EventNonce != 0 {
			n += 1 + runtime.Sov(uint64(x.EventNonce))
		}
		if x.BlockHeight != 0 {
			n += 1 + runtime.Sov(uint64(x.BlockHeight))
		}
		l = len(x.Sender)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Refund)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if len(x.TokenContracts) > 0 {
			for _, s := range x.TokenContracts {
				l = len(s)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.Amounts) > 0 {
			for _, s := range x.Amounts {
				l = len(s)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		l = len(x.To)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Data)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.QuoteId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.GasLimit)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Memo)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.TxOrigin)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgBridgeCallClaim)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.TxOrigin) > 0 {
			i -= len(x.TxOrigin)
			copy(dAtA[i:], x.TxOrigin)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.TxOrigin)))
			i--
			dAtA[i] = 0x72
		}
		if len(x.Memo) > 0 {
			i -= len(x.Memo)
			copy(dAtA[i:], x.Memo)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Memo)))
			i--
			dAtA[i] = 0x6a
		}
		if len(x.GasLimit) > 0 {
			i -= len(x.GasLimit)
			copy(dAtA[i:], x.GasLimit)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.GasLimit)))
			i--
			dAtA[i] = 0x62
		}
		if len(x.QuoteId) > 0 {
			i -= len(x.QuoteId)
			copy(dAtA[i:], x.QuoteId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.QuoteId)))
			i--
			dAtA[i] = 0x5a
		}
		if len(x.Data) > 0 {
			i -= len(x.Data)
			copy(dAtA[i:], x.Data)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Data)))
			i--
			dAtA[i] = 0x52
		}
		if len(x.To) > 0 {
			i -= len(x.To)
			copy(dAtA[i:], x.To)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.To)))
			i--
			dAtA[i] = 0x4a
		}
		if len(x.Amounts) > 0 {
			for iNdEx := len(x.Amounts) - 1; iNdEx >= 0; iNdEx-- {
				i -= len(x.Amounts[iNdEx])
				copy(dAtA[i:], x.Amounts[iNdEx])
				i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Amounts[iNdEx])))
				i--
				dAtA[i] = 0x42
			}
		}
		if len(x.TokenContracts) > 0 {
			for iNdEx := len(x.TokenContracts) - 1; iNdEx >= 0; iNdEx-- {
				i -= len(x.TokenContracts[iNdEx])
				copy(dAtA[i:], x.TokenContracts[iNdEx])
				i = runtime.EncodeVarint(dAtA, i, uint64(len(x.TokenContracts[iNdEx])))
				i--
				dAtA[i] = 0x3a
			}
		}
		if len(x.Refund) > 0 {
			i -= len(x.Refund)
			copy(dAtA[i:], x.Refund)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Refund)))
			i--
			dAtA[i] = 0x32
		}
		if len(x.Sender) > 0 {
			i -= len(x.Sender)
			copy(dAtA[i:], x.Sender)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Sender)))
			i--
			dAtA[i] = 0x2a
		}
		if x.BlockHeight != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.BlockHeight))
			i--
			dAtA[i] = 0x20
		}
		if x.EventNonce != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.EventNonce))
			i--
			dAtA[i] = 0x18
		}
		if len(x.BridgerAddress) > 0 {
			i -= len(x.BridgerAddress)
			copy(dAtA[i:], x.BridgerAddress)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.BridgerAddress)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.ChainName) > 0 {
			i -= len(x.ChainName)
			copy(dAtA[i:], x.ChainName)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ChainName)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgBridgeCallClaim)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgBridgeCallClaim: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgBridgeCallClaim: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ChainName", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ChainName = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BridgerAddress", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.BridgerAddress = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field EventNonce", wireType)
				}
				x.EventNonce = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.EventNonce |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 4:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BlockHeight", wireType)
				}
				x.BlockHeight = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.BlockHeight |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 5:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Sender", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Sender = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 6:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Refund", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Refund = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 7:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TokenContracts", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.TokenContracts = append(x.TokenContracts, string(dAtA[iNdEx:postIndex]))
				iNdEx = postIndex
			case 8:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Amounts", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Amounts = append(x.Amounts, string(dAtA[iNdEx:postIndex]))
				iNdEx = postIndex
			case 9:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field To", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.To = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 10:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Data", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Data = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 11:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field QuoteId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.QuoteId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 12:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field GasLimit", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.GasLimit = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 13:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Memo", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Memo = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 14:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TxOrigin", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.TxOrigin = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgBridgeCallResultClaim                 protoreflect.MessageDescriptor
	fd_MsgBridgeCallResultClaim_chain_name      protoreflect.FieldDescriptor
	fd_MsgBridgeCallResultClaim_bridger_address protoreflect.FieldDescriptor
	fd_MsgBridgeCallResultClaim_event_nonce     protoreflect.FieldDescriptor
	fd_MsgBridgeCallResultClaim_block_height    protoreflect.FieldDescriptor
	fd_MsgBridgeCallResultClaim_nonce           protoreflect.FieldDescriptor
	fd_MsgBridgeCallResultClaim_tx_origin       protoreflect.FieldDescriptor
	fd_MsgBridgeCallResultClaim_success         protoreflect.FieldDescriptor
	fd_MsgBridgeCallResultClaim_cause           protoreflect.FieldDescriptor
)

func init() {
	file_fx_gravity_crosschain_v1_tx_proto_init()
	md_MsgBridgeCallResultClaim = File_fx_gravity_crosschain_v1_tx_proto.Messages().ByName("MsgBridgeCallResultClaim")
	fd_MsgBridgeCallResultClaim_chain_name = md_MsgBridgeCallResultClaim.Fields().ByName("chain_name")
	fd_MsgBridgeCallResultClaim_bridger_address = md_MsgBridgeCallResultClaim.Fields().ByName("bridger_address")
	fd_MsgBridgeCallResultClaim_event_nonce = md_MsgBridgeCallResultClaim.Fields().ByName("event_nonce")
	fd_MsgBridgeCallResultClaim_block_height = md_MsgBridgeCallResultClaim.Fields().ByName("block_height")
	fd_MsgBridgeCallResultClaim_nonce = md_MsgBridgeCallResultClaim.Fields().ByName("nonce")
	fd_MsgBridgeCallResultClaim_tx_origin = md_MsgBridgeCallResultClaim.Fields().ByName("tx_origin")
	fd_MsgBridgeCallResultClaim_success = md_MsgBridgeCallResultClaim.Fields().ByName("success")
	fd_MsgBridgeCallResultClaim_cause = md_MsgBridgeCallResultClaim.Fields().ByName("cause")
}

var _ protoreflect.Message = (*fastReflection_MsgBridgeCallResultClaim)(nil)

type fastReflection_MsgBridgeCallResultClaim MsgBridgeCallResultClaim

func (x *MsgBridgeCallResultClaim) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgBridgeCallResultClaim)(x)
}

func (x *MsgBridgeCallResultClaim) slowProtoReflect() protoreflect.Message {
	mi := &file_fx_gravity_crosschain_v1_tx_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgBridgeCallResultClaim_messageType fastReflection_MsgBridgeCallResultClaim_messageType
var _ protoreflect.MessageType = fastReflection_MsgBridgeCallResultClaim_messageType{}

type fastReflection_MsgBridgeCallResultClaim_messageType struct{}

func (x fastReflection_MsgBridgeCallResultClaim_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgBridgeCallResultClaim)(nil)
}
func (x fastReflection_MsgBridgeCallResultClaim_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgBridgeCallResultClaim)
}
func (x fastReflection_MsgBridgeCallResultClaim_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgBridgeCallResultClaim
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgBridgeCallResultClaim) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgBridgeCallResultClaim
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgBridgeCallResultClaim) Type() protoreflect.MessageType {
	return _fastReflection_MsgBridgeCallResultClaim_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgBridgeCallResultClaim) New() protoreflect.Message {
	return new(fastReflection_MsgBridgeCallResultClaim)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgBridgeCallResultClaim) Interface() protoreflect.ProtoMessage {
	return (*MsgBridgeCallResultClaim)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgBridgeCallResultClaim) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.ChainName != "" {
		value := protoreflect.ValueOfString(x.ChainName)
		if !f(fd_MsgBridgeCallResultClaim_chain_name, value) {
			return
		}
	}
	if x.BridgerAddress != "" {
		value := protoreflect.ValueOfString(x.BridgerAddress)
		if !f(fd_MsgBridgeCallResultClaim_bridger_address, value) {
			return
		}
	}
	if x.EventNonce != uint64(0) {
		value := protoreflect.ValueOfUint64(x.EventNonce)
		if !f(fd_MsgBridgeCallResultClaim_event_nonce, value) {
			return
		}
	}
	if x.BlockHeight != uint64(0) {
		value := protoreflect.ValueOfUint64(x.BlockHeight)
		if !f(fd_MsgBridgeCallResultClaim_block_height, value) {
			return
		}
	}
	if x.Nonce != uint64(0) {
		value := protoreflect.ValueOfUint64(x.Nonce)
		if !f(fd_MsgBridgeCallResultClaim_nonce, value) {
			return
		}
	}
	if x.TxOrigin != "" {
		value := protoreflect.ValueOfString(x.TxOrigin)
		if !f(fd_MsgBridgeCallResultClaim_tx_origin, value) {
			return
		}
	}
	if x.Success != false {
		value := protoreflect.ValueOfBool(x.Success)
		if !f(fd_MsgBridgeCallResultClaim_success, value) {
			return
		}
	}
	if x.Cause != "" {
		value := protoreflect.ValueOfString(x.Cause)
		if !f(fd_MsgBridgeCallResultClaim_cause, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgBridgeCallResultClaim) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "fx.gravity.crosschain.v1.MsgBridgeCallResultClaim.chain_name":
		return x.ChainName != ""
	case "fx.gravity.crosschain.v1.MsgBridgeCallResultClaim.bridger_address":
		return x.BridgerAddress != ""
	case "fx.gravity.crosschain.v1.MsgBridgeCallResultClaim.event_nonce":
		return x.EventNonce != uint64(0)
	case "fx.gravity.crosschain.v1.MsgBridgeCallResultClaim.block_height":
		return x.BlockHeight != uint64(0)
	case "fx.gravity.crosschain.v1.MsgBridgeCallResultClaim.nonce":
		return x.Nonce != uint64(0)
	case "fx.gravity.crosschain.v1.MsgBridgeCallResultClaim.tx_origin":
		return x.TxOrigin != ""
	case "fx.gravity.crosschain.v1.MsgBridgeCallResultClaim.success":
		return x.Success != false
	case "fx.gravity.crosschain.v1.MsgBridgeCallResultClaim.cause":
		return x.Cause != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgBridgeCallResultClaim"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgBridgeCallResultClaim does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgBridgeCallResultClaim) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "fx.gravity.crosschain.v1.MsgBridgeCallResultClaim.chain_name":
		x.ChainName = ""
	case "fx.gravity.crosschain.v1.MsgBridgeCallResultClaim.bridger_address":
		x.BridgerAddress = ""
	case "fx.gravity.crosschain.v1.MsgBridgeCallResultClaim.event_nonce":
		x.EventNonce = uint64(0)
	case "fx.gravity.crosschain.v1.MsgBridgeCallResultClaim.block_height":
		x.BlockHeight = uint64(0)
	case "fx.gravity.crosschain.v1.MsgBridgeCallResultClaim.nonce":
		x.Nonce = uint64(0)
	case "fx.gravity.crosschain.v1.MsgBridgeCallResultClaim.tx_origin":
		x.TxOrigin = ""
	case "fx.gravity.crosschain.v1.MsgBridgeCallResultClaim.success":
		x.Success = false
	case "fx.gravity.crosschain.v1.MsgBridgeCallResultClaim.cause":
		x.Cause = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgBridgeCallResultClaim"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgBridgeCallResultClaim does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgBridgeCallResultClaim) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "fx.gravity.crosschain.v1.MsgBridgeCallResultClaim.chain_name":
		value := x.ChainName
		return protoreflect.ValueOfString(value)
	case "fx.gravity.crosschain.v1.MsgBridgeCallResultClaim.bridger_address":
		value := x.BridgerAddress
		return protoreflect.ValueOfString(value)
	case "fx.gravity.crosschain.v1.MsgBridgeCallResultClaim.event_nonce":
		value := x.EventNonce
		return protoreflect.ValueOfUint64(value)
	case "fx.gravity.crosschain.v1.MsgBridgeCallResultClaim.block_height":
		value := x.BlockHeight
		return protoreflect.ValueOfUint64(value)
	case "fx.gravity.crosschain.v1.MsgBridgeCallResultClaim.nonce":
		value := x.Nonce
		return protoreflect.ValueOfUint64(value)
	case "fx.gravity.crosschain.v1.MsgBridgeCallResultClaim.tx_origin":
		value := x.TxOrigin
		return protoreflect.ValueOfString(value)
	case "fx.gravity.crosschain.v1.MsgBridgeCallResultClaim.success":
		value := x.Success
		return protoreflect.ValueOfBool(value)
	case "fx.gravity.crosschain.v1.MsgBridgeCallResultClaim.cause":
		value := x.Cause
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgBridgeCallResultClaim"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgBridgeCallResultClaim does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgBridgeCallResultClaim) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "fx.gravity.crosschain.v1.MsgBridgeCallResultClaim.chain_name":
		x.ChainName = value.Interface().(string)
	case "fx.gravity.crosschain.v1.MsgBridgeCallResultClaim.bridger_address":
		x.BridgerAddress = value.Interface().(string)
	case "fx.gravity.crosschain.v1.MsgBridgeCallResultClaim.event_nonce":
		x.EventNonce = value.Uint()
	case "fx.gravity.crosschain.v1.MsgBridgeCallResultClaim.block_height":
		x.BlockHeight = value.Uint()
	case "fx.gravity.crosschain.v1.MsgBridgeCallResultClaim.nonce":
		x.Nonce = value.Uint()
	case "fx.gravity.crosschain.v1.MsgBridgeCallResultClaim.tx_origin":
		x.TxOrigin = value.Interface().(string)
	case "fx.gravity.crosschain.v1.MsgBridgeCallResultClaim.success":
		x.Success = value.Bool()
	case "fx.gravity.crosschain.v1.MsgBridgeCallResultClaim.cause":
		x.Cause = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgBridgeCallResultClaim"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgBridgeCallResultClaim does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgBridgeCallResultClaim) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "fx.gravity.crosschain.v1.MsgBridgeCallResultClaim.chain_name":
		panic(fmt.Errorf("field chain_name of message fx.gravity.crosschain.v1.MsgBridgeCallResultClaim is not mutable"))
	case "fx.gravity.crosschain.v1.MsgBridgeCallResultClaim.bridger_address":
		panic(fmt.Errorf("field bridger_address of message fx.gravity.crosschain.v1.MsgBridgeCallResultClaim is not mutable"))
	case "fx.gravity.crosschain.v1.MsgBridgeCallResultClaim.event_nonce":
		panic(fmt.Errorf("field event_nonce of message fx.gravity.crosschain.v1.MsgBridgeCallResultClaim is not mutable"))
	case "fx.gravity.crosschain.v1.MsgBridgeCallResultClaim.block_height":
		panic(fmt.Errorf("field block_height of message fx.gravity.crosschain.v1.MsgBridgeCallResultClaim is not mutable"))
	case "fx.gravity.crosschain.v1.MsgBridgeCallResultClaim.nonce":
		panic(fmt.Errorf("field nonce of message fx.gravity.crosschain.v1.MsgBridgeCallResultClaim is not mutable"))
	case "fx.gravity.crosschain.v1.MsgBridgeCallResultClaim.tx_origin":
		panic(fmt.Errorf("field tx_origin of message fx.gravity.crosschain.v1.MsgBridgeCallResultClaim is not mutable"))
	case "fx.gravity.crosschain.v1.MsgBridgeCallResultClaim.success":
		panic(fmt.Errorf("field success of message fx.gravity.crosschain.v1.MsgBridgeCallResultClaim is not mutable"))
	case "fx.gravity.crosschain.v1.MsgBridgeCallResultClaim.cause":
		panic(fmt.Errorf("field cause of message fx.gravity.crosschain.v1.MsgBridgeCallResultClaim is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgBridgeCallResultClaim"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgBridgeCallResultClaim does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgBridgeCallResultClaim) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "fx.gravity.crosschain.v1.MsgBridgeCallResultClaim.chain_name":
		return protoreflect.ValueOfString("")
	case "fx.gravity.crosschain.v1.MsgBridgeCallResultClaim.bridger_address":
		return protoreflect.ValueOfString("")
	case "fx.gravity.crosschain.v1.MsgBridgeCallResultClaim.event_nonce":
		return protoreflect.ValueOfUint64(uint64(0))
	case "fx.gravity.crosschain.v1.MsgBridgeCallResultClaim.block_height":
		return protoreflect.ValueOfUint64(uint64(0))
	case "fx.gravity.crosschain.v1.MsgBridgeCallResultClaim.nonce":
		return protoreflect.ValueOfUint64(uint64(0))
	case "fx.gravity.crosschain.v1.MsgBridgeCallResultClaim.tx_origin":
		return protoreflect.ValueOfString("")
	case "fx.gravity.crosschain.v1.MsgBridgeCallResultClaim.success":
		return protoreflect.ValueOfBool(false)
	case "fx.gravity.crosschain.v1.MsgBridgeCallResultClaim.cause":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgBridgeCallResultClaim"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgBridgeCallResultClaim does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgBridgeCallResultClaim) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in fx.gravity.crosschain.v1.MsgBridgeCallResultClaim", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgBridgeCallResultClaim) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgBridgeCallResultClaim) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgBridgeCallResultClaim) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgBridgeCallResultClaim) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgBridgeCallResultClaim)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.ChainName)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.BridgerAddress)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.EventNonce != 0 {
			n += 1 + runtime.Sov(uint64(x.EventNonce))
		}
		if x.BlockHeight != 0 {
			n += 1 + runtime.Sov(uint64(x.BlockHeight))
		}
		if x.Nonce != 0 {
			n += 1 + runtime.Sov(uint64(x.Nonce))
		}
		l = len(x.TxOrigin)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.Success {
			n += 2
		}
		l = len(x.Cause)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgBridgeCallResultClaim)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Cause) > 0 {
			i -= len(x.Cause)
			copy(dAtA[i:], x.Cause)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Cause)))
			i--
			dAtA[i] = 0x42
		}
		if x.Success {
			i--
			if x.Success {
				dAtA[i] = 1
			} else {
				dAtA[i] = 0
			}
			i--
			dAtA[i] = 0x38
		}
		if len(x.TxOrigin) > 0 {
			i -= len(x.TxOrigin)
			copy(dAtA[i:], x.TxOrigin)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.TxOrigin)))
			i--
			dAtA[i] = 0x32
		}
		if x.Nonce != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Nonce))
			i--
			dAtA[i] = 0x28
		}
		if x.BlockHeight != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.BlockHeight))
			i--
			dAtA[i] = 0x20
		}
		if x.EventNonce != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.EventNonce))
			i--
			dAtA[i] = 0x18
		}
		if len(x.BridgerAddress) > 0 {
			i -= len(x.BridgerAddress)
			copy(dAtA[i:], x.BridgerAddress)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.BridgerAddress)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.ChainName) > 0 {
			i -= len(x.ChainName)
			copy(dAtA[i:], x.ChainName)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ChainName)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgBridgeCallResultClaim)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgBridgeCallResultClaim: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgBridgeCallResultClaim: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ChainName", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ChainName = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BridgerAddress", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.BridgerAddress = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field EventNonce", wireType)
				}
				x.EventNonce = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.EventNonce |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 4:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BlockHeight", wireType)
				}
				x.BlockHeight = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.BlockHeight |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 5:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Nonce", wireType)
				}
				x.Nonce = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Nonce |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 6:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TxOrigin", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.TxOrigin = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 7:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Success", wireType)
				}
				var v int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				x.Success = bool(v != 0)
			case 8:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Cause", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Cause = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgConfirmBatch                  protoreflect.MessageDescriptor
	fd_MsgConfirmBatch_nonce            protoreflect.FieldDescriptor
	fd_MsgConfirmBatch_token_contract   protoreflect.FieldDescriptor
	fd_MsgConfirmBatch_bridger_address  protoreflect.FieldDescriptor
	fd_MsgConfirmBatch_external_address protoreflect.FieldDescriptor
	fd_MsgConfirmBatch_signature        protoreflect.FieldDescriptor
	fd_MsgConfirmBatch_chain_name       protoreflect.FieldDescriptor
)

func init() {
	file_fx_gravity_crosschain_v1_tx_proto_init()
	md_MsgConfirmBatch = File_fx_gravity_crosschain_v1_tx_proto.Messages().ByName("MsgConfirmBatch")
	fd_MsgConfirmBatch_nonce = md_MsgConfirmBatch.Fields().ByName("nonce")
	fd_MsgConfirmBatch_token_contract = md_MsgConfirmBatch.Fields().ByName("token_contract")
	fd_MsgConfirmBatch_bridger_address = md_MsgConfirmBatch.Fields().ByName("bridger_address")
	fd_MsgConfirmBatch_external_address = md_MsgConfirmBatch.Fields().ByName("external_address")
	fd_MsgConfirmBatch_signature = md_MsgConfirmBatch.Fields().ByName("signature")
	fd_MsgConfirmBatch_chain_name = md_MsgConfirmBatch.Fields().ByName("chain_name")
}

var _ protoreflect.Message = (*fastReflection_MsgConfirmBatch)(nil)

type fastReflection_MsgConfirmBatch MsgConfirmBatch

func (x *MsgConfirmBatch) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgConfirmBatch)(x)
}

func (x *MsgConfirmBatch) slowProtoReflect() protoreflect.Message {
	mi := &file_fx_gravity_crosschain_v1_tx_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgConfirmBatch_messageType fastReflection_MsgConfirmBatch_messageType
var _ protoreflect.MessageType = fastReflection_MsgConfirmBatch_messageType{}

type fastReflection_MsgConfirmBatch_messageType struct{}

func (x fastReflection_MsgConfirmBatch_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgConfirmBatch)(nil)
}
func (x fastReflection_MsgConfirmBatch_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgConfirmBatch)
}
func (x fastReflection_MsgConfirmBatch_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgConfirmBatch
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgConfirmBatch) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgConfirmBatch
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgConfirmBatch) Type() protoreflect.MessageType {
	return _fastReflection_MsgConfirmBatch_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgConfirmBatch) New() protoreflect.Message {
	return new(fastReflection_MsgConfirmBatch)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgConfirmBatch) Interface() protoreflect.ProtoMessage {
	return (*MsgConfirmBatch)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgConfirmBatch) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Nonce != uint64(0) {
		value := protoreflect.ValueOfUint64(x.Nonce)
		if !f(fd_MsgConfirmBatch_nonce, value) {
			return
		}
	}
	if x.TokenContract != "" {
		value := protoreflect.ValueOfString(x.TokenContract)
		if !f(fd_MsgConfirmBatch_token_contract, value) {
			return
		}
	}
	if x.BridgerAddress != "" {
		value := protoreflect.ValueOfString(x.BridgerAddress)
		if !f(fd_MsgConfirmBatch_bridger_address, value) {
			return
		}
	}
	if x.ExternalAddress != "" {
		value := protoreflect.ValueOfString(x.ExternalAddress)
		if !f(fd_MsgConfirmBatch_external_address, value) {
			return
		}
	}
	if x.Signature != "" {
		value := protoreflect.ValueOfString(x.Signature)
		if !f(fd_MsgConfirmBatch_signature, value) {
			return
		}
	}
	if x.ChainName != "" {
		value := protoreflect.ValueOfString(x.ChainName)
		if !f(fd_MsgConfirmBatch_chain_name, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgConfirmBatch) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "fx.gravity.crosschain.v1.MsgConfirmBatch.nonce":
		return x.Nonce != uint64(0)
	case "fx.gravity.crosschain.v1.MsgConfirmBatch.token_contract":
		return x.TokenContract != ""
	case "fx.gravity.crosschain.v1.MsgConfirmBatch.bridger_address":
		return x.BridgerAddress != ""
	case "fx.gravity.crosschain.v1.MsgConfirmBatch.external_address":
		return x.ExternalAddress != ""
	case "fx.gravity.crosschain.v1.MsgConfirmBatch.signature":
		return x.Signature != ""
	case "fx.gravity.crosschain.v1.MsgConfirmBatch.chain_name":
		return x.ChainName != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgConfirmBatch"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgConfirmBatch does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgConfirmBatch) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "fx.gravity.crosschain.v1.MsgConfirmBatch.nonce":
		x.Nonce = uint64(0)
	case "fx.gravity.crosschain.v1.MsgConfirmBatch.token_contract":
		x.TokenContract = ""
	case "fx.gravity.crosschain.v1.MsgConfirmBatch.bridger_address":
		x.BridgerAddress = ""
	case "fx.gravity.crosschain.v1.MsgConfirmBatch.external_address":
		x.ExternalAddress = ""
	case "fx.gravity.crosschain.v1.MsgConfirmBatch.signature":
		x.Signature = ""
	case "fx.gravity.crosschain.v1.MsgConfirmBatch.chain_name":
		x.ChainName = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgConfirmBatch"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgConfirmBatch does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgConfirmBatch) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "fx.gravity.crosschain.v1.MsgConfirmBatch.nonce":
		value := x.Nonce
		return protoreflect.ValueOfUint64(value)
	case "fx.gravity.crosschain.v1.MsgConfirmBatch.token_contract":
		value := x.TokenContract
		return protoreflect.ValueOfString(value)
	case "fx.gravity.crosschain.v1.MsgConfirmBatch.bridger_address":
		value := x.BridgerAddress
		return protoreflect.ValueOfString(value)
	case "fx.gravity.crosschain.v1.MsgConfirmBatch.external_address":
		value := x.ExternalAddress
		return protoreflect.ValueOfString(value)
	case "fx.gravity.crosschain.v1.MsgConfirmBatch.signature":
		value := x.Signature
		return protoreflect.ValueOfString(value)
	case "fx.gravity.crosschain.v1.MsgConfirmBatch.chain_name":
		value := x.ChainName
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgConfirmBatch"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgConfirmBatch does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgConfirmBatch) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "fx.gravity.crosschain.v1.MsgConfirmBatch.nonce":
		x.Nonce = value.Uint()
	case "fx.gravity.crosschain.v1.MsgConfirmBatch.token_contract":
		x.TokenContract = value.Interface().(string)
	case "fx.gravity.crosschain.v1.MsgConfirmBatch.bridger_address":
		x.BridgerAddress = value.Interface().(string)
	case "fx.gravity.crosschain.v1.MsgConfirmBatch.external_address":
		x.ExternalAddress = value.Interface().(string)
	case "fx.gravity.crosschain.v1.MsgConfirmBatch.signature":
		x.Signature = value.Interface().(string)
	case "fx.gravity.crosschain.v1.MsgConfirmBatch.chain_name":
		x.ChainName = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgConfirmBatch"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgConfirmBatch does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgConfirmBatch) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "fx.gravity.crosschain.v1.MsgConfirmBatch.nonce":
		panic(fmt.Errorf("field nonce of message fx.gravity.crosschain.v1.MsgConfirmBatch is not mutable"))
	case "fx.gravity.crosschain.v1.MsgConfirmBatch.token_contract":
		panic(fmt.Errorf("field token_contract of message fx.gravity.crosschain.v1.MsgConfirmBatch is not mutable"))
	case "fx.gravity.crosschain.v1.MsgConfirmBatch.bridger_address":
		panic(fmt.Errorf("field bridger_address of message fx.gravity.crosschain.v1.MsgConfirmBatch is not mutable"))
	case "fx.gravity.crosschain.v1.MsgConfirmBatch.external_address":
		panic(fmt.Errorf("field external_address of message fx.gravity.crosschain.v1.MsgConfirmBatch is not mutable"))
	case "fx.gravity.crosschain.v1.MsgConfirmBatch.signature":
		panic(fmt.Errorf("field signature of message fx.gravity.crosschain.v1.MsgConfirmBatch is not mutable"))
	case "fx.gravity.crosschain.v1.MsgConfirmBatch.chain_name":
		panic(fmt.Errorf("field chain_name of message fx.gravity.crosschain.v1.MsgConfirmBatch is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgConfirmBatch"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgConfirmBatch does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgConfirmBatch) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "fx.gravity.crosschain.v1.MsgConfirmBatch.nonce":
		return protoreflect.ValueOfUint64(uint64(0))
	case "fx.gravity.crosschain.v1.MsgConfirmBatch.token_contract":
		return protoreflect.ValueOfString("")
	case "fx.gravity.crosschain.v1.MsgConfirmBatch.bridger_address":
		return protoreflect.ValueOfString("")
	case "fx.gravity.crosschain.v1.MsgConfirmBatch.external_address":
		return protoreflect.ValueOfString("")
	case "fx.gravity.crosschain.v1.MsgConfirmBatch.signature":
		return protoreflect.ValueOfString("")
	case "fx.gravity.crosschain.v1.MsgConfirmBatch.chain_name":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgConfirmBatch"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgConfirmBatch does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgConfirmBatch) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in fx.gravity.crosschain.v1.MsgConfirmBatch", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgConfirmBatch) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgConfirmBatch) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgConfirmBatch) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgConfirmBatch) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgConfirmBatch)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Nonce != 0 {
			n += 1 + runtime.Sov(uint64(x.Nonce))
		}
		l = len(x.TokenContract)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.BridgerAddress)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.ExternalAddress)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Signature)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.ChainName)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgConfirmBatch)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.ChainName) > 0 {
			i -= len(x.ChainName)
			copy(dAtA[i:], x.ChainName)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ChainName)))
			i--
			dAtA[i] = 0x32
		}
		if len(x.Signature) > 0 {
			i -= len(x.Signature)
			copy(dAtA[i:], x.Signature)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Signature)))
			i--
			dAtA[i] = 0x2a
		}
		if len(x.ExternalAddress) > 0 {
			i -= len(x.ExternalAddress)
			copy(dAtA[i:], x.ExternalAddress)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ExternalAddress)))
			i--
			dAtA[i] = 0x22
		}
		if len(x.BridgerAddress) > 0 {
			i -= len(x.BridgerAddress)
			copy(dAtA[i:], x.BridgerAddress)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.BridgerAddress)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.TokenContract) > 0 {
			i -= len(x.TokenContract)
			copy(dAtA[i:], x.TokenContract)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.TokenContract)))
			i--
			dAtA[i] = 0x12
		}
		if x.Nonce != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Nonce))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgConfirmBatch)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgConfirmBatch: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgConfirmBatch: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Nonce", wireType)
				}
				x.Nonce = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Nonce |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TokenContract", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.TokenContract = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BridgerAddress", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.BridgerAddress = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ExternalAddress", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ExternalAddress = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 5:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Signature", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Signature = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 6:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ChainName", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ChainName = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgSendToExternalClaim                 protoreflect.MessageDescriptor
	fd_MsgSendToExternalClaim_event_nonce     protoreflect.FieldDescriptor
	fd_MsgSendToExternalClaim_block_height    protoreflect.FieldDescriptor
	fd_MsgSendToExternalClaim_batch_nonce     protoreflect.FieldDescriptor
	fd_MsgSendToExternalClaim_token_contract  protoreflect.FieldDescriptor
	fd_MsgSendToExternalClaim_bridger_address protoreflect.FieldDescriptor
	fd_MsgSendToExternalClaim_chain_name      protoreflect.FieldDescriptor
)

func init() {
	file_fx_gravity_crosschain_v1_tx_proto_init()
	md_MsgSendToExternalClaim = File_fx_gravity_crosschain_v1_tx_proto.Messages().ByName("MsgSendToExternalClaim")
	fd_MsgSendToExternalClaim_event_nonce = md_MsgSendToExternalClaim.Fields().ByName("event_nonce")
	fd_MsgSendToExternalClaim_block_height = md_MsgSendToExternalClaim.Fields().ByName("block_height")
	fd_MsgSendToExternalClaim_batch_nonce = md_MsgSendToExternalClaim.Fields().ByName("batch_nonce")
	fd_MsgSendToExternalClaim_token_contract = md_MsgSendToExternalClaim.Fields().ByName("token_contract")
	fd_MsgSendToExternalClaim_bridger_address = md_MsgSendToExternalClaim.Fields().ByName("bridger_address")
	fd_MsgSendToExternalClaim_chain_name = md_MsgSendToExternalClaim.Fields().ByName("chain_name")
}

var _ protoreflect.Message = (*fastReflection_MsgSendToExternalClaim)(nil)

type fastReflection_MsgSendToExternalClaim MsgSendToExternalClaim

func (x *MsgSendToExternalClaim) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgSendToExternalClaim)(x)
}

func (x *MsgSendToExternalClaim) slowProtoReflect() protoreflect.Message {
	mi := &file_fx_gravity_crosschain_v1_tx_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgSendToExternalClaim_messageType fastReflection_MsgSendToExternalClaim_messageType
var _ protoreflect.MessageType = fastReflection_MsgSendToExternalClaim_messageType{}

type fastReflection_MsgSendToExternalClaim_messageType struct{}

func (x fastReflection_MsgSendToExternalClaim_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgSendToExternalClaim)(nil)
}
func (x fastReflection_MsgSendToExternalClaim_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgSendToExternalClaim)
}
func (x fastReflection_MsgSendToExternalClaim_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgSendToExternalClaim
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgSendToExternalClaim) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgSendToExternalClaim
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgSendToExternalClaim) Type() protoreflect.MessageType {
	return _fastReflection_MsgSendToExternalClaim_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgSendToExternalClaim) New() protoreflect.Message {
	return new(fastReflection_MsgSendToExternalClaim)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgSendToExternalClaim) Interface() protoreflect.ProtoMessage {
	return (*MsgSendToExternalClaim)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgSendToExternalClaim) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.EventNonce != uint64(0) {
		value := protoreflect.ValueOfUint64(x.EventNonce)
		if !f(fd_MsgSendToExternalClaim_event_nonce, value) {
			return
		}
	}
	if x.BlockHeight != uint64(0) {
		value := protoreflect.ValueOfUint64(x.BlockHeight)
		if !f(fd_MsgSendToExternalClaim_block_height, value) {
			return
		}
	}
	if x.BatchNonce != uint64(0) {
		value := protoreflect.ValueOfUint64(x.BatchNonce)
		if !f(fd_MsgSendToExternalClaim_batch_nonce, value) {
			return
		}
	}
	if x.TokenContract != "" {
		value := protoreflect.ValueOfString(x.TokenContract)
		if !f(fd_MsgSendToExternalClaim_token_contract, value) {
			return
		}
	}
	if x.BridgerAddress != "" {
		value := protoreflect.ValueOfString(x.BridgerAddress)
		if !f(fd_MsgSendToExternalClaim_bridger_address, value) {
			return
		}
	}
	if x.ChainName != "" {
		value := protoreflect.ValueOfString(x.ChainName)
		if !f(fd_MsgSendToExternalClaim_chain_name, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgSendToExternalClaim) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "fx.gravity.crosschain.v1.MsgSendToExternalClaim.event_nonce":
		return x.EventNonce != uint64(0)
	case "fx.gravity.crosschain.v1.MsgSendToExternalClaim.block_height":
		return x.BlockHeight != uint64(0)
	case "fx.gravity.crosschain.v1.MsgSendToExternalClaim.batch_nonce":
		return x.BatchNonce != uint64(0)
	case "fx.gravity.crosschain.v1.MsgSendToExternalClaim.token_contract":
		return x.TokenContract != ""
	case "fx.gravity.crosschain.v1.MsgSendToExternalClaim.bridger_address":
		return x.BridgerAddress != ""
	case "fx.gravity.crosschain.v1.MsgSendToExternalClaim.chain_name":
		return x.ChainName != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgSendToExternalClaim"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgSendToExternalClaim does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgSendToExternalClaim) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "fx.gravity.crosschain.v1.MsgSendToExternalClaim.event_nonce":
		x.EventNonce = uint64(0)
	case "fx.gravity.crosschain.v1.MsgSendToExternalClaim.block_height":
		x.BlockHeight = uint64(0)
	case "fx.gravity.crosschain.v1.MsgSendToExternalClaim.batch_nonce":
		x.BatchNonce = uint64(0)
	case "fx.gravity.crosschain.v1.MsgSendToExternalClaim.token_contract":
		x.TokenContract = ""
	case "fx.gravity.crosschain.v1.MsgSendToExternalClaim.bridger_address":
		x.BridgerAddress = ""
	case "fx.gravity.crosschain.v1.MsgSendToExternalClaim.chain_name":
		x.ChainName = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgSendToExternalClaim"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgSendToExternalClaim does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgSendToExternalClaim) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "fx.gravity.crosschain.v1.MsgSendToExternalClaim.event_nonce":
		value := x.EventNonce
		return protoreflect.ValueOfUint64(value)
	case "fx.gravity.crosschain.v1.MsgSendToExternalClaim.block_height":
		value := x.BlockHeight
		return protoreflect.ValueOfUint64(value)
	case "fx.gravity.crosschain.v1.MsgSendToExternalClaim.batch_nonce":
		value := x.BatchNonce
		return protoreflect.ValueOfUint64(value)
	case "fx.gravity.crosschain.v1.MsgSendToExternalClaim.token_contract":
		value := x.TokenContract
		return protoreflect.ValueOfString(value)
	case "fx.gravity.crosschain.v1.MsgSendToExternalClaim.bridger_address":
		value := x.BridgerAddress
		return protoreflect.ValueOfString(value)
	case "fx.gravity.crosschain.v1.MsgSendToExternalClaim.chain_name":
		value := x.ChainName
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgSendToExternalClaim"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgSendToExternalClaim does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgSendToExternalClaim) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "fx.gravity.crosschain.v1.MsgSendToExternalClaim.event_nonce":
		x.EventNonce = value.Uint()
	case "fx.gravity.crosschain.v1.MsgSendToExternalClaim.block_height":
		x.BlockHeight = value.Uint()
	case "fx.gravity.crosschain.v1.MsgSendToExternalClaim.batch_nonce":
		x.BatchNonce = value.Uint()
	case "fx.gravity.crosschain.v1.MsgSendToExternalClaim.token_contract":
		x.TokenContract = value.Interface().(string)
	case "fx.gravity.crosschain.v1.MsgSendToExternalClaim.bridger_address":
		x.BridgerAddress = value.Interface().(string)
	case "fx.gravity.crosschain.v1.MsgSendToExternalClaim.chain_name":
		x.ChainName = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgSendToExternalClaim"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgSendToExternalClaim does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgSendToExternalClaim) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "fx.gravity.crosschain.v1.MsgSendToExternalClaim.event_nonce":
		panic(fmt.Errorf("field event_nonce of message fx.gravity.crosschain.v1.MsgSendToExternalClaim is not mutable"))
	case "fx.gravity.crosschain.v1.MsgSendToExternalClaim.block_height":
		panic(fmt.Errorf("field block_height of message fx.gravity.crosschain.v1.MsgSendToExternalClaim is not mutable"))
	case "fx.gravity.crosschain.v1.MsgSendToExternalClaim.batch_nonce":
		panic(fmt.Errorf("field batch_nonce of message fx.gravity.crosschain.v1.MsgSendToExternalClaim is not mutable"))
	case "fx.gravity.crosschain.v1.MsgSendToExternalClaim.token_contract":
		panic(fmt.Errorf("field token_contract of message fx.gravity.crosschain.v1.MsgSendToExternalClaim is not mutable"))
	case "fx.gravity.crosschain.v1.MsgSendToExternalClaim.bridger_address":
		panic(fmt.Errorf("field bridger_address of message fx.gravity.crosschain.v1.MsgSendToExternalClaim is not mutable"))
	case "fx.gravity.crosschain.v1.MsgSendToExternalClaim.chain_name":
		panic(fmt.Errorf("field chain_name of message fx.gravity.crosschain.v1.MsgSendToExternalClaim is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgSendToExternalClaim"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgSendToExternalClaim does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgSendToExternalClaim) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "fx.gravity.crosschain.v1.MsgSendToExternalClaim.event_nonce":
		return protoreflect.ValueOfUint64(uint64(0))
	case "fx.gravity.crosschain.v1.MsgSendToExternalClaim.block_height":
		return protoreflect.ValueOfUint64(uint64(0))
	case "fx.gravity.crosschain.v1.MsgSendToExternalClaim.batch_nonce":
		return protoreflect.ValueOfUint64(uint64(0))
	case "fx.gravity.crosschain.v1.MsgSendToExternalClaim.token_contract":
		return protoreflect.ValueOfString("")
	case "fx.gravity.crosschain.v1.MsgSendToExternalClaim.bridger_address":
		return protoreflect.ValueOfString("")
	case "fx.gravity.crosschain.v1.MsgSendToExternalClaim.chain_name":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgSendToExternalClaim"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgSendToExternalClaim does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgSendToExternalClaim) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in fx.gravity.crosschain.v1.MsgSendToExternalClaim", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgSendToExternalClaim) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgSendToExternalClaim) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgSendToExternalClaim) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgSendToExternalClaim) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgSendToExternalClaim)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.EventNonce != 0 {
			n += 1 + runtime.Sov(uint64(x.EventNonce))
		}
		if x.BlockHeight != 0 {
			n += 1 + runtime.Sov(uint64(x.BlockHeight))
		}
		if x.BatchNonce != 0 {
			n += 1 + runtime.Sov(uint64(x.BatchNonce))
		}
		l = len(x.TokenContract)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.BridgerAddress)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.ChainName)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgSendToExternalClaim)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.ChainName) > 0 {
			i -= len(x.ChainName)
			copy(dAtA[i:], x.ChainName)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ChainName)))
			i--
			dAtA[i] = 0x32
		}
		if len(x.BridgerAddress) > 0 {
			i -= len(x.BridgerAddress)
			copy(dAtA[i:], x.BridgerAddress)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.BridgerAddress)))
			i--
			dAtA[i] = 0x2a
		}
		if len(x.TokenContract) > 0 {
			i -= len(x.TokenContract)
			copy(dAtA[i:], x.TokenContract)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.TokenContract)))
			i--
			dAtA[i] = 0x22
		}
		if x.BatchNonce != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.BatchNonce))
			i--
			dAtA[i] = 0x18
		}
		if x.BlockHeight != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.BlockHeight))
			i--
			dAtA[i] = 0x10
		}
		if x.EventNonce != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.EventNonce))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgSendToExternalClaim)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgSendToExternalClaim: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgSendToExternalClaim: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field EventNonce", wireType)
				}
				x.EventNonce = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.EventNonce |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BlockHeight", wireType)
				}
				x.BlockHeight = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.BlockHeight |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 3:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BatchNonce", wireType)
				}
				x.BatchNonce = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.BatchNonce |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TokenContract", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.TokenContract = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 5:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BridgerAddress", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.BridgerAddress = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 6:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ChainName", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ChainName = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgBridgeTokenClaim                 protoreflect.MessageDescriptor
	fd_MsgBridgeTokenClaim_event_nonce     protoreflect.FieldDescriptor
	fd_MsgBridgeTokenClaim_block_height    protoreflect.FieldDescriptor
	fd_MsgBridgeTokenClaim_token_contract  protoreflect.FieldDescriptor
	fd_MsgBridgeTokenClaim_name            protoreflect.FieldDescriptor
	fd_MsgBridgeTokenClaim_symbol          protoreflect.FieldDescriptor
	fd_MsgBridgeTokenClaim_decimals        protoreflect.FieldDescriptor
	fd_MsgBridgeTokenClaim_bridger_address protoreflect.FieldDescriptor
	fd_MsgBridgeTokenClaim_memo            protoreflect.FieldDescriptor
	fd_MsgBridgeTokenClaim_chain_name      protoreflect.FieldDescriptor
)

func init() {
	file_fx_gravity_crosschain_v1_tx_proto_init()
	md_MsgBridgeTokenClaim = File_fx_gravity_crosschain_v1_tx_proto.Messages().ByName("MsgBridgeTokenClaim")
	fd_MsgBridgeTokenClaim_event_nonce = md_MsgBridgeTokenClaim.Fields().ByName("event_nonce")
	fd_MsgBridgeTokenClaim_block_height = md_MsgBridgeTokenClaim.Fields().ByName("block_height")
	fd_MsgBridgeTokenClaim_token_contract = md_MsgBridgeTokenClaim.Fields().ByName("token_contract")
	fd_MsgBridgeTokenClaim_name = md_MsgBridgeTokenClaim.Fields().ByName("name")
	fd_MsgBridgeTokenClaim_symbol = md_MsgBridgeTokenClaim.Fields().ByName("symbol")
	fd_MsgBridgeTokenClaim_decimals = md_MsgBridgeTokenClaim.Fields().ByName("decimals")
	fd_MsgBridgeTokenClaim_bridger_address = md_MsgBridgeTokenClaim.Fields().ByName("bridger_address")
	fd_MsgBridgeTokenClaim_memo = md_MsgBridgeTokenClaim.Fields().ByName("memo")
	fd_MsgBridgeTokenClaim_chain_name = md_MsgBridgeTokenClaim.Fields().ByName("chain_name")
}

var _ protoreflect.Message = (*fastReflection_MsgBridgeTokenClaim)(nil)

type fastReflection_MsgBridgeTokenClaim MsgBridgeTokenClaim

func (x *MsgBridgeTokenClaim) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgBridgeTokenClaim)(x)
}

func (x *MsgBridgeTokenClaim) slowProtoReflect() protoreflect.Message {
	mi := &file_fx_gravity_crosschain_v1_tx_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgBridgeTokenClaim_messageType fastReflection_MsgBridgeTokenClaim_messageType
var _ protoreflect.MessageType = fastReflection_MsgBridgeTokenClaim_messageType{}

type fastReflection_MsgBridgeTokenClaim_messageType struct{}

func (x fastReflection_MsgBridgeTokenClaim_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgBridgeTokenClaim)(nil)
}
func (x fastReflection_MsgBridgeTokenClaim_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgBridgeTokenClaim)
}
func (x fastReflection_MsgBridgeTokenClaim_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgBridgeTokenClaim
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgBridgeTokenClaim) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgBridgeTokenClaim
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgBridgeTokenClaim) Type() protoreflect.MessageType {
	return _fastReflection_MsgBridgeTokenClaim_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgBridgeTokenClaim) New() protoreflect.Message {
	return new(fastReflection_MsgBridgeTokenClaim)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgBridgeTokenClaim) Interface() protoreflect.ProtoMessage {
	return (*MsgBridgeTokenClaim)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgBridgeTokenClaim) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.EventNonce != uint64(0) {
		value := protoreflect.ValueOfUint64(x.EventNonce)
		if !f(fd_MsgBridgeTokenClaim_event_nonce, value) {
			return
		}
	}
	if x.BlockHeight != uint64(0) {
		value := protoreflect.ValueOfUint64(x.BlockHeight)
		if !f(fd_MsgBridgeTokenClaim_block_height, value) {
			return
		}
	}
	if x.TokenContract != "" {
		value := protoreflect.ValueOfString(x.TokenContract)
		if !f(fd_MsgBridgeTokenClaim_token_contract, value) {
			return
		}
	}
	if x.Name != "" {
		value := protoreflect.ValueOfString(x.Name)
		if !f(fd_MsgBridgeTokenClaim_name, value) {
			return
		}
	}
	if x.Symbol != "" {
		value := protoreflect.ValueOfString(x.Symbol)
		if !f(fd_MsgBridgeTokenClaim_symbol, value) {
			return
		}
	}
	if x.Decimals != uint64(0) {
		value := protoreflect.ValueOfUint64(x.Decimals)
		if !f(fd_MsgBridgeTokenClaim_decimals, value) {
			return
		}
	}
	if x.BridgerAddress != "" {
		value := protoreflect.ValueOfString(x.BridgerAddress)
		if !f(fd_MsgBridgeTokenClaim_bridger_address, value) {
			return
		}
	}
	if x.Memo != "" {
		value := protoreflect.ValueOfString(x.Memo)
		if !f(fd_MsgBridgeTokenClaim_memo, value) {
			return
		}
	}
	if x.ChainName != "" {
		value := protoreflect.ValueOfString(x.ChainName)
		if !f(fd_MsgBridgeTokenClaim_chain_name, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgBridgeTokenClaim) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "fx.gravity.crosschain.v1.MsgBridgeTokenClaim.event_nonce":
		return x.EventNonce != uint64(0)
	case "fx.gravity.crosschain.v1.MsgBridgeTokenClaim.block_height":
		return x.BlockHeight != uint64(0)
	case "fx.gravity.crosschain.v1.MsgBridgeTokenClaim.token_contract":
		return x.TokenContract != ""
	case "fx.gravity.crosschain.v1.MsgBridgeTokenClaim.name":
		return x.Name != ""
	case "fx.gravity.crosschain.v1.MsgBridgeTokenClaim.symbol":
		return x.Symbol != ""
	case "fx.gravity.crosschain.v1.MsgBridgeTokenClaim.decimals":
		return x.Decimals != uint64(0)
	case "fx.gravity.crosschain.v1.MsgBridgeTokenClaim.bridger_address":
		return x.BridgerAddress != ""
	case "fx.gravity.crosschain.v1.MsgBridgeTokenClaim.memo":
		return x.Memo != ""
	case "fx.gravity.crosschain.v1.MsgBridgeTokenClaim.chain_name":
		return x.ChainName != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgBridgeTokenClaim"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgBridgeTokenClaim does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgBridgeTokenClaim) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "fx.gravity.crosschain.v1.MsgBridgeTokenClaim.event_nonce":
		x.EventNonce = uint64(0)
	case "fx.gravity.crosschain.v1.MsgBridgeTokenClaim.block_height":
		x.BlockHeight = uint64(0)
	case "fx.gravity.crosschain.v1.MsgBridgeTokenClaim.token_contract":
		x.TokenContract = ""
	case "fx.gravity.crosschain.v1.MsgBridgeTokenClaim.name":
		x.Name = ""
	case "fx.gravity.crosschain.v1.MsgBridgeTokenClaim.symbol":
		x.Symbol = ""
	case "fx.gravity.crosschain.v1.MsgBridgeTokenClaim.decimals":
		x.Decimals = uint64(0)
	case "fx.gravity.crosschain.v1.MsgBridgeTokenClaim.bridger_address":
		x.BridgerAddress = ""
	case "fx.gravity.crosschain.v1.MsgBridgeTokenClaim.memo":
		x.Memo = ""
	case "fx.gravity.crosschain.v1.MsgBridgeTokenClaim.chain_name":
		x.ChainName = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgBridgeTokenClaim"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgBridgeTokenClaim does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgBridgeTokenClaim) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "fx.gravity.crosschain.v1.MsgBridgeTokenClaim.event_nonce":
		value := x.EventNonce
		return protoreflect.ValueOfUint64(value)
	case "fx.gravity.crosschain.v1.MsgBridgeTokenClaim.block_height":
		value := x.BlockHeight
		return protoreflect.ValueOfUint64(value)
	case "fx.gravity.crosschain.v1.MsgBridgeTokenClaim.token_contract":
		value := x.TokenContract
		return protoreflect.ValueOfString(value)
	case "fx.gravity.crosschain.v1.MsgBridgeTokenClaim.name":
		value := x.Name
		return protoreflect.ValueOfString(value)
	case "fx.gravity.crosschain.v1.MsgBridgeTokenClaim.symbol":
		value := x.Symbol
		return protoreflect.ValueOfString(value)
	case "fx.gravity.crosschain.v1.MsgBridgeTokenClaim.decimals":
		value := x.Decimals
		return protoreflect.ValueOfUint64(value)
	case "fx.gravity.crosschain.v1.MsgBridgeTokenClaim.bridger_address":
		value := x.BridgerAddress
		return protoreflect.ValueOfString(value)
	case "fx.gravity.crosschain.v1.MsgBridgeTokenClaim.memo":
		value := x.Memo
		return protoreflect.ValueOfString(value)
	case "fx.gravity.crosschain.v1.MsgBridgeTokenClaim.chain_name":
		value := x.ChainName
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgBridgeTokenClaim"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgBridgeTokenClaim does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgBridgeTokenClaim) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "fx.gravity.crosschain.v1.MsgBridgeTokenClaim.event_nonce":
		x.EventNonce = value.Uint()
	case "fx.gravity.crosschain.v1.MsgBridgeTokenClaim.block_height":
		x.BlockHeight = value.Uint()
	case "fx.gravity.crosschain.v1.MsgBridgeTokenClaim.token_contract":
		x.TokenContract = value.Interface().(string)
	case "fx.gravity.crosschain.v1.MsgBridgeTokenClaim.name":
		x.Name = value.Interface().(string)
	case "fx.gravity.crosschain.v1.MsgBridgeTokenClaim.symbol":
		x.Symbol = value.Interface().(string)
	case "fx.gravity.crosschain.v1.MsgBridgeTokenClaim.decimals":
		x.Decimals = value.Uint()
	case "fx.gravity.crosschain.v1.MsgBridgeTokenClaim.bridger_address":
		x.BridgerAddress = value.Interface().(string)
	case "fx.gravity.crosschain.v1.MsgBridgeTokenClaim.memo":
		x.Memo = value.Interface().(string)
	case "fx.gravity.crosschain.v1.MsgBridgeTokenClaim.chain_name":
		x.ChainName = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgBridgeTokenClaim"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgBridgeTokenClaim does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgBridgeTokenClaim) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "fx.gravity.crosschain.v1.MsgBridgeTokenClaim.event_nonce":
		panic(fmt.Errorf("field event_nonce of message fx.gravity.crosschain.v1.MsgBridgeTokenClaim is not mutable"))
	case "fx.gravity.crosschain.v1.MsgBridgeTokenClaim.block_height":
		panic(fmt.Errorf("field block_height of message fx.gravity.crosschain.v1.MsgBridgeTokenClaim is not mutable"))
	case "fx.gravity.crosschain.v1.MsgBridgeTokenClaim.token_contract":
		panic(fmt.Errorf("field token_contract of message fx.gravity.crosschain.v1.MsgBridgeTokenClaim is not mutable"))
	case "fx.gravity.crosschain.v1.MsgBridgeTokenClaim.name":
		panic(fmt.Errorf("field name of message fx.gravity.crosschain.v1.MsgBridgeTokenClaim is not mutable"))
	case "fx.gravity.crosschain.v1.MsgBridgeTokenClaim.symbol":
		panic(fmt.Errorf("field symbol of message fx.gravity.crosschain.v1.MsgBridgeTokenClaim is not mutable"))
	case "fx.gravity.crosschain.v1.MsgBridgeTokenClaim.decimals":
		panic(fmt.Errorf("field decimals of message fx.gravity.crosschain.v1.MsgBridgeTokenClaim is not mutable"))
	case "fx.gravity.crosschain.v1.MsgBridgeTokenClaim.bridger_address":
		panic(fmt.Errorf("field bridger_address of message fx.gravity.crosschain.v1.MsgBridgeTokenClaim is not mutable"))
	case "fx.gravity.crosschain.v1.MsgBridgeTokenClaim.memo":
		panic(fmt.Errorf("field memo of message fx.gravity.crosschain.v1.MsgBridgeTokenClaim is not mutable"))
	case "fx.gravity.crosschain.v1.MsgBridgeTokenClaim.chain_name":
		panic(fmt.Errorf("field chain_name of message fx.gravity.crosschain.v1.MsgBridgeTokenClaim is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgBridgeTokenClaim"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgBridgeTokenClaim does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgBridgeTokenClaim) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "fx.gravity.crosschain.v1.MsgBridgeTokenClaim.event_nonce":
		return protoreflect.ValueOfUint64(uint64(0))
	case "fx.gravity.crosschain.v1.MsgBridgeTokenClaim.block_height":
		return protoreflect.ValueOfUint64(uint64(0))
	case "fx.gravity.crosschain.v1.MsgBridgeTokenClaim.token_contract":
		return protoreflect.ValueOfString("")
	case "fx.gravity.crosschain.v1.MsgBridgeTokenClaim.name":
		return protoreflect.ValueOfString("")
	case "fx.gravity.crosschain.v1.MsgBridgeTokenClaim.symbol":
		return protoreflect.ValueOfString("")
	case "fx.gravity.crosschain.v1.MsgBridgeTokenClaim.decimals":
		return protoreflect.ValueOfUint64(uint64(0))
	case "fx.gravity.crosschain.v1.MsgBridgeTokenClaim.bridger_address":
		return protoreflect.ValueOfString("")
	case "fx.gravity.crosschain.v1.MsgBridgeTokenClaim.memo":
		return protoreflect.ValueOfString("")
	case "fx.gravity.crosschain.v1.MsgBridgeTokenClaim.chain_name":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgBridgeTokenClaim"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgBridgeTokenClaim does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgBridgeTokenClaim) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in fx.gravity.crosschain.v1.MsgBridgeTokenClaim", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgBridgeTokenClaim) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgBridgeTokenClaim) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgBridgeTokenClaim) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgBridgeTokenClaim) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgBridgeTokenClaim)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.EventNonce != 0 {
			n += 1 + runtime.Sov(uint64(x.EventNonce))
		}
		if x.BlockHeight != 0 {
			n += 1 + runtime.Sov(uint64(x.BlockHeight))
		}
		l = len(x.TokenContract)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Name)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Symbol)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.Decimals != 0 {
			n += 1 + runtime.Sov(uint64(x.Decimals))
		}
		l = len(x.BridgerAddress)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Memo)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.ChainName)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgBridgeTokenClaim)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.ChainName) > 0 {
			i -= len(x.ChainName)
			copy(dAtA[i:], x.ChainName)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ChainName)))
			i--
			dAtA[i] = 0x4a
		}
		if len(x.Memo) > 0 {
			i -= len(x.Memo)
			copy(dAtA[i:], x.Memo)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Memo)))
			i--
			dAtA[i] = 0x42
		}
		if len(x.BridgerAddress) > 0 {
			i -= len(x.BridgerAddress)
			copy(dAtA[i:], x.BridgerAddress)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.BridgerAddress)))
			i--
			dAtA[i] = 0x3a
		}
		if x.Decimals != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Decimals))
			i--
			dAtA[i] = 0x30
		}
		if len(x.Symbol) > 0 {
			i -= len(x.Symbol)
			copy(dAtA[i:], x.Symbol)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Symbol)))
			i--
			dAtA[i] = 0x2a
		}
		if len(x.Name) > 0 {
			i -= len(x.Name)
			copy(dAtA[i:], x.Name)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Name)))
			i--
			dAtA[i] = 0x22
		}
		if len(x.TokenContract) > 0 {
			i -= len(x.TokenContract)
			copy(dAtA[i:], x.TokenContract)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.TokenContract)))
			i--
			dAtA[i] = 0x1a
		}
		if x.BlockHeight != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.BlockHeight))
			i--
			dAtA[i] = 0x10
		}
		if x.EventNonce != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.EventNonce))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgBridgeTokenClaim)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgBridgeTokenClaim: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgBridgeTokenClaim: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field EventNonce", wireType)
				}
				x.EventNonce = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.EventNonce |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BlockHeight", wireType)
				}
				x.BlockHeight = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.BlockHeight |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TokenContract", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.TokenContract = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Name = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 5:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Symbol", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Symbol = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 6:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Decimals", wireType)
				}
				x.Decimals = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Decimals |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 7:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BridgerAddress", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.BridgerAddress = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 8:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Memo", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Memo = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 9:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ChainName", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ChainName = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgBridgeCallConfirm                  protoreflect.MessageDescriptor
	fd_MsgBridgeCallConfirm_chain_name       protoreflect.FieldDescriptor
	fd_MsgBridgeCallConfirm_bridger_address  protoreflect.FieldDescriptor
	fd_MsgBridgeCallConfirm_external_address protoreflect.FieldDescriptor
	fd_MsgBridgeCallConfirm_nonce            protoreflect.FieldDescriptor
	fd_MsgBridgeCallConfirm_signature        protoreflect.FieldDescriptor
)

func init() {
	file_fx_gravity_crosschain_v1_tx_proto_init()
	md_MsgBridgeCallConfirm = File_fx_gravity_crosschain_v1_tx_proto.Messages().ByName("MsgBridgeCallConfirm")
	fd_MsgBridgeCallConfirm_chain_name = md_MsgBridgeCallConfirm.Fields().ByName("chain_name")
	fd_MsgBridgeCallConfirm_bridger_address = md_MsgBridgeCallConfirm.Fields().ByName("bridger_address")
	fd_MsgBridgeCallConfirm_external_address = md_MsgBridgeCallConfirm.Fields().ByName("external_address")
	fd_MsgBridgeCallConfirm_nonce = md_MsgBridgeCallConfirm.Fields().ByName("nonce")
	fd_MsgBridgeCallConfirm_signature = md_MsgBridgeCallConfirm.Fields().ByName("signature")
}

var _ protoreflect.Message = (*fastReflection_MsgBridgeCallConfirm)(nil)

type fastReflection_MsgBridgeCallConfirm MsgBridgeCallConfirm

func (x *MsgBridgeCallConfirm) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgBridgeCallConfirm)(x)
}

func (x *MsgBridgeCallConfirm) slowProtoReflect() protoreflect.Message {
	mi := &file_fx_gravity_crosschain_v1_tx_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgBridgeCallConfirm_messageType fastReflection_MsgBridgeCallConfirm_messageType
var _ protoreflect.MessageType = fastReflection_MsgBridgeCallConfirm_messageType{}

type fastReflection_MsgBridgeCallConfirm_messageType struct{}

func (x fastReflection_MsgBridgeCallConfirm_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgBridgeCallConfirm)(nil)
}
func (x fastReflection_MsgBridgeCallConfirm_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgBridgeCallConfirm)
}
func (x fastReflection_MsgBridgeCallConfirm_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgBridgeCallConfirm
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgBridgeCallConfirm) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgBridgeCallConfirm
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgBridgeCallConfirm) Type() protoreflect.MessageType {
	return _fastReflection_MsgBridgeCallConfirm_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgBridgeCallConfirm) New() protoreflect.Message {
	return new(fastReflection_MsgBridgeCallConfirm)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgBridgeCallConfirm) Interface() protoreflect.ProtoMessage {
	return (*MsgBridgeCallConfirm)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgBridgeCallConfirm) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.ChainName != "" {
		value := protoreflect.ValueOfString(x.ChainName)
		if !f(fd_MsgBridgeCallConfirm_chain_name, value) {
			return
		}
	}
	if x.BridgerAddress != "" {
		value := protoreflect.ValueOfString(x.BridgerAddress)
		if !f(fd_MsgBridgeCallConfirm_bridger_address, value) {
			return
		}
	}
	if x.ExternalAddress != "" {
		value := protoreflect.ValueOfString(x.ExternalAddress)
		if !f(fd_MsgBridgeCallConfirm_external_address, value) {
			return
		}
	}
	if x.Nonce != uint64(0) {
		value := protoreflect.ValueOfUint64(x.Nonce)
		if !f(fd_MsgBridgeCallConfirm_nonce, value) {
			return
		}
	}
	if x.Signature != "" {
		value := protoreflect.ValueOfString(x.Signature)
		if !f(fd_MsgBridgeCallConfirm_signature, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgBridgeCallConfirm) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "fx.gravity.crosschain.v1.MsgBridgeCallConfirm.chain_name":
		return x.ChainName != ""
	case "fx.gravity.crosschain.v1.MsgBridgeCallConfirm.bridger_address":
		return x.BridgerAddress != ""
	case "fx.gravity.crosschain.v1.MsgBridgeCallConfirm.external_address":
		return x.ExternalAddress != ""
	case "fx.gravity.crosschain.v1.MsgBridgeCallConfirm.nonce":
		return x.Nonce != uint64(0)
	case "fx.gravity.crosschain.v1.MsgBridgeCallConfirm.signature":
		return x.Signature != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgBridgeCallConfirm"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgBridgeCallConfirm does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgBridgeCallConfirm) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "fx.gravity.crosschain.v1.MsgBridgeCallConfirm.chain_name":
		x.ChainName = ""
	case "fx.gravity.crosschain.v1.MsgBridgeCallConfirm.bridger_address":
		x.BridgerAddress = ""
	case "fx.gravity.crosschain.v1.MsgBridgeCallConfirm.external_address":
		x.ExternalAddress = ""
	case "fx.gravity.crosschain.v1.MsgBridgeCallConfirm.nonce":
		x.Nonce = uint64(0)
	case "fx.gravity.crosschain.v1.MsgBridgeCallConfirm.signature":
		x.Signature = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgBridgeCallConfirm"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgBridgeCallConfirm does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgBridgeCallConfirm) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "fx.gravity.crosschain.v1.MsgBridgeCallConfirm.chain_name":
		value := x.ChainName
		return protoreflect.ValueOfString(value)
	case "fx.gravity.crosschain.v1.MsgBridgeCallConfirm.bridger_address":
		value := x.BridgerAddress
		return protoreflect.ValueOfString(value)
	case "fx.gravity.crosschain.v1.MsgBridgeCallConfirm.external_address":
		value := x.ExternalAddress
		return protoreflect.ValueOfString(value)
	case "fx.gravity.crosschain.v1.MsgBridgeCallConfirm.nonce":
		value := x.Nonce
		return protoreflect.ValueOfUint64(value)
	case "fx.gravity.crosschain.v1.MsgBridgeCallConfirm.signature":
		value := x.Signature
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgBridgeCallConfirm"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgBridgeCallConfirm does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgBridgeCallConfirm) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "fx.gravity.crosschain.v1.MsgBridgeCallConfirm.chain_name":
		x.ChainName = value.Interface().(string)
	case "fx.gravity.crosschain.v1.MsgBridgeCallConfirm.bridger_address":
		x.BridgerAddress = value.Interface().(string)
	case "fx.gravity.crosschain.v1.MsgBridgeCallConfirm.external_address":
		x.ExternalAddress = value.Interface().(string)
	case "fx.gravity.crosschain.v1.MsgBridgeCallConfirm.nonce":
		x.Nonce = value.Uint()
	case "fx.gravity.crosschain.v1.MsgBridgeCallConfirm.signature":
		x.Signature = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgBridgeCallConfirm"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgBridgeCallConfirm does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgBridgeCallConfirm) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "fx.gravity.crosschain.v1.MsgBridgeCallConfirm.chain_name":
		panic(fmt.Errorf("field chain_name of message fx.gravity.crosschain.v1.MsgBridgeCallConfirm is not mutable"))
	case "fx.gravity.crosschain.v1.MsgBridgeCallConfirm.bridger_address":
		panic(fmt.Errorf("field bridger_address of message fx.gravity.crosschain.v1.MsgBridgeCallConfirm is not mutable"))
	case "fx.gravity.crosschain.v1.MsgBridgeCallConfirm.external_address":
		panic(fmt.Errorf("field external_address of message fx.gravity.crosschain.v1.MsgBridgeCallConfirm is not mutable"))
	case "fx.gravity.crosschain.v1.MsgBridgeCallConfirm.nonce":
		panic(fmt.Errorf("field nonce of message fx.gravity.crosschain.v1.MsgBridgeCallConfirm is not mutable"))
	case "fx.gravity.crosschain.v1.MsgBridgeCallConfirm.signature":
		panic(fmt.Errorf("field signature of message fx.gravity.crosschain.v1.MsgBridgeCallConfirm is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgBridgeCallConfirm"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgBridgeCallConfirm does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgBridgeCallConfirm) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "fx.gravity.crosschain.v1.MsgBridgeCallConfirm.chain_name":
		return protoreflect.ValueOfString("")
	case "fx.gravity.crosschain.v1.MsgBridgeCallConfirm.bridger_address":
		return protoreflect.ValueOfString("")
	case "fx.gravity.crosschain.v1.MsgBridgeCallConfirm.external_address":
		return protoreflect.ValueOfString("")
	case "fx.gravity.crosschain.v1.MsgBridgeCallConfirm.nonce":
		return protoreflect.ValueOfUint64(uint64(0))
	case "fx.gravity.crosschain.v1.MsgBridgeCallConfirm.signature":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgBridgeCallConfirm"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgBridgeCallConfirm does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgBridgeCallConfirm) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in fx.gravity.crosschain.v1.MsgBridgeCallConfirm", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgBridgeCallConfirm) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgBridgeCallConfirm) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgBridgeCallConfirm) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgBridgeCallConfirm) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgBridgeCallConfirm)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.ChainName)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.BridgerAddress)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.ExternalAddress)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.Nonce != 0 {
			n += 1 + runtime.Sov(uint64(x.Nonce))
		}
		l = len(x.Signature)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgBridgeCallConfirm)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Signature) > 0 {
			i -= len(x.Signature)
			copy(dAtA[i:], x.Signature)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Signature)))
			i--
			dAtA[i] = 0x2a
		}
		if x.Nonce != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Nonce))
			i--
			dAtA[i] = 0x20
		}
		if len(x.ExternalAddress) > 0 {
			i -= len(x.ExternalAddress)
			copy(dAtA[i:], x.ExternalAddress)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ExternalAddress)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.BridgerAddress) > 0 {
			i -= len(x.BridgerAddress)
			copy(dAtA[i:], x.BridgerAddress)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.BridgerAddress)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.ChainName) > 0 {
			i -= len(x.ChainName)
			copy(dAtA[i:], x.ChainName)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ChainName)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgBridgeCallConfirm)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgBridgeCallConfirm: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgBridgeCallConfirm: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ChainName", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ChainName = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BridgerAddress", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.BridgerAddress = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ExternalAddress", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ExternalAddress = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 4:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Nonce", wireType)
				}
				x.Nonce = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Nonce |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 5:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Signature", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Signature = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgUpdateParams            protoreflect.MessageDescriptor
	fd_MsgUpdateParams_chain_name protoreflect.FieldDescriptor
	fd_MsgUpdateParams_authority  protoreflect.FieldDescriptor
	fd_MsgUpdateParams_params     protoreflect.FieldDescriptor
)

func init() {
	file_fx_gravity_crosschain_v1_tx_proto_init()
	md_MsgUpdateParams = File_fx_gravity_crosschain_v1_tx_proto.Messages().ByName("MsgUpdateParams")
	fd_MsgUpdateParams_chain_name = md_MsgUpdateParams.Fields().ByName("chain_name")
	fd_MsgUpdateParams_authority = md_MsgUpdateParams.Fields().ByName("authority")
	fd_MsgUpdateParams_params = md_MsgUpdateParams.Fields().ByName("params")
}

var _ protoreflect.Message = (*fastReflection_MsgUpdateParams)(nil)

type fastReflection_MsgUpdateParams MsgUpdateParams

func (x *MsgUpdateParams) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgUpdateParams)(x)
}

func (x *MsgUpdateParams) slowProtoReflect() protoreflect.Message {
	mi := &file_fx_gravity_crosschain_v1_tx_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgUpdateParams_messageType fastReflection_MsgUpdateParams_messageType
var _ protoreflect.MessageType = fastReflection_MsgUpdateParams_messageType{}

type fastReflection_MsgUpdateParams_messageType struct{}

func (x fastReflection_MsgUpdateParams_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgUpdateParams)(nil)
}
func (x fastReflection_MsgUpdateParams_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgUpdateParams)
}
func (x fastReflection_MsgUpdateParams_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgUpdateParams
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgUpdateParams) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgUpdateParams
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgUpdateParams) Type() protoreflect.MessageType {
	return _fastReflection_MsgUpdateParams_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgUpdateParams) New() protoreflect.Message {
	return new(fastReflection_MsgUpdateParams)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgUpdateParams) Interface() protoreflect.ProtoMessage {
	return (*MsgUpdateParams)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgUpdateParams) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.ChainName != "" {
		value := protoreflect.ValueOfString(x.ChainName)
		if !f(fd_MsgUpdateParams_chain_name, value) {
			return
		}
	}
	if x.Authority != "" {
		value := protoreflect.ValueOfString(x.Authority)
		if !f(fd_MsgUpdateParams_authority, value) {
			return
		}
	}
	if x.Params != nil {
		value := protoreflect.ValueOfMessage(x.Params.ProtoReflect())
		if !f(fd_MsgUpdateParams_params, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgUpdateParams) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "fx.gravity.crosschain.v1.MsgUpdateParams.chain_name":
		return x.ChainName != ""
	case "fx.gravity.crosschain.v1.MsgUpdateParams.authority":
		return x.Authority != ""
	case "fx.gravity.crosschain.v1.MsgUpdateParams.params":
		return x.Params != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgUpdateParams"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgUpdateParams does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpdateParams) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "fx.gravity.crosschain.v1.MsgUpdateParams.chain_name":
		x.ChainName = ""
	case "fx.gravity.crosschain.v1.MsgUpdateParams.authority":
		x.Authority = ""
	case "fx.gravity.crosschain.v1.MsgUpdateParams.params":
		x.Params = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgUpdateParams"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgUpdateParams does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgUpdateParams) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "fx.gravity.crosschain.v1.MsgUpdateParams.chain_name":
		value := x.ChainName
		return protoreflect.ValueOfString(value)
	case "fx.gravity.crosschain.v1.MsgUpdateParams.authority":
		value := x.Authority
		return protoreflect.ValueOfString(value)
	case "fx.gravity.crosschain.v1.MsgUpdateParams.params":
		value := x.Params
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgUpdateParams"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgUpdateParams does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpdateParams) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "fx.gravity.crosschain.v1.MsgUpdateParams.chain_name":
		x.ChainName = value.Interface().(string)
	case "fx.gravity.crosschain.v1.MsgUpdateParams.authority":
		x.Authority = value.Interface().(string)
	case "fx.gravity.crosschain.v1.MsgUpdateParams.params":
		x.Params = value.Message().Interface().(*Params)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgUpdateParams"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgUpdateParams does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpdateParams) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "fx.gravity.crosschain.v1.MsgUpdateParams.params":
		if x.Params == nil {
			x.Params = new(Params)
		}
		return protoreflect.ValueOfMessage(x.Params.ProtoReflect())
	case "fx.gravity.crosschain.v1.MsgUpdateParams.chain_name":
		panic(fmt.Errorf("field chain_name of message fx.gravity.crosschain.v1.MsgUpdateParams is not mutable"))
	case "fx.gravity.crosschain.v1.MsgUpdateParams.authority":
		panic(fmt.Errorf("field authority of message fx.gravity.crosschain.v1.MsgUpdateParams is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgUpdateParams"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgUpdateParams does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgUpdateParams) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "fx.gravity.crosschain.v1.MsgUpdateParams.chain_name":
		return protoreflect.ValueOfString("")
	case "fx.gravity.crosschain.v1.MsgUpdateParams.authority":
		return protoreflect.ValueOfString("")
	case "fx.gravity.crosschain.v1.MsgUpdateParams.params":
		m := new(Params)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgUpdateParams"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgUpdateParams does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgUpdateParams) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in fx.gravity.crosschain.v1.MsgUpdateParams", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgUpdateParams) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpdateParams) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgUpdateParams) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgUpdateParams) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgUpdateParams)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.ChainName)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Authority)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.Params != nil {
			l = options.Size(x.Params)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgUpdateParams)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Params != nil {
			encoded, err := options.Marshal(x.Params)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.Authority) > 0 {
			i -= len(x.Authority)
			copy(dAtA[i:], x.Authority)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Authority)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.ChainName) > 0 {
			i -= len(x.ChainName)
			copy(dAtA[i:], x.ChainName)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ChainName)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgUpdateParams)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgUpdateParams: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgUpdateParams: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ChainName", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ChainName = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Authority", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Authority = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Params", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Params == nil {
					x.Params = &Params{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Params); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgUpdateParamsResponse protoreflect.MessageDescriptor
)

func init() {
	file_fx_gravity_crosschain_v1_tx_proto_init()
	md_MsgUpdateParamsResponse = File_fx_gravity_crosschain_v1_tx_proto.Messages().ByName("MsgUpdateParamsResponse")
}

var _ protoreflect.Message = (*fastReflection_MsgUpdateParamsResponse)(nil)

type fastReflection_MsgUpdateParamsResponse MsgUpdateParamsResponse

func (x *MsgUpdateParamsResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgUpdateParamsResponse)(x)
}

func (x *MsgUpdateParamsResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_fx_gravity_crosschain_v1_tx_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgUpdateParamsResponse_messageType fastReflection_MsgUpdateParamsResponse_messageType
var _ protoreflect.MessageType = fastReflection_MsgUpdateParamsResponse_messageType{}

type fastReflection_MsgUpdateParamsResponse_messageType struct{}

func (x fastReflection_MsgUpdateParamsResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgUpdateParamsResponse)(nil)
}
func (x fastReflection_MsgUpdateParamsResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgUpdateParamsResponse)
}
func (x fastReflection_MsgUpdateParamsResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgUpdateParamsResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgUpdateParamsResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgUpdateParamsResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgUpdateParamsResponse) Type() protoreflect.MessageType {
	return _fastReflection_MsgUpdateParamsResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgUpdateParamsResponse) New() protoreflect.Message {
	return new(fastReflection_MsgUpdateParamsResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgUpdateParamsResponse) Interface() protoreflect.ProtoMessage {
	return (*MsgUpdateParamsResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgUpdateParamsResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgUpdateParamsResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgUpdateParamsResponse"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgUpdateParamsResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpdateParamsResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgUpdateParamsResponse"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgUpdateParamsResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgUpdateParamsResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgUpdateParamsResponse"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgUpdateParamsResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpdateParamsResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgUpdateParamsResponse"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgUpdateParamsResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpdateParamsResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgUpdateParamsResponse"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgUpdateParamsResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgUpdateParamsResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgUpdateParamsResponse"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgUpdateParamsResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgUpdateParamsResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in fx.gravity.crosschain.v1.MsgUpdateParamsResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgUpdateParamsResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpdateParamsResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgUpdateParamsResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgUpdateParamsResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgUpdateParamsResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgUpdateParamsResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgUpdateParamsResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgUpdateParamsResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgUpdateParamsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_MsgUpdateChainOracles_3_list)(nil)

type _MsgUpdateChainOracles_3_list struct {
	list *[]string
}

func (x *_MsgUpdateChainOracles_3_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_MsgUpdateChainOracles_3_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfString((*x.list)[i])
}

func (x *_MsgUpdateChainOracles_3_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	(*x.list)[i] = concreteValue
}

func (x *_MsgUpdateChainOracles_3_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	*x.list = append(*x.list, concreteValue)
}

func (x *_MsgUpdateChainOracles_3_list) AppendMutable() protoreflect.Value {
	panic(fmt.Errorf("AppendMutable can not be called on message MsgUpdateChainOracles at list field Oracles as it is not of Message kind"))
}

func (x *_MsgUpdateChainOracles_3_list) Truncate(n int) {
	*x.list = (*x.list)[:n]
}

func (x *_MsgUpdateChainOracles_3_list) NewElement() protoreflect.Value {
	v := ""
	return protoreflect.ValueOfString(v)
}

func (x *_MsgUpdateChainOracles_3_list) IsValid() bool {
	return x.list != nil
}

var (
	md_MsgUpdateChainOracles            protoreflect.MessageDescriptor
	fd_MsgUpdateChainOracles_chain_name protoreflect.FieldDescriptor
	fd_MsgUpdateChainOracles_authority  protoreflect.FieldDescriptor
	fd_MsgUpdateChainOracles_oracles    protoreflect.FieldDescriptor
)

func init() {
	file_fx_gravity_crosschain_v1_tx_proto_init()
	md_MsgUpdateChainOracles = File_fx_gravity_crosschain_v1_tx_proto.Messages().ByName("MsgUpdateChainOracles")
	fd_MsgUpdateChainOracles_chain_name = md_MsgUpdateChainOracles.Fields().ByName("chain_name")
	fd_MsgUpdateChainOracles_authority = md_MsgUpdateChainOracles.Fields().ByName("authority")
	fd_MsgUpdateChainOracles_oracles = md_MsgUpdateChainOracles.Fields().ByName("oracles")
}

var _ protoreflect.Message = (*fastReflection_MsgUpdateChainOracles)(nil)

type fastReflection_MsgUpdateChainOracles MsgUpdateChainOracles

func (x *MsgUpdateChainOracles) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgUpdateChainOracles)(x)
}

func (x *MsgUpdateChainOracles) slowProtoReflect() protoreflect.Message {
	mi := &file_fx_gravity_crosschain_v1_tx_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgUpdateChainOracles_messageType fastReflection_MsgUpdateChainOracles_messageType
var _ protoreflect.MessageType = fastReflection_MsgUpdateChainOracles_messageType{}

type fastReflection_MsgUpdateChainOracles_messageType struct{}

func (x fastReflection_MsgUpdateChainOracles_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgUpdateChainOracles)(nil)
}
func (x fastReflection_MsgUpdateChainOracles_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgUpdateChainOracles)
}
func (x fastReflection_MsgUpdateChainOracles_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgUpdateChainOracles
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgUpdateChainOracles) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgUpdateChainOracles
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgUpdateChainOracles) Type() protoreflect.MessageType {
	return _fastReflection_MsgUpdateChainOracles_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgUpdateChainOracles) New() protoreflect.Message {
	return new(fastReflection_MsgUpdateChainOracles)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgUpdateChainOracles) Interface() protoreflect.ProtoMessage {
	return (*MsgUpdateChainOracles)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgUpdateChainOracles) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.ChainName != "" {
		value := protoreflect.ValueOfString(x.ChainName)
		if !f(fd_MsgUpdateChainOracles_chain_name, value) {
			return
		}
	}
	if x.Authority != "" {
		value := protoreflect.ValueOfString(x.Authority)
		if !f(fd_MsgUpdateChainOracles_authority, value) {
			return
		}
	}
	if len(x.Oracles) != 0 {
		value := protoreflect.ValueOfList(&_MsgUpdateChainOracles_3_list{list: &x.Oracles})
		if !f(fd_MsgUpdateChainOracles_oracles, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgUpdateChainOracles) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "fx.gravity.crosschain.v1.MsgUpdateChainOracles.chain_name":
		return x.ChainName != ""
	case "fx.gravity.crosschain.v1.MsgUpdateChainOracles.authority":
		return x.Authority != ""
	case "fx.gravity.crosschain.v1.MsgUpdateChainOracles.oracles":
		return len(x.Oracles) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgUpdateChainOracles"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgUpdateChainOracles does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpdateChainOracles) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "fx.gravity.crosschain.v1.MsgUpdateChainOracles.chain_name":
		x.ChainName = ""
	case "fx.gravity.crosschain.v1.MsgUpdateChainOracles.authority":
		x.Authority = ""
	case "fx.gravity.crosschain.v1.MsgUpdateChainOracles.oracles":
		x.Oracles = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgUpdateChainOracles"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgUpdateChainOracles does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgUpdateChainOracles) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "fx.gravity.crosschain.v1.MsgUpdateChainOracles.chain_name":
		value := x.ChainName
		return protoreflect.ValueOfString(value)
	case "fx.gravity.crosschain.v1.MsgUpdateChainOracles.authority":
		value := x.Authority
		return protoreflect.ValueOfString(value)
	case "fx.gravity.crosschain.v1.MsgUpdateChainOracles.oracles":
		if len(x.Oracles) == 0 {
			return protoreflect.ValueOfList(&_MsgUpdateChainOracles_3_list{})
		}
		listValue := &_MsgUpdateChainOracles_3_list{list: &x.Oracles}
		return protoreflect.ValueOfList(listValue)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgUpdateChainOracles"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgUpdateChainOracles does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpdateChainOracles) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "fx.gravity.crosschain.v1.MsgUpdateChainOracles.chain_name":
		x.ChainName = value.Interface().(string)
	case "fx.gravity.crosschain.v1.MsgUpdateChainOracles.authority":
		x.Authority = value.Interface().(string)
	case "fx.gravity.crosschain.v1.MsgUpdateChainOracles.oracles":
		lv := value.List()
		clv := lv.(*_MsgUpdateChainOracles_3_list)
		x.Oracles = *clv.list
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgUpdateChainOracles"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgUpdateChainOracles does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpdateChainOracles) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "fx.gravity.crosschain.v1.MsgUpdateChainOracles.oracles":
		if x.Oracles == nil {
			x.Oracles = []string{}
		}
		value := &_MsgUpdateChainOracles_3_list{list: &x.Oracles}
		return protoreflect.ValueOfList(value)
	case "fx.gravity.crosschain.v1.MsgUpdateChainOracles.chain_name":
		panic(fmt.Errorf("field chain_name of message fx.gravity.crosschain.v1.MsgUpdateChainOracles is not mutable"))
	case "fx.gravity.crosschain.v1.MsgUpdateChainOracles.authority":
		panic(fmt.Errorf("field authority of message fx.gravity.crosschain.v1.MsgUpdateChainOracles is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgUpdateChainOracles"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgUpdateChainOracles does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgUpdateChainOracles) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "fx.gravity.crosschain.v1.MsgUpdateChainOracles.chain_name":
		return protoreflect.ValueOfString("")
	case "fx.gravity.crosschain.v1.MsgUpdateChainOracles.authority":
		return protoreflect.ValueOfString("")
	case "fx.gravity.crosschain.v1.MsgUpdateChainOracles.oracles":
		list := []string{}
		return protoreflect.ValueOfList(&_MsgUpdateChainOracles_3_list{list: &list})
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgUpdateChainOracles"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgUpdateChainOracles does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgUpdateChainOracles) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in fx.gravity.crosschain.v1.MsgUpdateChainOracles", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgUpdateChainOracles) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpdateChainOracles) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgUpdateChainOracles) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgUpdateChainOracles) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgUpdateChainOracles)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.ChainName)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Authority)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if len(x.Oracles) > 0 {
			for _, s := range x.Oracles {
				l = len(s)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgUpdateChainOracles)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Oracles) > 0 {
			for iNdEx := len(x.Oracles) - 1; iNdEx >= 0; iNdEx-- {
				i -= len(x.Oracles[iNdEx])
				copy(dAtA[i:], x.Oracles[iNdEx])
				i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Oracles[iNdEx])))
				i--
				dAtA[i] = 0x1a
			}
		}
		if len(x.Authority) > 0 {
			i -= len(x.Authority)
			copy(dAtA[i:], x.Authority)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Authority)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.ChainName) > 0 {
			i -= len(x.ChainName)
			copy(dAtA[i:], x.ChainName)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ChainName)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgUpdateChainOracles)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgUpdateChainOracles: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgUpdateChainOracles: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ChainName", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ChainName = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Authority", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Authority = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Oracles", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Oracles = append(x.Oracles, string(dAtA[iNdEx:postIndex]))
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgUpdateChainOraclesResponse protoreflect.MessageDescriptor
)

func init() {
	file_fx_gravity_crosschain_v1_tx_proto_init()
	md_MsgUpdateChainOraclesResponse = File_fx_gravity_crosschain_v1_tx_proto.Messages().ByName("MsgUpdateChainOraclesResponse")
}

var _ protoreflect.Message = (*fastReflection_MsgUpdateChainOraclesResponse)(nil)

type fastReflection_MsgUpdateChainOraclesResponse MsgUpdateChainOraclesResponse

func (x *MsgUpdateChainOraclesResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgUpdateChainOraclesResponse)(x)
}

func (x *MsgUpdateChainOraclesResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_fx_gravity_crosschain_v1_tx_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgUpdateChainOraclesResponse_messageType fastReflection_MsgUpdateChainOraclesResponse_messageType
var _ protoreflect.MessageType = fastReflection_MsgUpdateChainOraclesResponse_messageType{}

type fastReflection_MsgUpdateChainOraclesResponse_messageType struct{}

func (x fastReflection_MsgUpdateChainOraclesResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgUpdateChainOraclesResponse)(nil)
}
func (x fastReflection_MsgUpdateChainOraclesResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgUpdateChainOraclesResponse)
}
func (x fastReflection_MsgUpdateChainOraclesResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgUpdateChainOraclesResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgUpdateChainOraclesResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgUpdateChainOraclesResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgUpdateChainOraclesResponse) Type() protoreflect.MessageType {
	return _fastReflection_MsgUpdateChainOraclesResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgUpdateChainOraclesResponse) New() protoreflect.Message {
	return new(fastReflection_MsgUpdateChainOraclesResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgUpdateChainOraclesResponse) Interface() protoreflect.ProtoMessage {
	return (*MsgUpdateChainOraclesResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgUpdateChainOraclesResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgUpdateChainOraclesResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgUpdateChainOraclesResponse"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgUpdateChainOraclesResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpdateChainOraclesResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgUpdateChainOraclesResponse"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgUpdateChainOraclesResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgUpdateChainOraclesResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgUpdateChainOraclesResponse"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgUpdateChainOraclesResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpdateChainOraclesResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgUpdateChainOraclesResponse"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgUpdateChainOraclesResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpdateChainOraclesResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgUpdateChainOraclesResponse"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgUpdateChainOraclesResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgUpdateChainOraclesResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgUpdateChainOraclesResponse"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgUpdateChainOraclesResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgUpdateChainOraclesResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in fx.gravity.crosschain.v1.MsgUpdateChainOraclesResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgUpdateChainOraclesResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpdateChainOraclesResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgUpdateChainOraclesResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgUpdateChainOraclesResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgUpdateChainOraclesResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgUpdateChainOraclesResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgUpdateChainOraclesResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgUpdateChainOraclesResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgUpdateChainOraclesResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgClaim                 protoreflect.MessageDescriptor
	fd_MsgClaim_chain_name      protoreflect.FieldDescriptor
	fd_MsgClaim_bridger_address protoreflect.FieldDescriptor
	fd_MsgClaim_claim           protoreflect.FieldDescriptor
)

func init() {
	file_fx_gravity_crosschain_v1_tx_proto_init()
	md_MsgClaim = File_fx_gravity_crosschain_v1_tx_proto.Messages().ByName("MsgClaim")
	fd_MsgClaim_chain_name = md_MsgClaim.Fields().ByName("chain_name")
	fd_MsgClaim_bridger_address = md_MsgClaim.Fields().ByName("bridger_address")
	fd_MsgClaim_claim = md_MsgClaim.Fields().ByName("claim")
}

var _ protoreflect.Message = (*fastReflection_MsgClaim)(nil)

type fastReflection_MsgClaim MsgClaim

func (x *MsgClaim) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgClaim)(x)
}

func (x *MsgClaim) slowProtoReflect() protoreflect.Message {
	mi := &file_fx_gravity_crosschain_v1_tx_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgClaim_messageType fastReflection_MsgClaim_messageType
var _ protoreflect.MessageType = fastReflection_MsgClaim_messageType{}

type fastReflection_MsgClaim_messageType struct{}

func (x fastReflection_MsgClaim_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgClaim)(nil)
}
func (x fastReflection_MsgClaim_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgClaim)
}
func (x fastReflection_MsgClaim_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgClaim
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgClaim) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgClaim
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgClaim) Type() protoreflect.MessageType {
	return _fastReflection_MsgClaim_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgClaim) New() protoreflect.Message {
	return new(fastReflection_MsgClaim)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgClaim) Interface() protoreflect.ProtoMessage {
	return (*MsgClaim)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgClaim) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.ChainName != "" {
		value := protoreflect.ValueOfString(x.ChainName)
		if !f(fd_MsgClaim_chain_name, value) {
			return
		}
	}
	if x.BridgerAddress != "" {
		value := protoreflect.ValueOfString(x.BridgerAddress)
		if !f(fd_MsgClaim_bridger_address, value) {
			return
		}
	}
	if x.Claim != nil {
		value := protoreflect.ValueOfMessage(x.Claim.ProtoReflect())
		if !f(fd_MsgClaim_claim, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgClaim) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "fx.gravity.crosschain.v1.MsgClaim.chain_name":
		return x.ChainName != ""
	case "fx.gravity.crosschain.v1.MsgClaim.bridger_address":
		return x.BridgerAddress != ""
	case "fx.gravity.crosschain.v1.MsgClaim.claim":
		return x.Claim != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgClaim"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgClaim does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgClaim) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "fx.gravity.crosschain.v1.MsgClaim.chain_name":
		x.ChainName = ""
	case "fx.gravity.crosschain.v1.MsgClaim.bridger_address":
		x.BridgerAddress = ""
	case "fx.gravity.crosschain.v1.MsgClaim.claim":
		x.Claim = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgClaim"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgClaim does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgClaim) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "fx.gravity.crosschain.v1.MsgClaim.chain_name":
		value := x.ChainName
		return protoreflect.ValueOfString(value)
	case "fx.gravity.crosschain.v1.MsgClaim.bridger_address":
		value := x.BridgerAddress
		return protoreflect.ValueOfString(value)
	case "fx.gravity.crosschain.v1.MsgClaim.claim":
		value := x.Claim
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgClaim"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgClaim does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgClaim) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "fx.gravity.crosschain.v1.MsgClaim.chain_name":
		x.ChainName = value.Interface().(string)
	case "fx.gravity.crosschain.v1.MsgClaim.bridger_address":
		x.BridgerAddress = value.Interface().(string)
	case "fx.gravity.crosschain.v1.MsgClaim.claim":
		x.Claim = value.Message().Interface().(*anypb.Any)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgClaim"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgClaim does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgClaim) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "fx.gravity.crosschain.v1.MsgClaim.claim":
		if x.Claim == nil {
			x.Claim = new(anypb.Any)
		}
		return protoreflect.ValueOfMessage(x.Claim.ProtoReflect())
	case "fx.gravity.crosschain.v1.MsgClaim.chain_name":
		panic(fmt.Errorf("field chain_name of message fx.gravity.crosschain.v1.MsgClaim is not mutable"))
	case "fx.gravity.crosschain.v1.MsgClaim.bridger_address":
		panic(fmt.Errorf("field bridger_address of message fx.gravity.crosschain.v1.MsgClaim is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgClaim"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgClaim does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgClaim) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "fx.gravity.crosschain.v1.MsgClaim.chain_name":
		return protoreflect.ValueOfString("")
	case "fx.gravity.crosschain.v1.MsgClaim.bridger_address":
		return protoreflect.ValueOfString("")
	case "fx.gravity.crosschain.v1.MsgClaim.claim":
		m := new(anypb.Any)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgClaim"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgClaim does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgClaim) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in fx.gravity.crosschain.v1.MsgClaim", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgClaim) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgClaim) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgClaim) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgClaim) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgClaim)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.ChainName)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.BridgerAddress)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.Claim != nil {
			l = options.Size(x.Claim)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgClaim)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Claim != nil {
			encoded, err := options.Marshal(x.Claim)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.BridgerAddress) > 0 {
			i -= len(x.BridgerAddress)
			copy(dAtA[i:], x.BridgerAddress)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.BridgerAddress)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.ChainName) > 0 {
			i -= len(x.ChainName)
			copy(dAtA[i:], x.ChainName)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ChainName)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgClaim)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgClaim: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgClaim: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ChainName", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ChainName = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BridgerAddress", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.BridgerAddress = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Claim", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Claim == nil {
					x.Claim = &anypb.Any{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Claim); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgClaimResponse protoreflect.MessageDescriptor
)

func init() {
	file_fx_gravity_crosschain_v1_tx_proto_init()
	md_MsgClaimResponse = File_fx_gravity_crosschain_v1_tx_proto.Messages().ByName("MsgClaimResponse")
}

var _ protoreflect.Message = (*fastReflection_MsgClaimResponse)(nil)

type fastReflection_MsgClaimResponse MsgClaimResponse

func (x *MsgClaimResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgClaimResponse)(x)
}

func (x *MsgClaimResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_fx_gravity_crosschain_v1_tx_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgClaimResponse_messageType fastReflection_MsgClaimResponse_messageType
var _ protoreflect.MessageType = fastReflection_MsgClaimResponse_messageType{}

type fastReflection_MsgClaimResponse_messageType struct{}

func (x fastReflection_MsgClaimResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgClaimResponse)(nil)
}
func (x fastReflection_MsgClaimResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgClaimResponse)
}
func (x fastReflection_MsgClaimResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgClaimResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgClaimResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgClaimResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgClaimResponse) Type() protoreflect.MessageType {
	return _fastReflection_MsgClaimResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgClaimResponse) New() protoreflect.Message {
	return new(fastReflection_MsgClaimResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgClaimResponse) Interface() protoreflect.ProtoMessage {
	return (*MsgClaimResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgClaimResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgClaimResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgClaimResponse"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgClaimResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgClaimResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgClaimResponse"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgClaimResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgClaimResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgClaimResponse"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgClaimResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgClaimResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgClaimResponse"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgClaimResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgClaimResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgClaimResponse"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgClaimResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgClaimResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgClaimResponse"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgClaimResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgClaimResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in fx.gravity.crosschain.v1.MsgClaimResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgClaimResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgClaimResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgClaimResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgClaimResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgClaimResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgClaimResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgClaimResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgClaimResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgClaimResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgConfirm                 protoreflect.MessageDescriptor
	fd_MsgConfirm_chain_name      protoreflect.FieldDescriptor
	fd_MsgConfirm_bridger_address protoreflect.FieldDescriptor
	fd_MsgConfirm_confirm         protoreflect.FieldDescriptor
)

func init() {
	file_fx_gravity_crosschain_v1_tx_proto_init()
	md_MsgConfirm = File_fx_gravity_crosschain_v1_tx_proto.Messages().ByName("MsgConfirm")
	fd_MsgConfirm_chain_name = md_MsgConfirm.Fields().ByName("chain_name")
	fd_MsgConfirm_bridger_address = md_MsgConfirm.Fields().ByName("bridger_address")
	fd_MsgConfirm_confirm = md_MsgConfirm.Fields().ByName("confirm")
}

var _ protoreflect.Message = (*fastReflection_MsgConfirm)(nil)

type fastReflection_MsgConfirm MsgConfirm

func (x *MsgConfirm) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgConfirm)(x)
}

func (x *MsgConfirm) slowProtoReflect() protoreflect.Message {
	mi := &file_fx_gravity_crosschain_v1_tx_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgConfirm_messageType fastReflection_MsgConfirm_messageType
var _ protoreflect.MessageType = fastReflection_MsgConfirm_messageType{}

type fastReflection_MsgConfirm_messageType struct{}

func (x fastReflection_MsgConfirm_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgConfirm)(nil)
}
func (x fastReflection_MsgConfirm_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgConfirm)
}
func (x fastReflection_MsgConfirm_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgConfirm
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgConfirm) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgConfirm
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgConfirm) Type() protoreflect.MessageType {
	return _fastReflection_MsgConfirm_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgConfirm) New() protoreflect.Message {
	return new(fastReflection_MsgConfirm)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgConfirm) Interface() protoreflect.ProtoMessage {
	return (*MsgConfirm)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgConfirm) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.ChainName != "" {
		value := protoreflect.ValueOfString(x.ChainName)
		if !f(fd_MsgConfirm_chain_name, value) {
			return
		}
	}
	if x.BridgerAddress != "" {
		value := protoreflect.ValueOfString(x.BridgerAddress)
		if !f(fd_MsgConfirm_bridger_address, value) {
			return
		}
	}
	if x.Confirm != nil {
		value := protoreflect.ValueOfMessage(x.Confirm.ProtoReflect())
		if !f(fd_MsgConfirm_confirm, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgConfirm) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "fx.gravity.crosschain.v1.MsgConfirm.chain_name":
		return x.ChainName != ""
	case "fx.gravity.crosschain.v1.MsgConfirm.bridger_address":
		return x.BridgerAddress != ""
	case "fx.gravity.crosschain.v1.MsgConfirm.confirm":
		return x.Confirm != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgConfirm"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgConfirm does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgConfirm) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "fx.gravity.crosschain.v1.MsgConfirm.chain_name":
		x.ChainName = ""
	case "fx.gravity.crosschain.v1.MsgConfirm.bridger_address":
		x.BridgerAddress = ""
	case "fx.gravity.crosschain.v1.MsgConfirm.confirm":
		x.Confirm = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgConfirm"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgConfirm does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgConfirm) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "fx.gravity.crosschain.v1.MsgConfirm.chain_name":
		value := x.ChainName
		return protoreflect.ValueOfString(value)
	case "fx.gravity.crosschain.v1.MsgConfirm.bridger_address":
		value := x.BridgerAddress
		return protoreflect.ValueOfString(value)
	case "fx.gravity.crosschain.v1.MsgConfirm.confirm":
		value := x.Confirm
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgConfirm"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgConfirm does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgConfirm) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "fx.gravity.crosschain.v1.MsgConfirm.chain_name":
		x.ChainName = value.Interface().(string)
	case "fx.gravity.crosschain.v1.MsgConfirm.bridger_address":
		x.BridgerAddress = value.Interface().(string)
	case "fx.gravity.crosschain.v1.MsgConfirm.confirm":
		x.Confirm = value.Message().Interface().(*anypb.Any)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgConfirm"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgConfirm does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgConfirm) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "fx.gravity.crosschain.v1.MsgConfirm.confirm":
		if x.Confirm == nil {
			x.Confirm = new(anypb.Any)
		}
		return protoreflect.ValueOfMessage(x.Confirm.ProtoReflect())
	case "fx.gravity.crosschain.v1.MsgConfirm.chain_name":
		panic(fmt.Errorf("field chain_name of message fx.gravity.crosschain.v1.MsgConfirm is not mutable"))
	case "fx.gravity.crosschain.v1.MsgConfirm.bridger_address":
		panic(fmt.Errorf("field bridger_address of message fx.gravity.crosschain.v1.MsgConfirm is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgConfirm"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgConfirm does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgConfirm) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "fx.gravity.crosschain.v1.MsgConfirm.chain_name":
		return protoreflect.ValueOfString("")
	case "fx.gravity.crosschain.v1.MsgConfirm.bridger_address":
		return protoreflect.ValueOfString("")
	case "fx.gravity.crosschain.v1.MsgConfirm.confirm":
		m := new(anypb.Any)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgConfirm"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgConfirm does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgConfirm) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in fx.gravity.crosschain.v1.MsgConfirm", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgConfirm) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgConfirm) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgConfirm) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgConfirm) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgConfirm)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.ChainName)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.BridgerAddress)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.Confirm != nil {
			l = options.Size(x.Confirm)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgConfirm)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Confirm != nil {
			encoded, err := options.Marshal(x.Confirm)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.BridgerAddress) > 0 {
			i -= len(x.BridgerAddress)
			copy(dAtA[i:], x.BridgerAddress)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.BridgerAddress)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.ChainName) > 0 {
			i -= len(x.ChainName)
			copy(dAtA[i:], x.ChainName)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ChainName)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgConfirm)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgConfirm: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgConfirm: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ChainName", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ChainName = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BridgerAddress", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.BridgerAddress = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Confirm", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Confirm == nil {
					x.Confirm = &anypb.Any{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Confirm); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgConfirmResponse protoreflect.MessageDescriptor
)

func init() {
	file_fx_gravity_crosschain_v1_tx_proto_init()
	md_MsgConfirmResponse = File_fx_gravity_crosschain_v1_tx_proto.Messages().ByName("MsgConfirmResponse")
}

var _ protoreflect.Message = (*fastReflection_MsgConfirmResponse)(nil)

type fastReflection_MsgConfirmResponse MsgConfirmResponse

func (x *MsgConfirmResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgConfirmResponse)(x)
}

func (x *MsgConfirmResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_fx_gravity_crosschain_v1_tx_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgConfirmResponse_messageType fastReflection_MsgConfirmResponse_messageType
var _ protoreflect.MessageType = fastReflection_MsgConfirmResponse_messageType{}

type fastReflection_MsgConfirmResponse_messageType struct{}

func (x fastReflection_MsgConfirmResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgConfirmResponse)(nil)
}
func (x fastReflection_MsgConfirmResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgConfirmResponse)
}
func (x fastReflection_MsgConfirmResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgConfirmResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgConfirmResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgConfirmResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgConfirmResponse) Type() protoreflect.MessageType {
	return _fastReflection_MsgConfirmResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgConfirmResponse) New() protoreflect.Message {
	return new(fastReflection_MsgConfirmResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgConfirmResponse) Interface() protoreflect.ProtoMessage {
	return (*MsgConfirmResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgConfirmResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgConfirmResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgConfirmResponse"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgConfirmResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgConfirmResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgConfirmResponse"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgConfirmResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgConfirmResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgConfirmResponse"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgConfirmResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgConfirmResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgConfirmResponse"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgConfirmResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgConfirmResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgConfirmResponse"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgConfirmResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgConfirmResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgConfirmResponse"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgConfirmResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgConfirmResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in fx.gravity.crosschain.v1.MsgConfirmResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgConfirmResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgConfirmResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgConfirmResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgConfirmResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgConfirmResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgConfirmResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgConfirmResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgConfirmResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgConfirmResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgOracleSetConfirmResponse protoreflect.MessageDescriptor
)

func init() {
	file_fx_gravity_crosschain_v1_tx_proto_init()
	md_MsgOracleSetConfirmResponse = File_fx_gravity_crosschain_v1_tx_proto.Messages().ByName("MsgOracleSetConfirmResponse")
}

var _ protoreflect.Message = (*fastReflection_MsgOracleSetConfirmResponse)(nil)

type fastReflection_MsgOracleSetConfirmResponse MsgOracleSetConfirmResponse

func (x *MsgOracleSetConfirmResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgOracleSetConfirmResponse)(x)
}

func (x *MsgOracleSetConfirmResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_fx_gravity_crosschain_v1_tx_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgOracleSetConfirmResponse_messageType fastReflection_MsgOracleSetConfirmResponse_messageType
var _ protoreflect.MessageType = fastReflection_MsgOracleSetConfirmResponse_messageType{}

type fastReflection_MsgOracleSetConfirmResponse_messageType struct{}

func (x fastReflection_MsgOracleSetConfirmResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgOracleSetConfirmResponse)(nil)
}
func (x fastReflection_MsgOracleSetConfirmResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgOracleSetConfirmResponse)
}
func (x fastReflection_MsgOracleSetConfirmResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgOracleSetConfirmResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgOracleSetConfirmResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgOracleSetConfirmResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgOracleSetConfirmResponse) Type() protoreflect.MessageType {
	return _fastReflection_MsgOracleSetConfirmResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgOracleSetConfirmResponse) New() protoreflect.Message {
	return new(fastReflection_MsgOracleSetConfirmResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgOracleSetConfirmResponse) Interface() protoreflect.ProtoMessage {
	return (*MsgOracleSetConfirmResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgOracleSetConfirmResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgOracleSetConfirmResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgOracleSetConfirmResponse"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgOracleSetConfirmResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgOracleSetConfirmResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgOracleSetConfirmResponse"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgOracleSetConfirmResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgOracleSetConfirmResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgOracleSetConfirmResponse"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgOracleSetConfirmResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgOracleSetConfirmResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgOracleSetConfirmResponse"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgOracleSetConfirmResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgOracleSetConfirmResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgOracleSetConfirmResponse"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgOracleSetConfirmResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgOracleSetConfirmResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgOracleSetConfirmResponse"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgOracleSetConfirmResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgOracleSetConfirmResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in fx.gravity.crosschain.v1.MsgOracleSetConfirmResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgOracleSetConfirmResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgOracleSetConfirmResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgOracleSetConfirmResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgOracleSetConfirmResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgOracleSetConfirmResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgOracleSetConfirmResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgOracleSetConfirmResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgOracleSetConfirmResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgOracleSetConfirmResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgConfirmBatchResponse protoreflect.MessageDescriptor
)

func init() {
	file_fx_gravity_crosschain_v1_tx_proto_init()
	md_MsgConfirmBatchResponse = File_fx_gravity_crosschain_v1_tx_proto.Messages().ByName("MsgConfirmBatchResponse")
}

var _ protoreflect.Message = (*fastReflection_MsgConfirmBatchResponse)(nil)

type fastReflection_MsgConfirmBatchResponse MsgConfirmBatchResponse

func (x *MsgConfirmBatchResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgConfirmBatchResponse)(x)
}

func (x *MsgConfirmBatchResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_fx_gravity_crosschain_v1_tx_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgConfirmBatchResponse_messageType fastReflection_MsgConfirmBatchResponse_messageType
var _ protoreflect.MessageType = fastReflection_MsgConfirmBatchResponse_messageType{}

type fastReflection_MsgConfirmBatchResponse_messageType struct{}

func (x fastReflection_MsgConfirmBatchResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgConfirmBatchResponse)(nil)
}
func (x fastReflection_MsgConfirmBatchResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgConfirmBatchResponse)
}
func (x fastReflection_MsgConfirmBatchResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgConfirmBatchResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgConfirmBatchResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgConfirmBatchResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgConfirmBatchResponse) Type() protoreflect.MessageType {
	return _fastReflection_MsgConfirmBatchResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgConfirmBatchResponse) New() protoreflect.Message {
	return new(fastReflection_MsgConfirmBatchResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgConfirmBatchResponse) Interface() protoreflect.ProtoMessage {
	return (*MsgConfirmBatchResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgConfirmBatchResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgConfirmBatchResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgConfirmBatchResponse"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgConfirmBatchResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgConfirmBatchResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgConfirmBatchResponse"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgConfirmBatchResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgConfirmBatchResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgConfirmBatchResponse"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgConfirmBatchResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgConfirmBatchResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgConfirmBatchResponse"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgConfirmBatchResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgConfirmBatchResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgConfirmBatchResponse"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgConfirmBatchResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgConfirmBatchResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgConfirmBatchResponse"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgConfirmBatchResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgConfirmBatchResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in fx.gravity.crosschain.v1.MsgConfirmBatchResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgConfirmBatchResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgConfirmBatchResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgConfirmBatchResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgConfirmBatchResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgConfirmBatchResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgConfirmBatchResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgConfirmBatchResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgConfirmBatchResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgConfirmBatchResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgBridgeCallConfirmResponse protoreflect.MessageDescriptor
)

func init() {
	file_fx_gravity_crosschain_v1_tx_proto_init()
	md_MsgBridgeCallConfirmResponse = File_fx_gravity_crosschain_v1_tx_proto.Messages().ByName("MsgBridgeCallConfirmResponse")
}

var _ protoreflect.Message = (*fastReflection_MsgBridgeCallConfirmResponse)(nil)

type fastReflection_MsgBridgeCallConfirmResponse MsgBridgeCallConfirmResponse

func (x *MsgBridgeCallConfirmResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgBridgeCallConfirmResponse)(x)
}

func (x *MsgBridgeCallConfirmResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_fx_gravity_crosschain_v1_tx_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgBridgeCallConfirmResponse_messageType fastReflection_MsgBridgeCallConfirmResponse_messageType
var _ protoreflect.MessageType = fastReflection_MsgBridgeCallConfirmResponse_messageType{}

type fastReflection_MsgBridgeCallConfirmResponse_messageType struct{}

func (x fastReflection_MsgBridgeCallConfirmResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgBridgeCallConfirmResponse)(nil)
}
func (x fastReflection_MsgBridgeCallConfirmResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgBridgeCallConfirmResponse)
}
func (x fastReflection_MsgBridgeCallConfirmResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgBridgeCallConfirmResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgBridgeCallConfirmResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgBridgeCallConfirmResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgBridgeCallConfirmResponse) Type() protoreflect.MessageType {
	return _fastReflection_MsgBridgeCallConfirmResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgBridgeCallConfirmResponse) New() protoreflect.Message {
	return new(fastReflection_MsgBridgeCallConfirmResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgBridgeCallConfirmResponse) Interface() protoreflect.ProtoMessage {
	return (*MsgBridgeCallConfirmResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgBridgeCallConfirmResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgBridgeCallConfirmResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgBridgeCallConfirmResponse"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgBridgeCallConfirmResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgBridgeCallConfirmResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgBridgeCallConfirmResponse"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgBridgeCallConfirmResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgBridgeCallConfirmResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgBridgeCallConfirmResponse"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgBridgeCallConfirmResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgBridgeCallConfirmResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgBridgeCallConfirmResponse"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgBridgeCallConfirmResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgBridgeCallConfirmResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgBridgeCallConfirmResponse"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgBridgeCallConfirmResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgBridgeCallConfirmResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgBridgeCallConfirmResponse"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgBridgeCallConfirmResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgBridgeCallConfirmResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in fx.gravity.crosschain.v1.MsgBridgeCallConfirmResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgBridgeCallConfirmResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgBridgeCallConfirmResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgBridgeCallConfirmResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgBridgeCallConfirmResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgBridgeCallConfirmResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgBridgeCallConfirmResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgBridgeCallConfirmResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgBridgeCallConfirmResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgBridgeCallConfirmResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgSendToExternal            protoreflect.MessageDescriptor
	fd_MsgSendToExternal_sender     protoreflect.FieldDescriptor
	fd_MsgSendToExternal_dest       protoreflect.FieldDescriptor
	fd_MsgSendToExternal_amount     protoreflect.FieldDescriptor
	fd_MsgSendToExternal_bridge_fee protoreflect.FieldDescriptor
	fd_MsgSendToExternal_chain_name protoreflect.FieldDescriptor
)

func init() {
	file_fx_gravity_crosschain_v1_tx_proto_init()
	md_MsgSendToExternal = File_fx_gravity_crosschain_v1_tx_proto.Messages().ByName("MsgSendToExternal")
	fd_MsgSendToExternal_sender = md_MsgSendToExternal.Fields().ByName("sender")
	fd_MsgSendToExternal_dest = md_MsgSendToExternal.Fields().ByName("dest")
	fd_MsgSendToExternal_amount = md_MsgSendToExternal.Fields().ByName("amount")
	fd_MsgSendToExternal_bridge_fee = md_MsgSendToExternal.Fields().ByName("bridge_fee")
	fd_MsgSendToExternal_chain_name = md_MsgSendToExternal.Fields().ByName("chain_name")
}

var _ protoreflect.Message = (*fastReflection_MsgSendToExternal)(nil)

type fastReflection_MsgSendToExternal MsgSendToExternal

func (x *MsgSendToExternal) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgSendToExternal)(x)
}

func (x *MsgSendToExternal) slowProtoReflect() protoreflect.Message {
	mi := &file_fx_gravity_crosschain_v1_tx_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgSendToExternal_messageType fastReflection_MsgSendToExternal_messageType
var _ protoreflect.MessageType = fastReflection_MsgSendToExternal_messageType{}

type fastReflection_MsgSendToExternal_messageType struct{}

func (x fastReflection_MsgSendToExternal_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgSendToExternal)(nil)
}
func (x fastReflection_MsgSendToExternal_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgSendToExternal)
}
func (x fastReflection_MsgSendToExternal_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgSendToExternal
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgSendToExternal) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgSendToExternal
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgSendToExternal) Type() protoreflect.MessageType {
	return _fastReflection_MsgSendToExternal_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgSendToExternal) New() protoreflect.Message {
	return new(fastReflection_MsgSendToExternal)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgSendToExternal) Interface() protoreflect.ProtoMessage {
	return (*MsgSendToExternal)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgSendToExternal) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Sender != "" {
		value := protoreflect.ValueOfString(x.Sender)
		if !f(fd_MsgSendToExternal_sender, value) {
			return
		}
	}
	if x.Dest != "" {
		value := protoreflect.ValueOfString(x.Dest)
		if !f(fd_MsgSendToExternal_dest, value) {
			return
		}
	}
	if x.Amount != nil {
		value := protoreflect.ValueOfMessage(x.Amount.ProtoReflect())
		if !f(fd_MsgSendToExternal_amount, value) {
			return
		}
	}
	if x.BridgeFee != nil {
		value := protoreflect.ValueOfMessage(x.BridgeFee.ProtoReflect())
		if !f(fd_MsgSendToExternal_bridge_fee, value) {
			return
		}
	}
	if x.ChainName != "" {
		value := protoreflect.ValueOfString(x.ChainName)
		if !f(fd_MsgSendToExternal_chain_name, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgSendToExternal) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "fx.gravity.crosschain.v1.MsgSendToExternal.sender":
		return x.Sender != ""
	case "fx.gravity.crosschain.v1.MsgSendToExternal.dest":
		return x.Dest != ""
	case "fx.gravity.crosschain.v1.MsgSendToExternal.amount":
		return x.Amount != nil
	case "fx.gravity.crosschain.v1.MsgSendToExternal.bridge_fee":
		return x.BridgeFee != nil
	case "fx.gravity.crosschain.v1.MsgSendToExternal.chain_name":
		return x.ChainName != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgSendToExternal"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgSendToExternal does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgSendToExternal) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "fx.gravity.crosschain.v1.MsgSendToExternal.sender":
		x.Sender = ""
	case "fx.gravity.crosschain.v1.MsgSendToExternal.dest":
		x.Dest = ""
	case "fx.gravity.crosschain.v1.MsgSendToExternal.amount":
		x.Amount = nil
	case "fx.gravity.crosschain.v1.MsgSendToExternal.bridge_fee":
		x.BridgeFee = nil
	case "fx.gravity.crosschain.v1.MsgSendToExternal.chain_name":
		x.ChainName = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgSendToExternal"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgSendToExternal does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgSendToExternal) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "fx.gravity.crosschain.v1.MsgSendToExternal.sender":
		value := x.Sender
		return protoreflect.ValueOfString(value)
	case "fx.gravity.crosschain.v1.MsgSendToExternal.dest":
		value := x.Dest
		return protoreflect.ValueOfString(value)
	case "fx.gravity.crosschain.v1.MsgSendToExternal.amount":
		value := x.Amount
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "fx.gravity.crosschain.v1.MsgSendToExternal.bridge_fee":
		value := x.BridgeFee
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "fx.gravity.crosschain.v1.MsgSendToExternal.chain_name":
		value := x.ChainName
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgSendToExternal"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgSendToExternal does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgSendToExternal) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "fx.gravity.crosschain.v1.MsgSendToExternal.sender":
		x.Sender = value.Interface().(string)
	case "fx.gravity.crosschain.v1.MsgSendToExternal.dest":
		x.Dest = value.Interface().(string)
	case "fx.gravity.crosschain.v1.MsgSendToExternal.amount":
		x.Amount = value.Message().Interface().(*v1beta1.Coin)
	case "fx.gravity.crosschain.v1.MsgSendToExternal.bridge_fee":
		x.BridgeFee = value.Message().Interface().(*v1beta1.Coin)
	case "fx.gravity.crosschain.v1.MsgSendToExternal.chain_name":
		x.ChainName = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgSendToExternal"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgSendToExternal does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgSendToExternal) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "fx.gravity.crosschain.v1.MsgSendToExternal.amount":
		if x.Amount == nil {
			x.Amount = new(v1beta1.Coin)
		}
		return protoreflect.ValueOfMessage(x.Amount.ProtoReflect())
	case "fx.gravity.crosschain.v1.MsgSendToExternal.bridge_fee":
		if x.BridgeFee == nil {
			x.BridgeFee = new(v1beta1.Coin)
		}
		return protoreflect.ValueOfMessage(x.BridgeFee.ProtoReflect())
	case "fx.gravity.crosschain.v1.MsgSendToExternal.sender":
		panic(fmt.Errorf("field sender of message fx.gravity.crosschain.v1.MsgSendToExternal is not mutable"))
	case "fx.gravity.crosschain.v1.MsgSendToExternal.dest":
		panic(fmt.Errorf("field dest of message fx.gravity.crosschain.v1.MsgSendToExternal is not mutable"))
	case "fx.gravity.crosschain.v1.MsgSendToExternal.chain_name":
		panic(fmt.Errorf("field chain_name of message fx.gravity.crosschain.v1.MsgSendToExternal is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgSendToExternal"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgSendToExternal does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgSendToExternal) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "fx.gravity.crosschain.v1.MsgSendToExternal.sender":
		return protoreflect.ValueOfString("")
	case "fx.gravity.crosschain.v1.MsgSendToExternal.dest":
		return protoreflect.ValueOfString("")
	case "fx.gravity.crosschain.v1.MsgSendToExternal.amount":
		m := new(v1beta1.Coin)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "fx.gravity.crosschain.v1.MsgSendToExternal.bridge_fee":
		m := new(v1beta1.Coin)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "fx.gravity.crosschain.v1.MsgSendToExternal.chain_name":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgSendToExternal"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgSendToExternal does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgSendToExternal) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in fx.gravity.crosschain.v1.MsgSendToExternal", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgSendToExternal) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgSendToExternal) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgSendToExternal) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgSendToExternal) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgSendToExternal)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Sender)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Dest)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.Amount != nil {
			l = options.Size(x.Amount)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.BridgeFee != nil {
			l = options.Size(x.BridgeFee)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.ChainName)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgSendToExternal)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.ChainName) > 0 {
			i -= len(x.ChainName)
			copy(dAtA[i:], x.ChainName)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ChainName)))
			i--
			dAtA[i] = 0x2a
		}
		if x.BridgeFee != nil {
			encoded, err := options.Marshal(x.BridgeFee)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x22
		}
		if x.Amount != nil {
			encoded, err := options.Marshal(x.Amount)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.Dest) > 0 {
			i -= len(x.Dest)
			copy(dAtA[i:], x.Dest)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Dest)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Sender) > 0 {
			i -= len(x.Sender)
			copy(dAtA[i:], x.Sender)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Sender)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgSendToExternal)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgSendToExternal: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgSendToExternal: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Sender", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Sender = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Dest", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Dest = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Amount", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Amount == nil {
					x.Amount = &v1beta1.Coin{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Amount); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BridgeFee", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.BridgeFee == nil {
					x.BridgeFee = &v1beta1.Coin{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.BridgeFee); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 5:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ChainName", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ChainName = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgSendToExternalResponse             protoreflect.MessageDescriptor
	fd_MsgSendToExternalResponse_batch_nonce protoreflect.FieldDescriptor
)

func init() {
	file_fx_gravity_crosschain_v1_tx_proto_init()
	md_MsgSendToExternalResponse = File_fx_gravity_crosschain_v1_tx_proto.Messages().ByName("MsgSendToExternalResponse")
	fd_MsgSendToExternalResponse_batch_nonce = md_MsgSendToExternalResponse.Fields().ByName("batch_nonce")
}

var _ protoreflect.Message = (*fastReflection_MsgSendToExternalResponse)(nil)

type fastReflection_MsgSendToExternalResponse MsgSendToExternalResponse

func (x *MsgSendToExternalResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgSendToExternalResponse)(x)
}

func (x *MsgSendToExternalResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_fx_gravity_crosschain_v1_tx_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgSendToExternalResponse_messageType fastReflection_MsgSendToExternalResponse_messageType
var _ protoreflect.MessageType = fastReflection_MsgSendToExternalResponse_messageType{}

type fastReflection_MsgSendToExternalResponse_messageType struct{}

func (x fastReflection_MsgSendToExternalResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgSendToExternalResponse)(nil)
}
func (x fastReflection_MsgSendToExternalResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgSendToExternalResponse)
}
func (x fastReflection_MsgSendToExternalResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgSendToExternalResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgSendToExternalResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgSendToExternalResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgSendToExternalResponse) Type() protoreflect.MessageType {
	return _fastReflection_MsgSendToExternalResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgSendToExternalResponse) New() protoreflect.Message {
	return new(fastReflection_MsgSendToExternalResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgSendToExternalResponse) Interface() protoreflect.ProtoMessage {
	return (*MsgSendToExternalResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgSendToExternalResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.BatchNonce != uint64(0) {
		value := protoreflect.ValueOfUint64(x.BatchNonce)
		if !f(fd_MsgSendToExternalResponse_batch_nonce, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgSendToExternalResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "fx.gravity.crosschain.v1.MsgSendToExternalResponse.batch_nonce":
		return x.BatchNonce != uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgSendToExternalResponse"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgSendToExternalResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgSendToExternalResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "fx.gravity.crosschain.v1.MsgSendToExternalResponse.batch_nonce":
		x.BatchNonce = uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgSendToExternalResponse"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgSendToExternalResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgSendToExternalResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "fx.gravity.crosschain.v1.MsgSendToExternalResponse.batch_nonce":
		value := x.BatchNonce
		return protoreflect.ValueOfUint64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgSendToExternalResponse"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgSendToExternalResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgSendToExternalResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "fx.gravity.crosschain.v1.MsgSendToExternalResponse.batch_nonce":
		x.BatchNonce = value.Uint()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgSendToExternalResponse"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgSendToExternalResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgSendToExternalResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "fx.gravity.crosschain.v1.MsgSendToExternalResponse.batch_nonce":
		panic(fmt.Errorf("field batch_nonce of message fx.gravity.crosschain.v1.MsgSendToExternalResponse is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgSendToExternalResponse"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgSendToExternalResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgSendToExternalResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "fx.gravity.crosschain.v1.MsgSendToExternalResponse.batch_nonce":
		return protoreflect.ValueOfUint64(uint64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgSendToExternalResponse"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgSendToExternalResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgSendToExternalResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in fx.gravity.crosschain.v1.MsgSendToExternalResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgSendToExternalResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgSendToExternalResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgSendToExternalResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgSendToExternalResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgSendToExternalResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.BatchNonce != 0 {
			n += 1 + runtime.Sov(uint64(x.BatchNonce))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgSendToExternalResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.BatchNonce != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.BatchNonce))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgSendToExternalResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgSendToExternalResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgSendToExternalResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BatchNonce", wireType)
				}
				x.BatchNonce = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.BatchNonce |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.0
// 	protoc        (unknown)
// source: fx/gravity/crosschain/v1/tx.proto

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MsgBondedOracle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChainName        string        `protobuf:"bytes,1,opt,name=chain_name,json=chainName,proto3" json:"chain_name,omitempty"`
	OracleAddress    string        `protobuf:"bytes,2,opt,name=oracle_address,json=oracleAddress,proto3" json:"oracle_address,omitempty"`
	BridgerAddress   string        `protobuf:"bytes,3,opt,name=bridger_address,json=bridgerAddress,proto3" json:"bridger_address,omitempty"`
	ExternalAddress  string        `protobuf:"bytes,4,opt,name=external_address,json=externalAddress,proto3" json:"external_address,omitempty"`
	ValidatorAddress string        `protobuf:"bytes,5,opt,name=validator_address,json=validatorAddress,proto3" json:"validator_address,omitempty"`
	DelegateAmount   *v1beta1.Coin `protobuf:"bytes,6,opt,name=delegate_amount,json=delegateAmount,proto3" json:"delegate_amount,omitempty"`
}

func (x *MsgBondedOracle) Reset() {
	*x = MsgBondedOracle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fx_gravity_crosschain_v1_tx_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgBondedOracle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgBondedOracle) ProtoMessage() {}

// Deprecated: Use MsgBondedOracle.ProtoReflect.Descriptor instead.
func (*MsgBondedOracle) Descriptor() ([]byte, []int) {
	return file_fx_gravity_crosschain_v1_tx_proto_rawDescGZIP(), []int{0}
}

func (x *MsgBondedOracle) GetChainName() string {
	if x != nil {
		return x.ChainName
	}
	return ""
}

func (x *MsgBondedOracle) GetOracleAddress() string {
	if x != nil {
		return x.OracleAddress
	}
	return ""
}

func (x *MsgBondedOracle) GetBridgerAddress() string {
	if x != nil {
		return x.BridgerAddress
	}
	return ""
}

func (x *MsgBondedOracle) GetExternalAddress() string {
	if x != nil {
		return x.ExternalAddress
	}
	return ""
}

func (x *MsgBondedOracle) GetValidatorAddress() string {
	if x != nil {
		return x.ValidatorAddress
	}
	return ""
}

func (x *MsgBondedOracle) GetDelegateAmount() *v1beta1.Coin {
	if x != nil {
		return x.DelegateAmount
	}
	return nil
}

type MsgBondedOracleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgBondedOracleResponse) Reset() {
	*x = MsgBondedOracleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fx_gravity_crosschain_v1_tx_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgBondedOracleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgBondedOracleResponse) ProtoMessage() {}

// Deprecated: Use MsgBondedOracleResponse.ProtoReflect.Descriptor instead.
func (*MsgBondedOracleResponse) Descriptor() ([]byte, []int) {
	return file_fx_gravity_crosschain_v1_tx_proto_rawDescGZIP(), []int{1}
}

type MsgAddDelegate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChainName     string        `protobuf:"bytes,1,opt,name=chain_name,json=chainName,proto3" json:"chain_name,omitempty"`
	OracleAddress string        `protobuf:"bytes,2,opt,name=oracle_address,json=oracleAddress,proto3" json:"oracle_address,omitempty"`
	Amount        *v1beta1.Coin `protobuf:"bytes,3,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *MsgAddDelegate) Reset() {
	*x = MsgAddDelegate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fx_gravity_crosschain_v1_tx_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgAddDelegate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgAddDelegate) ProtoMessage() {}

// Deprecated: Use MsgAddDelegate.ProtoReflect.Descriptor instead.
func (*MsgAddDelegate) Descriptor() ([]byte, []int) {
	return file_fx_gravity_crosschain_v1_tx_proto_rawDescGZIP(), []int{2}
}

func (x *MsgAddDelegate) GetChainName() string {
	if x != nil {
		return x.ChainName
	}
	return ""
}

func (x *MsgAddDelegate) GetOracleAddress() string {
	if x != nil {
		return x.OracleAddress
	}
	return ""
}

func (x *MsgAddDelegate) GetAmount() *v1beta1.Coin {
	if x != nil {
		return x.Amount
	}
	return nil
}

type MsgAddDelegateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgAddDelegateResponse) Reset() {
	*x = MsgAddDelegateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fx_gravity_crosschain_v1_tx_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgAddDelegateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgAddDelegateResponse) ProtoMessage() {}

// Deprecated: Use MsgAddDelegateResponse.ProtoReflect.Descriptor instead.
func (*MsgAddDelegateResponse) Descriptor() ([]byte, []int) {
	return file_fx_gravity_crosschain_v1_tx_proto_rawDescGZIP(), []int{3}
}

type MsgReDelegate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChainName        string `protobuf:"bytes,1,opt,name=chain_name,json=chainName,proto3" json:"chain_name,omitempty"`
	OracleAddress    string `protobuf:"bytes,2,opt,name=oracle_address,json=oracleAddress,proto3" json:"oracle_address,omitempty"`
	ValidatorAddress string `protobuf:"bytes,3,opt,name=validator_address,json=validatorAddress,proto3" json:"validator_address,omitempty"`
}

func (x *MsgReDelegate) Reset() {
	*x = MsgReDelegate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fx_gravity_crosschain_v1_tx_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgReDelegate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgReDelegate) ProtoMessage() {}

// Deprecated: Use MsgReDelegate.ProtoReflect.Descriptor instead.
func (*MsgReDelegate) Descriptor() ([]byte, []int) {
	return file_fx_gravity_crosschain_v1_tx_proto_rawDescGZIP(), []int{4}
}

func (x *MsgReDelegate) GetChainName() string {
	if x != nil {
		return x.ChainName
	}
	return ""
}

func (x *MsgReDelegate) GetOracleAddress() string {
	if x != nil {
		return x.OracleAddress
	}
	return ""
}

func (x *MsgReDelegate) GetValidatorAddress() string {
	if x != nil {
		return x.ValidatorAddress
	}
	return ""
}

type MsgReDelegateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgReDelegateResponse) Reset() {
	*x = MsgReDelegateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fx_gravity_crosschain_v1_tx_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgReDelegateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgReDelegateResponse) ProtoMessage() {}

// Deprecated: Use MsgReDelegateResponse.ProtoReflect.Descriptor instead.
func (*MsgReDelegateResponse) Descriptor() ([]byte, []int) {
	return file_fx_gravity_crosschain_v1_tx_proto_rawDescGZIP(), []int{5}
}

type MsgEditBridger struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChainName      string `protobuf:"bytes,1,opt,name=chain_name,json=chainName,proto3" json:"chain_name,omitempty"`
	OracleAddress  string `protobuf:"bytes,2,opt,name=oracle_address,json=oracleAddress,proto3" json:"oracle_address,omitempty"`
	BridgerAddress string `protobuf:"bytes,3,opt,name=bridger_address,json=bridgerAddress,proto3" json:"bridger_address,omitempty"`
}

func (x *MsgEditBridger) Reset() {
	*x = MsgEditBridger{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fx_gravity_crosschain_v1_tx_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgEditBridger) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgEditBridger) ProtoMessage() {}

// Deprecated: Use MsgEditBridger.ProtoReflect.Descriptor instead.
func (*MsgEditBridger) Descriptor() ([]byte, []int) {
	return file_fx_gravity_crosschain_v1_tx_proto_rawDescGZIP(), []int{6}
}

func (x *MsgEditBridger) GetChainName() string {
	if x != nil {
		return x.ChainName
	}
	return ""
}

func (x *MsgEditBridger) GetOracleAddress() string {
	if x != nil {
		return x.OracleAddress
	}
	return ""
}

func (x *MsgEditBridger) GetBridgerAddress() string {
	if x != nil {
		return x.BridgerAddress
	}
	return ""
}

type MsgEditBridgerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgEditBridgerResponse) Reset() {
	*x = MsgEditBridgerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fx_gravity_crosschain_v1_tx_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgEditBridgerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgEditBridgerResponse) ProtoMessage() {}

// Deprecated: Use MsgEditBridgerResponse.ProtoReflect.Descriptor instead.
func (*MsgEditBridgerResponse) Descriptor() ([]byte, []int) {
	return file_fx_gravity_crosschain_v1_tx_proto_rawDescGZIP(), []int{7}
}

type MsgUnbondedOracle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChainName     string `protobuf:"bytes,1,opt,name=chain_name,json=chainName,proto3" json:"chain_name,omitempty"`
	OracleAddress string `protobuf:"bytes,2,opt,name=oracle_address,json=oracleAddress,proto3" json:"oracle_address,omitempty"`
}

func (x *MsgUnbondedOracle) Reset() {
	*x = MsgUnbondedOracle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fx_gravity_crosschain_v1_tx_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgUnbondedOracle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgUnbondedOracle) ProtoMessage() {}

// Deprecated: Use MsgUnbondedOracle.ProtoReflect.Descriptor instead.
func (*MsgUnbondedOracle) Descriptor() ([]byte, []int) {
	return file_fx_gravity_crosschain_v1_tx_proto_rawDescGZIP(), []int{8}
}

func (x *MsgUnbondedOracle) GetChainName() string {
	if x != nil {
		return x.ChainName
	}
	return ""
}

func (x *MsgUnbondedOracle) GetOracleAddress() string {
	if x != nil {
		return x.OracleAddress
	}
	return ""
}

type MsgUnbondedOracleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgUnbondedOracleResponse) Reset() {
	*x = MsgUnbondedOracleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fx_gravity_crosschain_v1_tx_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgUnbondedOracleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgUnbondedOracleResponse) ProtoMessage() {}

// Deprecated: Use MsgUnbondedOracleResponse.ProtoReflect.Descriptor instead.
func (*MsgUnbondedOracleResponse) Descriptor() ([]byte, []int) {
	return file_fx_gravity_crosschain_v1_tx_proto_rawDescGZIP(), []int{9}
}

type MsgWithdrawReward struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChainName     string `protobuf:"bytes,1,opt,name=chain_name,json=chainName,proto3" json:"chain_name,omitempty"`
	OracleAddress string `protobuf:"bytes,2,opt,name=oracle_address,json=oracleAddress,proto3" json:"oracle_address,omitempty"`
}

func (x *MsgWithdrawReward) Reset() {
	*x = MsgWithdrawReward{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fx_gravity_crosschain_v1_tx_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgWithdrawReward) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgWithdrawReward) ProtoMessage() {}

// Deprecated: Use MsgWithdrawReward.ProtoReflect.Descriptor instead.
func (*MsgWithdrawReward) Descriptor() ([]byte, []int) {
	return file_fx_gravity_crosschain_v1_tx_proto_rawDescGZIP(), []int{10}
}

func (x *MsgWithdrawReward) GetChainName() string {
	if x != nil {
		return x.ChainName
	}
	return ""
}

func (x *MsgWithdrawReward) GetOracleAddress() string {
	if x != nil {
		return x.OracleAddress
	}
	return ""
}

type MsgWithdrawRewardResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgWithdrawRewardResponse) Reset() {
	*x = MsgWithdrawRewardResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fx_gravity_crosschain_v1_tx_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgWithdrawRewardResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgWithdrawRewardResponse) ProtoMessage() {}

// Deprecated: Use MsgWithdrawRewardResponse.ProtoReflect.Descriptor instead.
func (*MsgWithdrawRewardResponse) Descriptor() ([]byte, []int) {
	return file_fx_gravity_crosschain_v1_tx_proto_rawDescGZIP(), []int{11}
}

type MsgOracleSetConfirm struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nonce           uint64 `protobuf:"varint,1,opt,name=nonce,proto3" json:"nonce,omitempty"`
	BridgerAddress  string `protobuf:"bytes,2,opt,name=bridger_address,json=bridgerAddress,proto3" json:"bridger_address,omitempty"`
	ExternalAddress string `protobuf:"bytes,3,opt,name=external_address,json=externalAddress,proto3" json:"external_address,omitempty"`
	Signature       string `protobuf:"bytes,4,opt,name=signature,proto3" json:"signature,omitempty"`
	ChainName       string `protobuf:"bytes,5,opt,name=chain_name,json=chainName,proto3" json:"chain_name,omitempty"`
}

func (x *MsgOracleSetConfirm) Reset() {
	*x = MsgOracleSetConfirm{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fx_gravity_crosschain_v1_tx_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgOracleSetConfirm) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgOracleSetConfirm) ProtoMessage() {}

// Deprecated: Use MsgOracleSetConfirm.ProtoReflect.Descriptor instead.
func (*MsgOracleSetConfirm) Descriptor() ([]byte, []int) {
	return file_fx_gravity_crosschain_v1_tx_proto_rawDescGZIP(), []int{12}
}

func (x *MsgOracleSetConfirm) GetNonce() uint64 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *MsgOracleSetConfirm) GetBridgerAddress() string {
	if x != nil {
		return x.BridgerAddress
	}
	return ""
}

func (x *MsgOracleSetConfirm) GetExternalAddress() string {
	if x != nil {
		return x.ExternalAddress
	}
	return ""
}

func (x *MsgOracleSetConfirm) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *MsgOracleSetConfirm) GetChainName() string {
	if x != nil {
		return x.ChainName
	}
	return ""
}

type MsgOracleSetUpdatedClaim struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventNonce     uint64             `protobuf:"varint,1,opt,name=event_nonce,json=eventNonce,proto3" json:"event_nonce,omitempty"`
	BlockHeight    uint64             `protobuf:"varint,2,opt,name=block_height,json=blockHeight,proto3" json:"block_height,omitempty"`
	OracleSetNonce uint64             `protobuf:"varint,3,opt,name=oracle_set_nonce,json=oracleSetNonce,proto3" json:"oracle_set_nonce,omitempty"`
	Members        []*BridgeValidator `protobuf:"bytes,4,rep,name=members,proto3" json:"members,omitempty"`
	BridgerAddress string             `protobuf:"bytes,6,opt,name=bridger_address,json=bridgerAddress,proto3" json:"bridger_address,omitempty"`
	ChainName      string             `protobuf:"bytes,7,opt,name=chain_name,json=chainName,proto3" json:"chain_name,omitempty"`
}

func (x *MsgOracleSetUpdatedClaim) Reset() {
	*x = MsgOracleSetUpdatedClaim{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fx_gravity_crosschain_v1_tx_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgOracleSetUpdatedClaim) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgOracleSetUpdatedClaim) ProtoMessage() {}

// Deprecated: Use MsgOracleSetUpdatedClaim.ProtoReflect.Descriptor instead.
func (*MsgOracleSetUpdatedClaim) Descriptor() ([]byte, []int) {
	return file_fx_gravity_crosschain_v1_tx_proto_rawDescGZIP(), []int{13}
}

func (x *MsgOracleSetUpdatedClaim) GetEventNonce() uint64 {
	if x != nil {
		return x.EventNonce
	}
	return 0
}

func (x *MsgOracleSetUpdatedClaim) GetBlockHeight() uint64 {
	if x != nil {
		return x.BlockHeight
	}
	return 0
}

func (x *MsgOracleSetUpdatedClaim) GetOracleSetNonce() uint64 {
	if x != nil {
		return x.OracleSetNonce
	}
	return 0
}

func (x *MsgOracleSetUpdatedClaim) GetMembers() []*BridgeValidator {
	if x != nil {
		return x.Members
	}
	return nil
}

func (x *MsgOracleSetUpdatedClaim) GetBridgerAddress() string {
	if x != nil {
		return x.BridgerAddress
	}
	return ""
}

func (x *MsgOracleSetUpdatedClaim) GetChainName() string {
	if x != nil {
		return x.ChainName
	}
	return ""
}

type MsgSendToFxClaim struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventNonce     uint64 `protobuf:"varint,1,opt,name=event_nonce,json=eventNonce,proto3" json:"event_nonce,omitempty"`
	BlockHeight    uint64 `protobuf:"varint,2,opt,name=block_height,json=blockHeight,proto3" json:"block_height,omitempty"`
	TokenContract  string `protobuf:"bytes,3,opt,name=token_contract,json=tokenContract,proto3" json:"token_contract,omitempty"`
	Amount         string `protobuf:"bytes,4,opt,name=amount,proto3" json:"amount,omitempty"`
	Sender         string `protobuf:"bytes,5,opt,name=sender,proto3" json:"sender,omitempty"`
	Receiver       string `protobuf:"bytes,6,opt,name=receiver,proto3" json:"receiver,omitempty"`
	TargetIbc      string `protobuf:"bytes,7,opt,name=target_ibc,json=targetIbc,proto3" json:"target_ibc,omitempty"`
	BridgerAddress string `protobuf:"bytes,8,opt,name=bridger_address,json=bridgerAddress,proto3" json:"bridger_address,omitempty"`
	ChainName      string `protobuf:"bytes,9,opt,name=chain_name,json=chainName,proto3" json:"chain_name,omitempty"`
}

func (x *MsgSendToFxClaim) Reset() {
	*x = MsgSendToFxClaim{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fx_gravity_crosschain_v1_tx_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgSendToFxClaim) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgSendToFxClaim) ProtoMessage() {}

// Deprecated: Use MsgSendToFxClaim.ProtoReflect.Descriptor instead.
func (*MsgSendToFxClaim) Descriptor() ([]byte, []int) {
	return file_fx_gravity_crosschain_v1_tx_proto_rawDescGZIP(), []int{14}
}

func (x *MsgSendToFxClaim) GetEventNonce() uint64 {
	if x != nil {
		return x.EventNonce
	}
	return 0
}

func (x *MsgSendToFxClaim) GetBlockHeight() uint64 {
	if x != nil {
		return x.BlockHeight
	}
	return 0
}

func (x *MsgSendToFxClaim) GetTokenContract() string {
	if x != nil {
		return x.TokenContract
	}
	return ""
}

func (x *MsgSendToFxClaim) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *MsgSendToFxClaim) GetSender() string {
	if x != nil {
		return x.Sender
	}
	return ""
}

func (x *MsgSendToFxClaim) GetReceiver() string {
	if x != nil {
		return x.Receiver
	}
	return ""
}

func (x *MsgSendToFxClaim) GetTargetIbc() string {
	if x != nil {
		return x.TargetIbc
	}
	return ""
}

func (x *MsgSendToFxClaim) GetBridgerAddress() string {
	if x != nil {
		return x.BridgerAddress
	}
	return ""
}

func (x *MsgSendToFxClaim) GetChainName() string {
	if x != nil {
		return x.ChainName
	}
	return ""
}

type MsgBridgeCallClaim struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChainName      string   `protobuf:"bytes,1,opt,name=chain_name,json=chainName,proto3" json:"chain_name,omitempty"`
	BridgerAddress string   `protobuf:"bytes,2,opt,name=bridger_address,json=bridgerAddress,proto3" json:"bridger_address,omitempty"`
	EventNonce     uint64   `protobuf:"varint,3,opt,name=event_nonce,json=eventNonce,proto3" json:"event_nonce,omitempty"`
	BlockHeight    uint64   `protobuf:"varint,4,opt,name=block_height,json=blockHeight,proto3" json:"block_height,omitempty"`
	Sender         string   `protobuf:"bytes,5,opt,name=sender,proto3" json:"sender,omitempty"`
	Refund         string   `protobuf:"bytes,6,opt,name=refund,proto3" json:"refund,omitempty"`
	TokenContracts []string `protobuf:"bytes,7,rep,name=token_contracts,json=tokenContracts,proto3" json:"token_contracts,omitempty"`
	Amounts        []string `protobuf:"bytes,8,rep,name=amounts,proto3" json:"amounts,omitempty"`
	To             string   `protobuf:"bytes,9,opt,name=to,proto3" json:"to,omitempty"`
	Data           string   `protobuf:"bytes,10,opt,name=data,proto3" json:"data,omitempty"`
	QuoteId        string   `protobuf:"bytes,11,opt,name=quote_id,json=quoteId,proto3" json:"quote_id,omitempty"`
	GasLimit       string   `protobuf:"bytes,12,opt,name=gas_limit,json=gasLimit,proto3" json:"gas_limit,omitempty"`
	Memo           string   `protobuf:"bytes,13,opt,name=memo,proto3" json:"memo,omitempty"`
	TxOrigin       string   `protobuf:"bytes,14,opt,name=tx_origin,json=txOrigin,proto3" json:"tx_origin,omitempty"`
}

func (x *MsgBridgeCallClaim) Reset() {
	*x = MsgBridgeCallClaim{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fx_gravity_crosschain_v1_tx_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgBridgeCallClaim) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgBridgeCallClaim) ProtoMessage() {}

// Deprecated: Use MsgBridgeCallClaim.ProtoReflect.Descriptor instead.
func (*MsgBridgeCallClaim) Descriptor() ([]byte, []int) {
	return file_fx_gravity_crosschain_v1_tx_proto_rawDescGZIP(), []int{15}
}

func (x *MsgBridgeCallClaim) GetChainName() string {
	if x != nil {
		return x.ChainName
	}
	return ""
}

func (x *MsgBridgeCallClaim) GetBridgerAddress() string {
	if x != nil {
		return x.BridgerAddress
	}
	return ""
}

func (x *MsgBridgeCallClaim) GetEventNonce() uint64 {
	if x != nil {
		return x.EventNonce
	}
	return 0
}

func (x *MsgBridgeCallClaim) GetBlockHeight() uint64 {
	if x != nil {
		return x.BlockHeight
	}
	return 0
}

func (x *MsgBridgeCallClaim) GetSender() string {
	if x != nil {
		return x.Sender
	}
	return ""
}

func (x *MsgBridgeCallClaim) GetRefund() string {
	if x != nil {
		return x.Refund
	}
	return ""
}

func (x *MsgBridgeCallClaim) GetTokenContracts() []string {
	if x != nil {
		return x.TokenContracts
	}
	return nil
}

func (x *MsgBridgeCallClaim) GetAmounts() []string {
	if x != nil {
		return x.Amounts
	}
	return nil
}

func (x *MsgBridgeCallClaim) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *MsgBridgeCallClaim) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

func (x *MsgBridgeCallClaim) GetQuoteId() string {
	if x != nil {
		return x.QuoteId
	}
	return ""
}

func (x *MsgBridgeCallClaim) GetGasLimit() string {
	if x != nil {
		return x.GasLimit
	}
	return ""
}

func (x *MsgBridgeCallClaim) GetMemo() string {
	if x != nil {
		return x.Memo
	}
	return ""
}

func (x *MsgBridgeCallClaim) GetTxOrigin() string {
	if x != nil {
		return x.TxOrigin
	}
	return ""
}

type MsgBridgeCallResultClaim struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChainName      string `protobuf:"bytes,1,opt,name=chain_name,json=chainName,proto3" json:"chain_name,omitempty"`
	BridgerAddress string `protobuf:"bytes,2,opt,name=bridger_address,json=bridgerAddress,proto3" json:"bridger_address,omitempty"`
	EventNonce     uint64 `protobuf:"varint,3,opt,name=event_nonce,json=eventNonce,proto3" json:"event_nonce,omitempty"`
	BlockHeight    uint64 `protobuf:"varint,4,opt,name=block_height,json=blockHeight,proto3" json:"block_height,omitempty"`
	Nonce          uint64 `protobuf:"varint,5,opt,name=nonce,proto3" json:"nonce,omitempty"`
	TxOrigin       string `protobuf:"bytes,6,opt,name=tx_origin,json=txOrigin,proto3" json:"tx_origin,omitempty"`
	Success        bool   `protobuf:"varint,7,opt,name=success,proto3" json:"success,omitempty"`
	Cause          string `protobuf:"bytes,8,opt,name=cause,proto3" json:"cause,omitempty"`
}

func (x *MsgBridgeCallResultClaim) Reset() {
	*x = MsgBridgeCallResultClaim{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fx_gravity_crosschain_v1_tx_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgBridgeCallResultClaim) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgBridgeCallResultClaim) ProtoMessage() {}

// Deprecated: Use MsgBridgeCallResultClaim.ProtoReflect.Descriptor instead.
func (*MsgBridgeCallResultClaim) Descriptor() ([]byte, []int) {
	return file_fx_gravity_crosschain_v1_tx_proto_rawDescGZIP(), []int{16}
}

func (x *MsgBridgeCallResultClaim) GetChainName() string {
	if x != nil {
		return x.ChainName
	}
	return ""
}

func (x *MsgBridgeCallResultClaim) GetBridgerAddress() string {
	if x != nil {
		return x.BridgerAddress
	}
	return ""
}

func (x *MsgBridgeCallResultClaim) GetEventNonce() uint64 {
	if x != nil {
		return x.EventNonce
	}
	return 0
}

func (x *MsgBridgeCallResultClaim) GetBlockHeight() uint64 {
	if x != nil {
		return x.BlockHeight
	}
	return 0
}

func (x *MsgBridgeCallResultClaim) GetNonce() uint64 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *MsgBridgeCallResultClaim) GetTxOrigin() string {
	if x != nil {
		return x.TxOrigin
	}
	return ""
}

func (x *MsgBridgeCallResultClaim) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *MsgBridgeCallResultClaim) GetCause() string {
	if x != nil {
		return x.Cause
	}
	return ""
}

type MsgConfirmBatch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nonce           uint64 `protobuf:"varint,1,opt,name=nonce,proto3" json:"nonce,omitempty"`
	TokenContract   string `protobuf:"bytes,2,opt,name=token_contract,json=tokenContract,proto3" json:"token_contract,omitempty"`
	BridgerAddress  string `protobuf:"bytes,3,opt,name=bridger_address,json=bridgerAddress,proto3" json:"bridger_address,omitempty"`
	ExternalAddress string `protobuf:"bytes,4,opt,name=external_address,json=externalAddress,proto3" json:"external_address,omitempty"`
	Signature       string `protobuf:"bytes,5,opt,name=signature,proto3" json:"signature,omitempty"`
	ChainName       string `protobuf:"bytes,6,opt,name=chain_name,json=chainName,proto3" json:"chain_name,omitempty"`
}

func (x *MsgConfirmBatch) Reset() {
	*x = MsgConfirmBatch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fx_gravity_crosschain_v1_tx_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgConfirmBatch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgConfirmBatch) ProtoMessage() {}

// Deprecated: Use MsgConfirmBatch.ProtoReflect.Descriptor instead.
func (*MsgConfirmBatch) Descriptor() ([]byte, []int) {
	return file_fx_gravity_crosschain_v1_tx_proto_rawDescGZIP(), []int{17}
}

func (x *MsgConfirmBatch) GetNonce() uint64 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *MsgConfirmBatch) GetTokenContract() string {
	if x != nil {
		return x.TokenContract
	}
	return ""
}

func (x *MsgConfirmBatch) GetBridgerAddress() string {
	if x != nil {
		return x.BridgerAddress
	}
	return ""
}

func (x *MsgConfirmBatch) GetExternalAddress() string {
	if x != nil {
		return x.ExternalAddress
	}
	return ""
}

func (x *MsgConfirmBatch) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *MsgConfirmBatch) GetChainName() string {
	if x != nil {
		return x.ChainName
	}
	return ""
}

type MsgSendToExternalClaim struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventNonce     uint64 `protobuf:"varint,1,opt,name=event_nonce,json=eventNonce,proto3" json:"event_nonce,omitempty"`
	BlockHeight    uint64 `protobuf:"varint,2,opt,name=block_height,json=blockHeight,proto3" json:"block_height,omitempty"`
	BatchNonce     uint64 `protobuf:"varint,3,opt,name=batch_nonce,json=batchNonce,proto3" json:"batch_nonce,omitempty"`
	TokenContract  string `protobuf:"bytes,4,opt,name=token_contract,json=tokenContract,proto3" json:"token_contract,omitempty"`
	BridgerAddress string `protobuf:"bytes,5,opt,name=bridger_address,json=bridgerAddress,proto3" json:"bridger_address,omitempty"`
	ChainName      string `protobuf:"bytes,6,opt,name=chain_name,json=chainName,proto3" json:"chain_name,omitempty"`
}

func (x *MsgSendToExternalClaim) Reset() {
	*x = MsgSendToExternalClaim{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fx_gravity_crosschain_v1_tx_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgSendToExternalClaim) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgSendToExternalClaim) ProtoMessage() {}

// Deprecated: Use MsgSendToExternalClaim.ProtoReflect.Descriptor instead.
func (*MsgSendToExternalClaim) Descriptor() ([]byte, []int) {
	return file_fx_gravity_crosschain_v1_tx_proto_rawDescGZIP(), []int{18}
}

func (x *MsgSendToExternalClaim) GetEventNonce() uint64 {
	if x != nil {
		return x.EventNonce
	}
	return 0
}

func (x *MsgSendToExternalClaim) GetBlockHeight() uint64 {
	if x != nil {
		return x.BlockHeight
	}
	return 0
}

func (x *MsgSendToExternalClaim) GetBatchNonce() uint64 {
	if x != nil {
		return x.BatchNonce
	}
	return 0
}

func (x *MsgSendToExternalClaim) GetTokenContract() string {
	if x != nil {
		return x.TokenContract
	}
	return ""
}

func (x *MsgSendToExternalClaim) GetBridgerAddress() string {
	if x != nil {
		return x.BridgerAddress
	}
	return ""
}

func (x *MsgSendToExternalClaim) GetChainName() string {
	if x != nil {
		return x.ChainName
	}
	return ""
}

type MsgBridgeTokenClaim struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventNonce     uint64 `protobuf:"varint,1,opt,name=event_nonce,json=eventNonce,proto3" json:"event_nonce,omitempty"`
	BlockHeight    uint64 `protobuf:"varint,2,opt,name=block_height,json=blockHeight,proto3" json:"block_height,omitempty"`
	TokenContract  string `protobuf:"bytes,3,opt,name=token_contract,json=tokenContract,proto3" json:"token_contract,omitempty"`
	Name           string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Symbol         string `protobuf:"bytes,5,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Decimals       uint64 `protobuf:"varint,6,opt,name=decimals,proto3" json:"decimals,omitempty"`
	BridgerAddress string `protobuf:"bytes,7,opt,name=bridger_address,json=bridgerAddress,proto3" json:"bridger_address,omitempty"`
	Memo           string `protobuf:"bytes,8,opt,name=memo,proto3" json:"memo,omitempty"`
	ChainName      string `protobuf:"bytes,9,opt,name=chain_name,json=chainName,proto3" json:"chain_name,omitempty"`
}

func (x *MsgBridgeTokenClaim) Reset() {
	*x = MsgBridgeTokenClaim{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fx_gravity_crosschain_v1_tx_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgBridgeTokenClaim) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgBridgeTokenClaim) ProtoMessage() {}

// Deprecated: Use MsgBridgeTokenClaim.ProtoReflect.Descriptor instead.
func (*MsgBridgeTokenClaim) Descriptor() ([]byte, []int) {
	return file_fx_gravity_crosschain_v1_tx_proto_rawDescGZIP(), []int{19}
}

func (x *MsgBridgeTokenClaim) GetEventNonce() uint64 {
	if x != nil {
		return x.EventNonce
	}
	return 0
}

func (x *MsgBridgeTokenClaim) GetBlockHeight() uint64 {
	if x != nil {
		return x.BlockHeight
	}
	return 0
}

func (x *MsgBridgeTokenClaim) GetTokenContract() string {
	if x != nil {
		return x.TokenContract
	}
	return ""
}

func (x *MsgBridgeTokenClaim) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MsgBridgeTokenClaim) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *MsgBridgeTokenClaim) GetDecimals() uint64 {
	if x != nil {
		return x.Decimals
	}
	return 0
}

func (x *MsgBridgeTokenClaim) GetBridgerAddress() string {
	if x != nil {
		return x.BridgerAddress
	}
	return ""
}

func (x *MsgBridgeTokenClaim) GetMemo() string {
	if x != nil {
		return x.Memo
	}
	return ""
}

func (x *MsgBridgeTokenClaim) GetChainName() string {
	if x != nil {
		return x.ChainName
	}
	return ""
}

type MsgBridgeCallConfirm struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChainName       string `protobuf:"bytes,1,opt,name=chain_name,json=chainName,proto3" json:"chain_name,omitempty"`
	BridgerAddress  string `protobuf:"bytes,2,opt,name=bridger_address,json=bridgerAddress,proto3" json:"bridger_address,omitempty"`
	ExternalAddress string `protobuf:"bytes,3,opt,name=external_address,json=externalAddress,proto3" json:"external_address,omitempty"`
	Nonce           uint64 `protobuf:"varint,4,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Signature       string `protobuf:"bytes,5,opt,name=signature,proto3" json:"signature,omitempty"`
}

func (x *MsgBridgeCallConfirm) Reset() {
	*x = MsgBridgeCallConfirm{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fx_gravity_crosschain_v1_tx_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgBridgeCallConfirm) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgBridgeCallConfirm) ProtoMessage() {}

// Deprecated: Use MsgBridgeCallConfirm.ProtoReflect.Descriptor instead.
func (*MsgBridgeCallConfirm) Descriptor() ([]byte, []int) {
	return file_fx_gravity_crosschain_v1_tx_proto_rawDescGZIP(), []int{20}
}

func (x *MsgBridgeCallConfirm) GetChainName() string {
	if x != nil {
		return x.ChainName
	}
	return ""
}

func (x *MsgBridgeCallConfirm) GetBridgerAddress() string {
	if x != nil {
		return x.BridgerAddress
	}
	return ""
}

func (x *MsgBridgeCallConfirm) GetExternalAddress() string {
	if x != nil {
		return x.ExternalAddress
	}
	return ""
}

func (x *MsgBridgeCallConfirm) GetNonce() uint64 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *MsgBridgeCallConfirm) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

type MsgUpdateParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChainName string `protobuf:"bytes,1,opt,name=chain_name,json=chainName,proto3" json:"chain_name,omitempty"`
	// authority is the address of the governance account.
	Authority string `protobuf:"bytes,2,opt,name=authority,proto3" json:"authority,omitempty"`
	// params defines the x/crosschain parameters to update.
	//
	// NOTE: All parameters must be supplied.
	Params *Params `protobuf:"bytes,3,opt,name=params,proto3" json:"params,omitempty"`
}

func (x *MsgUpdateParams) Reset() {
	*x = MsgUpdateParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fx_gravity_crosschain_v1_tx_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgUpdateParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgUpdateParams) ProtoMessage() {}

// Deprecated: Use MsgUpdateParams.ProtoReflect.Descriptor instead.
func (*MsgUpdateParams) Descriptor() ([]byte, []int) {
	return file_fx_gravity_crosschain_v1_tx_proto_rawDescGZIP(), []int{21}
}

func (x *MsgUpdateParams) GetChainName() string {
	if x != nil {
		return x.ChainName
	}
	return ""
}

func (x *MsgUpdateParams) GetAuthority() string {
	if x != nil {
		return x.Authority
	}
	return ""
}

func (x *MsgUpdateParams) GetParams() *Params {
	if x != nil {
		return x.Params
	}
	return nil
}

type MsgUpdateParamsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgUpdateParamsResponse) Reset() {
	*x = MsgUpdateParamsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fx_gravity_crosschain_v1_tx_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgUpdateParamsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgUpdateParamsResponse) ProtoMessage() {}

// Deprecated: Use MsgUpdateParamsResponse.ProtoReflect.Descriptor instead.
func (*MsgUpdateParamsResponse) Descriptor() ([]byte, []int) {
	return file_fx_gravity_crosschain_v1_tx_proto_rawDescGZIP(), []int{22}
}

type MsgUpdateChainOracles struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChainName string `protobuf:"bytes,1,opt,name=chain_name,json=chainName,proto3" json:"chain_name,omitempty"`
	// authority is the address of the governance account.
	Authority string   `protobuf:"bytes,2,opt,name=authority,proto3" json:"authority,omitempty"`
	Oracles   []string `protobuf:"bytes,3,rep,name=oracles,proto3" json:"oracles,omitempty"`
}

func (x *MsgUpdateChainOracles) Reset() {
	*x = MsgUpdateChainOracles{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fx_gravity_crosschain_v1_tx_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgUpdateChainOracles) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgUpdateChainOracles) ProtoMessage() {}

// Deprecated: Use MsgUpdateChainOracles.ProtoReflect.Descriptor instead.
func (*MsgUpdateChainOracles) Descriptor() ([]byte, []int) {
	return file_fx_gravity_crosschain_v1_tx_proto_rawDescGZIP(), []int{23}
}

func (x *MsgUpdateChainOracles) GetChainName() string {
	if x != nil {
		return x.ChainName
	}
	return ""
}

func (x *MsgUpdateChainOracles) GetAuthority() string {
	if x != nil {
		return x.Authority
	}
	return ""
}

func (x *MsgUpdateChainOracles) GetOracles() []string {
	if x != nil {
		return x.Oracles
	}
	return nil
}

type MsgUpdateChainOraclesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgUpdateChainOraclesResponse) Reset() {
	*x = MsgUpdateChainOraclesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fx_gravity_crosschain_v1_tx_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgUpdateChainOraclesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgUpdateChainOraclesResponse) ProtoMessage() {}

// Deprecated: Use MsgUpdateChainOraclesResponse.ProtoReflect.Descriptor instead.
func (*MsgUpdateChainOraclesResponse) Descriptor() ([]byte, []int) {
	return file_fx_gravity_crosschain_v1_tx_proto_rawDescGZIP(), []int{24}
}

type MsgClaim struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChainName      string     `protobuf:"bytes,1,opt,name=chain_name,json=chainName,proto3" json:"chain_name,omitempty"`
	BridgerAddress string     `protobuf:"bytes,2,opt,name=bridger_address,json=bridgerAddress,proto3" json:"bridger_address,omitempty"`
	Claim          *anypb.Any `protobuf:"bytes,3,opt,name=claim,proto3" json:"claim,omitempty"`
}

func (x *MsgClaim) Reset() {
	*x = MsgClaim{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fx_gravity_crosschain_v1_tx_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgClaim) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgClaim) ProtoMessage() {}

// Deprecated: Use MsgClaim.ProtoReflect.Descriptor instead.
func (*MsgClaim) Descriptor() ([]byte, []int) {
	return file_fx_gravity_crosschain_v1_tx_proto_rawDescGZIP(), []int{25}
}

func (x *MsgClaim) GetChainName() string {
	if x != nil {
		return x.ChainName
	}
	return ""
}

func (x *MsgClaim) GetBridgerAddress() string {
	if x != nil {
		return x.BridgerAddress
	}
	return ""
}

func (x *MsgClaim) GetClaim() *anypb.Any {
	if x != nil {
		return x.Claim
	}
	return nil
}

type MsgClaimResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgClaimResponse) Reset() {
	*x = MsgClaimResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fx_gravity_crosschain_v1_tx_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgClaimResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgClaimResponse) ProtoMessage() {}

// Deprecated: Use MsgClaimResponse.ProtoReflect.Descriptor instead.
func (*MsgClaimResponse) Descriptor() ([]byte, []int) {
	return file_fx_gravity_crosschain_v1_tx_proto_rawDescGZIP(), []int{26}
}

type MsgConfirm struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChainName      string     `protobuf:"bytes,1,opt,name=chain_name,json=chainName,proto3" json:"chain_name,omitempty"`
	BridgerAddress string     `protobuf:"bytes,2,opt,name=bridger_address,json=bridgerAddress,proto3" json:"bridger_address,omitempty"`
	Confirm        *anypb.Any `protobuf:"bytes,3,opt,name=confirm,proto3" json:"confirm,omitempty"`
}

func (x *MsgConfirm) Reset() {
	*x = MsgConfirm{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fx_gravity_crosschain_v1_tx_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgConfirm) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgConfirm) ProtoMessage() {}

// Deprecated: Use MsgConfirm.ProtoReflect.Descriptor instead.
func (*MsgConfirm) Descriptor() ([]byte, []int) {
	return file_fx_gravity_crosschain_v1_tx_proto_rawDescGZIP(), []int{27}
}

func (x *MsgConfirm) GetChainName() string {
	if x != nil {
		return x.ChainName
	}
	return ""
}

func (x *MsgConfirm) GetBridgerAddress() string {
	if x != nil {
		return x.BridgerAddress
	}
	return ""
}

func (x *MsgConfirm) GetConfirm() *anypb.Any {
	if x != nil {
		return x.Confirm
	}
	return nil
}

type MsgConfirmResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgConfirmResponse) Reset() {
	*x = MsgConfirmResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fx_gravity_crosschain_v1_tx_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgConfirmResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgConfirmResponse) ProtoMessage() {}

// Deprecated: Use MsgConfirmResponse.ProtoReflect.Descriptor instead.
func (*MsgConfirmResponse) Descriptor() ([]byte, []int) {
	return file_fx_gravity_crosschain_v1_tx_proto_rawDescGZIP(), []int{28}
}

// Deprecated: Do not use.
type MsgOracleSetConfirmResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgOracleSetConfirmResponse) Reset() {
	*x = MsgOracleSetConfirmResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fx_gravity_crosschain_v1_tx_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgOracleSetConfirmResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgOracleSetConfirmResponse) ProtoMessage() {}

// Deprecated: Use MsgOracleSetConfirmResponse.ProtoReflect.Descriptor instead.
func (*MsgOracleSetConfirmResponse) Descriptor() ([]byte, []int) {
	return file_fx_gravity_crosschain_v1_tx_proto_rawDescGZIP(), []int{29}
}

// Deprecated: Do not use.
type MsgConfirmBatchResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgConfirmBatchResponse) Reset() {
	*x = MsgConfirmBatchResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fx_gravity_crosschain_v1_tx_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgConfirmBatchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgConfirmBatchResponse) ProtoMessage() {}

// Deprecated: Use MsgConfirmBatchResponse.ProtoReflect.Descriptor instead.
func (*MsgConfirmBatchResponse) Descriptor() ([]byte, []int) {
	return file_fx_gravity_crosschain_v1_tx_proto_rawDescGZIP(), []int{30}
}

// Deprecated: Do not use.
type MsgBridgeCallConfirmResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgBridgeCallConfirmResponse) Reset() {
	*x = MsgBridgeCallConfirmResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fx_gravity_crosschain_v1_tx_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgBridgeCallConfirmResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgBridgeCallConfirmResponse) ProtoMessage() {}

// Deprecated: Use MsgBridgeCallConfirmResponse.ProtoReflect.Descriptor instead.
func (*MsgBridgeCallConfirmResponse) Descriptor() ([]byte, []int) {
	return file_fx_gravity_crosschain_v1_tx_proto_rawDescGZIP(), []int{31}
}

// Deprecated: Please use precompile BridgeCall
type MsgSendToExternal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sender    string        `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	Dest      string        `protobuf:"bytes,2,opt,name=dest,proto3" json:"dest,omitempty"`
	Amount    *v1beta1.Coin `protobuf:"bytes,3,opt,name=amount,proto3" json:"amount,omitempty"`
	BridgeFee *v1beta1.Coin `protobuf:"bytes,4,opt,name=bridge_fee,json=bridgeFee,proto3" json:"bridge_fee,omitempty"`
	ChainName string        `protobuf:"bytes,5,opt,name=chain_name,json=chainName,proto3" json:"chain_name,omitempty"`
}

func (x *MsgSendToExternal) Reset() {
	*x = MsgSendToExternal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fx_gravity_crosschain_v1_tx_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgSendToExternal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgSendToExternal) ProtoMessage() {}

// Deprecated: Use MsgSendToExternal.ProtoReflect.Descriptor instead.
func (*MsgSendToExternal) Descriptor() ([]byte, []int) {
	return file_fx_gravity_crosschain_v1_tx_proto_rawDescGZIP(), []int{32}
}

func (x *MsgSendToExternal) GetSender() string {
	if x != nil {
		return x.Sender
	}
	return ""
}

func (x *MsgSendToExternal) GetDest() string {
	if x != nil {
		return x.Dest
	}
	return ""
}

func (x *MsgSendToExternal) GetAmount() *v1beta1.Coin {
	if x != nil {
		return x.Amount
	}
	return nil
}

func (x *MsgSendToExternal) GetBridgeFee() *v1beta1.Coin {
	if x != nil {
		return x.BridgeFee
	}
	return nil
}

func (x *MsgSendToExternal) GetChainName() string {
	if x != nil {
		return x.ChainName
	}
	return ""
}

// Deprecated: Do not use.
type MsgSendToExternalResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BatchNonce uint64 `protobuf:"varint,1,opt,name=batch_nonce,json=batchNonce,proto3" json:"batch_nonce,omitempty"`
}

func (x *MsgSendToExternalResponse) Reset() {
	*x = MsgSendToExternalResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fx_gravity_crosschain_v1_tx_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgSendToExternalResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgSendToExternalResponse) ProtoMessage() {}

// Deprecated: Use MsgSendToExternalResponse.ProtoReflect.Descriptor instead.
func (*MsgSendToExternalResponse) Descriptor() ([]byte, []int) {
	return file_fx_gravity_crosschain_v1_tx_proto_rawDescGZIP(), []int{33}
}

func (x *MsgSendToExternalResponse) GetBatchNonce() uint64 {
	if x != nil {
		return x.BatchNonce
	}
	return 0
}

var File_fx_gravity_crosschain_v1_tx_proto protoreflect.FileDescriptor

var file_fx_gravity_crosschain_v1_tx_proto_rawDesc = []byte{
	0x0a, 0x21, 0x66, 0x78, 0x2f, 0x67, 0x72, 0x61, 0x76, 0x69, 0x74, 0x79, 0x2f, 0x63, 0x72, 0x6f,
	0x73, 0x73, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x78, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x18, 0x66, 0x78, 0x2e, 0x67, 0x72, 0x61, 0x76, 0x69, 0x74, 0x79, 0x2e,
	0x63, 0x72, 0x6f, 0x73, 0x73, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x1a, 0x1e, 0x63,
	0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74,
	0x61, 0x31, 0x2f, 0x63, 0x6f, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x63,
	0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2f, 0x6d, 0x73, 0x67, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x73, 0x67,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x5f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x24, 0x66, 0x78, 0x2f, 0x67, 0x72, 0x61, 0x76, 0x69, 0x74, 0x79, 0x2f, 0x63, 0x72,
	0x6f, 0x73, 0x73, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x67, 0x6f, 0x67, 0x6f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x67, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61,
	0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x61, 0x6d, 0x69, 0x6e, 0x6f, 0x2f,
	0x61, 0x6d, 0x69, 0x6e, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xd6, 0x02, 0x0a, 0x0f,
	0x4d, 0x73, 0x67, 0x42, 0x6f, 0x6e, 0x64, 0x65, 0x64, 0x4f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x25,
	0x0a, 0x0e, 0x6f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x72,
	0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x29,
	0x0a, 0x10, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x2b, 0x0a, 0x11, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x48, 0x0a, 0x0f, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61,
	0x74, 0x65, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x76, 0x31,
	0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x42, 0x04, 0xc8, 0xde, 0x1f, 0x00,
	0x52, 0x0e, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x3a, 0x32, 0x82, 0xe7, 0xb0, 0x2a, 0x0e, 0x6f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x5f, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x8a, 0xe7, 0xb0, 0x2a, 0x1a, 0x63, 0x72, 0x6f, 0x73, 0x73, 0x63,
	0x68, 0x61, 0x69, 0x6e, 0x2f, 0x4d, 0x73, 0x67, 0x42, 0x6f, 0x6e, 0x64, 0x65, 0x64, 0x4f, 0x72,
	0x61, 0x63, 0x6c, 0x65, 0x22, 0x19, 0x0a, 0x17, 0x4d, 0x73, 0x67, 0x42, 0x6f, 0x6e, 0x64, 0x65,
	0x64, 0x4f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0xc2, 0x01, 0x0a, 0x0e, 0x4d, 0x73, 0x67, 0x41, 0x64, 0x64, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61,
	0x74, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x25, 0x0a, 0x0e, 0x6f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x5f, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6f, 0x72, 0x61, 0x63, 0x6c,
	0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x37, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x6f,
	0x73, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x43,
	0x6f, 0x69, 0x6e, 0x42, 0x04, 0xc8, 0xde, 0x1f, 0x00, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x3a, 0x31, 0x82, 0xe7, 0xb0, 0x2a, 0x0e, 0x6f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x5f, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x8a, 0xe7, 0xb0, 0x2a, 0x19, 0x63, 0x72, 0x6f, 0x73, 0x73,
	0x63, 0x68, 0x61, 0x69, 0x6e, 0x2f, 0x4d, 0x73, 0x67, 0x41, 0x64, 0x64, 0x44, 0x65, 0x6c, 0x65,
	0x67, 0x61, 0x74, 0x65, 0x22, 0x18, 0x0a, 0x16, 0x4d, 0x73, 0x67, 0x41, 0x64, 0x64, 0x44, 0x65,
	0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xb4,
	0x01, 0x0a, 0x0d, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65,
	0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x25, 0x0a, 0x0e, 0x6f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x2b, 0x0a, 0x11, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x6f, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x10, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x3a, 0x30, 0x82, 0xe7, 0xb0, 0x2a, 0x0e, 0x6f, 0x72, 0x61, 0x63, 0x6c, 0x65,
	0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x8a, 0xe7, 0xb0, 0x2a, 0x18, 0x63, 0x72, 0x6f,
	0x73, 0x73, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2f, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x44, 0x65, 0x6c,
	0x65, 0x67, 0x61, 0x74, 0x65, 0x22, 0x17, 0x0a, 0x15, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x44, 0x65,
	0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xb2,
	0x01, 0x0a, 0x0e, 0x4d, 0x73, 0x67, 0x45, 0x64, 0x69, 0x74, 0x42, 0x72, 0x69, 0x64, 0x67, 0x65,
	0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x25, 0x0a, 0x0e, 0x6f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6f, 0x72, 0x61, 0x63, 0x6c, 0x65,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x62, 0x72, 0x69, 0x64, 0x67,
	0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x3a, 0x31, 0x82, 0xe7, 0xb0, 0x2a, 0x0e, 0x6f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x5f, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x8a, 0xe7, 0xb0, 0x2a, 0x19, 0x63, 0x72, 0x6f, 0x73, 0x73, 0x63,
	0x68, 0x61, 0x69, 0x6e, 0x2f, 0x4d, 0x73, 0x67, 0x45, 0x64, 0x69, 0x74, 0x42, 0x72, 0x69, 0x64,
	0x67, 0x65, 0x72, 0x22, 0x18, 0x0a, 0x16, 0x4d, 0x73, 0x67, 0x45, 0x64, 0x69, 0x74, 0x42, 0x72,
	0x69, 0x64, 0x67, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x8f, 0x01,
	0x0a, 0x11, 0x4d, 0x73, 0x67, 0x55, 0x6e, 0x62, 0x6f, 0x6e, 0x64, 0x65, 0x64, 0x4f, 0x72, 0x61,
	0x63, 0x6c, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x6f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x5f, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6f, 0x72, 0x61, 0x63,
	0x6c, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x3a, 0x34, 0x82, 0xe7, 0xb0, 0x2a, 0x0e,
	0x6f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x8a, 0xe7,
	0xb0, 0x2a, 0x1c, 0x63, 0x72, 0x6f, 0x73, 0x73, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2f, 0x4d, 0x73,
	0x67, 0x55, 0x6e, 0x62, 0x6f, 0x6e, 0x64, 0x65, 0x64, 0x4f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x22,
	0x1b, 0x0a, 0x19, 0x4d, 0x73, 0x67, 0x55, 0x6e, 0x62, 0x6f, 0x6e, 0x64, 0x65, 0x64, 0x4f, 0x72,
	0x61, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x8f, 0x01, 0x0a,
	0x11, 0x4d, 0x73, 0x67, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x52, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x25, 0x0a, 0x0e, 0x6f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x5f, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6f, 0x72, 0x61, 0x63, 0x6c,
	0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x3a, 0x34, 0x82, 0xe7, 0xb0, 0x2a, 0x0e, 0x6f,
	0x72, 0x61, 0x63, 0x6c, 0x65, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x8a, 0xe7, 0xb0,
	0x2a, 0x1c, 0x63, 0x72, 0x6f, 0x73, 0x73, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2f, 0x4d, 0x73, 0x67,
	0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x22, 0x1b,
	0x0a, 0x19, 0x4d, 0x73, 0x67, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x52, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xf5, 0x01, 0x0a, 0x13,
	0x4d, 0x73, 0x67, 0x4f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x72, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x62, 0x72, 0x69,
	0x64, 0x67, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x29, 0x0a, 0x10, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x65, 0x78,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1c, 0x0a,
	0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63,
	0x68, 0x61, 0x69, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x3a, 0x37, 0x82, 0xe7, 0xb0, 0x2a,
	0x0f, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x8a, 0xe7, 0xb0, 0x2a, 0x1e, 0x63, 0x72, 0x6f, 0x73, 0x73, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2f,
	0x4d, 0x73, 0x67, 0x4f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x72, 0x6d, 0x22, 0xd9, 0x02, 0x0a, 0x18, 0x4d, 0x73, 0x67, 0x4f, 0x72, 0x61, 0x63, 0x6c,
	0x65, 0x53, 0x65, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x43, 0x6c, 0x61, 0x69, 0x6d,
	0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x6e, 0x63,
	0x65, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x6f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x5f, 0x73,
	0x65, 0x74, 0x5f, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e,
	0x6f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x53, 0x65, 0x74, 0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x49,
	0x0a, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x29, 0x2e, 0x66, 0x78, 0x2e, 0x67, 0x72, 0x61, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x63, 0x72, 0x6f,
	0x73, 0x73, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x72, 0x69, 0x64, 0x67,
	0x65, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x42, 0x04, 0xc8, 0xde, 0x1f, 0x00,
	0x52, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x62, 0x72, 0x69,
	0x64, 0x67, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x4e, 0x61, 0x6d,
	0x65, 0x3a, 0x3c, 0x82, 0xe7, 0xb0, 0x2a, 0x0f, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x72, 0x5f,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x8a, 0xe7, 0xb0, 0x2a, 0x23, 0x63, 0x72, 0x6f, 0x73,
	0x73, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2f, 0x4d, 0x73, 0x67, 0x4f, 0x72, 0x61, 0x63, 0x6c, 0x65,
	0x53, 0x65, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x22,
	0x93, 0x03, 0x0a, 0x10, 0x4d, 0x73, 0x67, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x6f, 0x46, 0x78, 0x43,
	0x6c, 0x61, 0x69, 0x6d, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x6f,
	0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x12,
	0x43, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x2b, 0xc8, 0xde, 0x1f, 0x00, 0xda, 0xde, 0x1f, 0x15, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x73,
	0x64, 0x6b, 0x2e, 0x69, 0x6f, 0x2f, 0x6d, 0x61, 0x74, 0x68, 0x2e, 0x49, 0x6e, 0x74, 0xd2, 0xb4,
	0x2d, 0x0a, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x49, 0x6e, 0x74, 0x52, 0x06, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08,
	0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x5f, 0x69, 0x62, 0x63, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x49, 0x62, 0x63, 0x12, 0x27, 0x0a, 0x0f, 0x62, 0x72, 0x69, 0x64, 0x67,
	0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x3a,
	0x34, 0x82, 0xe7, 0xb0, 0x2a, 0x0f, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x72, 0x5f, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x8a, 0xe7, 0xb0, 0x2a, 0x1b, 0x63, 0x72, 0x6f, 0x73, 0x73, 0x63,
	0x68, 0x61, 0x69, 0x6e, 0x2f, 0x4d, 0x73, 0x67, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x6f, 0x46, 0x78,
	0x43, 0x6c, 0x61, 0x69, 0x6d, 0x22, 0xdf, 0x04, 0x0a, 0x12, 0x4d, 0x73, 0x67, 0x42, 0x72, 0x69,
	0x64, 0x67, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x12, 0x1d, 0x0a, 0x0a,
	0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x62,
	0x72, 0x69, 0x64, 0x67, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x72, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x6f,
	0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x73, 0x12, 0x45, 0x0a, 0x07, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x08, 0x20, 0x03,
	0x28, 0x09, 0x42, 0x2b, 0xc8, 0xde, 0x1f, 0x00, 0xda, 0xde, 0x1f, 0x15, 0x63, 0x6f, 0x73, 0x6d,
	0x6f, 0x73, 0x73, 0x64, 0x6b, 0x2e, 0x69, 0x6f, 0x2f, 0x6d, 0x61, 0x74, 0x68, 0x2e, 0x49, 0x6e,
	0x74, 0xd2, 0xb4, 0x2d, 0x0a, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x49, 0x6e, 0x74, 0x52,
	0x07, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x46, 0x0a, 0x08,
	0x71, 0x75, 0x6f, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x42, 0x2b,
	0xc8, 0xde, 0x1f, 0x00, 0xda, 0xde, 0x1f, 0x15, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x73, 0x64,
	0x6b, 0x2e, 0x69, 0x6f, 0x2f, 0x6d, 0x61, 0x74, 0x68, 0x2e, 0x49, 0x6e, 0x74, 0xd2, 0xb4, 0x2d,
	0x0a, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x49, 0x6e, 0x74, 0x52, 0x07, 0x71, 0x75, 0x6f,
	0x74, 0x65, 0x49, 0x64, 0x12, 0x48, 0x0a, 0x09, 0x67, 0x61, 0x73, 0x5f, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x42, 0x2b, 0xc8, 0xde, 0x1f, 0x00, 0xda, 0xde, 0x1f,
	0x15, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x73, 0x64, 0x6b, 0x2e, 0x69, 0x6f, 0x2f, 0x6d, 0x61,
	0x74, 0x68, 0x2e, 0x49, 0x6e, 0x74, 0xd2, 0xb4, 0x2d, 0x0a, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73,
	0x2e, 0x49, 0x6e, 0x74, 0x52, 0x08, 0x67, 0x61, 0x73, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x6d, 0x65, 0x6d, 0x6f, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6d, 0x65,
	0x6d, 0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x78, 0x5f, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x78, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x3a,
	0x36, 0x82, 0xe7, 0xb0, 0x2a, 0x0f, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x72, 0x5f, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x8a, 0xe7, 0xb0, 0x2a, 0x1d, 0x63, 0x72, 0x6f, 0x73, 0x73, 0x63,
	0x68, 0x61, 0x69, 0x6e, 0x2f, 0x4d, 0x73, 0x67, 0x42, 0x72, 0x69, 0x64, 0x67, 0x65, 0x43, 0x61,
	0x6c, 0x6c, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x22, 0xc7, 0x02, 0x0a, 0x18, 0x4d, 0x73, 0x67, 0x42,
	0x72, 0x69, 0x64, 0x67, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x43,
	0x6c, 0x61, 0x69, 0x6d, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x72, 0x5f, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x62, 0x72,
	0x69, 0x64, 0x67, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1f, 0x0a, 0x0b,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0a, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x21, 0x0a,
	0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x78, 0x5f, 0x6f, 0x72, 0x69,
	0x67, 0x69, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x78, 0x4f, 0x72, 0x69,
	0x67, 0x69, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x14, 0x0a,
	0x05, 0x63, 0x61, 0x75, 0x73, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x61,
	0x75, 0x73, 0x65, 0x3a, 0x3c, 0x82, 0xe7, 0xb0, 0x2a, 0x0f, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65,
	0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x8a, 0xe7, 0xb0, 0x2a, 0x23, 0x63, 0x72,
	0x6f, 0x73, 0x73, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2f, 0x4d, 0x73, 0x67, 0x42, 0x72, 0x69, 0x64,
	0x67, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x43, 0x6c, 0x61, 0x69,
	0x6d, 0x22, 0x94, 0x02, 0x0a, 0x0f, 0x4d, 0x73, 0x67, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d,
	0x42, 0x61, 0x74, 0x63, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x72, 0x5f, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x62, 0x72, 0x69,
	0x64, 0x67, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x29, 0x0a, 0x10, 0x65,
	0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x4e,
	0x61, 0x6d, 0x65, 0x3a, 0x33, 0x82, 0xe7, 0xb0, 0x2a, 0x0f, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65,
	0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x8a, 0xe7, 0xb0, 0x2a, 0x1a, 0x63, 0x72,
	0x6f, 0x73, 0x73, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2f, 0x4d, 0x73, 0x67, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x72, 0x6d, 0x42, 0x61, 0x74, 0x63, 0x68, 0x22, 0xa8, 0x02, 0x0a, 0x16, 0x4d, 0x73, 0x67,
	0x53, 0x65, 0x6e, 0x64, 0x54, 0x6f, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x43, 0x6c,
	0x61, 0x69, 0x6d, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x6f, 0x6e,
	0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x4e,
	0x6f, 0x6e, 0x63, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x61, 0x74, 0x63, 0x68,
	0x5f, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x62, 0x61,
	0x74, 0x63, 0x68, 0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x12,
	0x27, 0x0a, 0x0f, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65,
	0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x69,
	0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68,
	0x61, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x3a, 0x3a, 0x82, 0xe7, 0xb0, 0x2a, 0x0f, 0x62, 0x72,
	0x69, 0x64, 0x67, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x8a, 0xe7, 0xb0,
	0x2a, 0x21, 0x63, 0x72, 0x6f, 0x73, 0x73, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2f, 0x4d, 0x73, 0x67,
	0x53, 0x65, 0x6e, 0x64, 0x54, 0x6f, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x43, 0x6c,
	0x61, 0x69, 0x6d, 0x22, 0xdd, 0x02, 0x0a, 0x13, 0x4d, 0x73, 0x67, 0x42, 0x72, 0x69, 0x64, 0x67,
	0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x12, 0x1f, 0x0a, 0x0b, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0a, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x21, 0x0a, 0x0c,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12,
	0x25, 0x0a, 0x0e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79,
	0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62,
	0x6f, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x73, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x73, 0x12, 0x27,
	0x0a, 0x0f, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x72,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x65, 0x6d, 0x6f, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6d, 0x65, 0x6d, 0x6f, 0x12, 0x1d, 0x0a, 0x0a, 0x63,
	0x68, 0x61, 0x69, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x3a, 0x37, 0x82, 0xe7, 0xb0, 0x2a,
	0x0f, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x8a, 0xe7, 0xb0, 0x2a, 0x1e, 0x63, 0x72, 0x6f, 0x73, 0x73, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2f,
	0x4d, 0x73, 0x67, 0x42, 0x72, 0x69, 0x64, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x43, 0x6c,
	0x61, 0x69, 0x6d, 0x22, 0xf7, 0x01, 0x0a, 0x14, 0x4d, 0x73, 0x67, 0x42, 0x72, 0x69, 0x64, 0x67,
	0x65, 0x43, 0x61, 0x6c, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x12, 0x1d, 0x0a, 0x0a,
	0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x62,
	0x72, 0x69, 0x64, 0x67, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x72, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x12, 0x29, 0x0a, 0x10, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05,
	0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x3a, 0x38, 0x82, 0xe7, 0xb0, 0x2a, 0x0f, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65,
	0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x8a, 0xe7, 0xb0, 0x2a, 0x1f, 0x63, 0x72,
	0x6f, 0x73, 0x73, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2f, 0x4d, 0x73, 0x67, 0x42, 0x72, 0x69, 0x64,
	0x67, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x22, 0xd7, 0x01,
	0x0a, 0x0f, 0x4d, 0x73, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x36, 0x0a, 0x09, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x18, 0xd2, 0xb4, 0x2d, 0x14, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x09, 0x61,
	0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x3e, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x66, 0x78, 0x2e, 0x67, 0x72,
	0x61, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x63, 0x72, 0x6f, 0x73, 0x73, 0x63, 0x68, 0x61, 0x69, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x42, 0x04, 0xc8, 0xde, 0x1f, 0x00,
	0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x3a, 0x2d, 0x82, 0xe7, 0xb0, 0x2a, 0x09, 0x61,
	0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x8a, 0xe7, 0xb0, 0x2a, 0x1a, 0x63, 0x72, 0x6f,
	0x73, 0x73, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2f, 0x4d, 0x73, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0x19, 0x0a, 0x17, 0x4d, 0x73, 0x67, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0xbd, 0x01, 0x0a, 0x15, 0x4d, 0x73, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x43, 0x68, 0x61, 0x69, 0x6e, 0x4f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x73, 0x12, 0x1d, 0x0a, 0x0a,
	0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x36, 0x0a, 0x09, 0x61,
	0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x18,
	0xd2, 0xb4, 0x2d, 0x14, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x09, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72,
	0x69, 0x74, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x73, 0x3a, 0x33, 0x82,
	0xe7, 0xb0, 0x2a, 0x09, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x8a, 0xe7, 0xb0,
	0x2a, 0x20, 0x63, 0x72, 0x6f, 0x73, 0x73, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2f, 0x4d, 0x73, 0x67,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x4f, 0x72, 0x61, 0x63, 0x6c,
	0x65, 0x73, 0x22, 0x1f, 0x0a, 0x1d, 0x4d, 0x73, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43,
	0x68, 0x61, 0x69, 0x6e, 0x4f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0xd8, 0x01, 0x0a, 0x08, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x61, 0x69, 0x6d,
	0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x27, 0x0a, 0x0f, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65,
	0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x56, 0x0a, 0x05, 0x63, 0x6c, 0x61, 0x69,
	0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x42, 0x2a, 0xca,
	0xb4, 0x2d, 0x26, 0x66, 0x78, 0x2e, 0x67, 0x72, 0x61, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x63, 0x72,
	0x6f, 0x73, 0x73, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x52, 0x05, 0x63, 0x6c, 0x61, 0x69, 0x6d,
	0x3a, 0x2c, 0x82, 0xe7, 0xb0, 0x2a, 0x0f, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x72, 0x5f, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x8a, 0xe7, 0xb0, 0x2a, 0x13, 0x63, 0x72, 0x6f, 0x73, 0x73,
	0x63, 0x68, 0x61, 0x69, 0x6e, 0x2f, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x22, 0x12,
	0x0a, 0x10, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0xda, 0x01, 0x0a, 0x0a, 0x4d, 0x73, 0x67, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72,
	0x6d, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x27, 0x0a, 0x0f, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x62, 0x72, 0x69, 0x64, 0x67,
	0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x54, 0x0a, 0x07, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x72, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79,
	0x42, 0x24, 0xca, 0xb4, 0x2d, 0x20, 0x66, 0x78, 0x2e, 0x67, 0x72, 0x61, 0x76, 0x69, 0x74, 0x79,
	0x2e, 0x63, 0x72, 0x6f, 0x73, 0x73, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x3a,
	0x2e, 0x82, 0xe7, 0xb0, 0x2a, 0x0f, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x72, 0x5f, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x8a, 0xe7, 0xb0, 0x2a, 0x15, 0x63, 0x72, 0x6f, 0x73, 0x73, 0x63,
	0x68, 0x61, 0x69, 0x6e, 0x2f, 0x4d, 0x73, 0x67, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x22,
	0x14, 0x0a, 0x12, 0x4d, 0x73, 0x67, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x21, 0x0a, 0x1b, 0x4d, 0x73, 0x67, 0x4f, 0x72, 0x61, 0x63,
	0x6c, 0x65, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x3a, 0x02, 0x18, 0x01, 0x22, 0x1d, 0x0a, 0x17, 0x4d, 0x73, 0x67, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x42, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x3a, 0x02, 0x18, 0x01, 0x22, 0x22, 0x0a, 0x1c, 0x4d, 0x73, 0x67, 0x42, 0x72,
	0x69, 0x64, 0x67, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x3a, 0x02, 0x18, 0x01, 0x22, 0x85, 0x02, 0x0a, 0x11,
	0x4d, 0x73, 0x67, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x6f, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x74, 0x12, 0x37, 0x0a,
	0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65,
	0x74, 0x61, 0x31, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x42, 0x04, 0xc8, 0xde, 0x1f, 0x00, 0x52, 0x06,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x3e, 0x0a, 0x0a, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65,
	0x5f, 0x66, 0x65, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x6f, 0x73,
	0x6d, 0x6f, 0x73, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31,
	0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x42, 0x04, 0xc8, 0xde, 0x1f, 0x00, 0x52, 0x09, 0x62, 0x72, 0x69,
	0x64, 0x67, 0x65, 0x46, 0x65, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x69,
	0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x3a, 0x2c, 0x82, 0xe7, 0xb0, 0x2a, 0x06, 0x73, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x8a, 0xe7, 0xb0, 0x2a, 0x1c, 0x63, 0x72, 0x6f, 0x73, 0x73, 0x63, 0x68, 0x61, 0x69,
	0x6e, 0x2f, 0x4d, 0x73, 0x67, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x6f, 0x45, 0x78, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x22, 0x40, 0x0a, 0x19, 0x4d, 0x73, 0x67, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x6f,
	0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x62, 0x61, 0x74, 0x63, 0x68, 0x4e, 0x6f, 0x6e, 0x63,
	0x65, 0x3a, 0x02, 0x18, 0x01, 0x32, 0xa3, 0x0c, 0x0a, 0x03, 0x4d, 0x73, 0x67, 0x12, 0x6c, 0x0a,
	0x0c, 0x42, 0x6f, 0x6e, 0x64, 0x65, 0x64, 0x4f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x12, 0x29, 0x2e,
	0x66, 0x78, 0x2e, 0x67, 0x72, 0x61, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x63, 0x72, 0x6f, 0x73, 0x73,
	0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x73, 0x67, 0x42, 0x6f, 0x6e, 0x64,
	0x65, 0x64, 0x4f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x1a, 0x31, 0x2e, 0x66, 0x78, 0x2e, 0x67, 0x72,
	0x61, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x63, 0x72, 0x6f, 0x73, 0x73, 0x63, 0x68, 0x61, 0x69, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x73, 0x67, 0x42, 0x6f, 0x6e, 0x64, 0x65, 0x64, 0x4f, 0x72, 0x61,
	0x63, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x69, 0x0a, 0x0b, 0x41,
	0x64, 0x64, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x12, 0x28, 0x2e, 0x66, 0x78, 0x2e,
	0x67, 0x72, 0x61, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x63, 0x72, 0x6f, 0x73, 0x73, 0x63, 0x68, 0x61,
	0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x73, 0x67, 0x41, 0x64, 0x64, 0x44, 0x65, 0x6c, 0x65,
	0x67, 0x61, 0x74, 0x65, 0x1a, 0x30, 0x2e, 0x66, 0x78, 0x2e, 0x67, 0x72, 0x61, 0x76, 0x69, 0x74,
	0x79, 0x2e, 0x63, 0x72, 0x6f, 0x73, 0x73, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x4d, 0x73, 0x67, 0x41, 0x64, 0x64, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x66, 0x0a, 0x0a, 0x52, 0x65, 0x44, 0x65, 0x6c, 0x65,
	0x67, 0x61, 0x74, 0x65, 0x12, 0x27, 0x2e, 0x66, 0x78, 0x2e, 0x67, 0x72, 0x61, 0x76, 0x69, 0x74,
	0x79, 0x2e, 0x63, 0x72, 0x6f, 0x73, 0x73, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x4d, 0x73, 0x67, 0x52, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x1a, 0x2f, 0x2e,
	0x66, 0x78, 0x2e, 0x67, 0x72, 0x61, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x63, 0x72, 0x6f, 0x73, 0x73,
	0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x44, 0x65,
	0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x69,
	0x0a, 0x0b, 0x45, 0x64, 0x69, 0x74, 0x42, 0x72, 0x69, 0x64, 0x67, 0x65, 0x72, 0x12, 0x28, 0x2e,
	0x66, 0x78, 0x2e, 0x67, 0x72, 0x61, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x63, 0x72, 0x6f, 0x73, 0x73,
	0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x73, 0x67, 0x45, 0x64, 0x69, 0x74,
	0x42, 0x72, 0x69, 0x64, 0x67, 0x65, 0x72, 0x1a, 0x30, 0x2e, 0x66, 0x78, 0x2e, 0x67, 0x72, 0x61,
	0x76, 0x69, 0x74, 0x79, 0x2e, 0x63, 0x72, 0x6f, 0x73, 0x73, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x4d, 0x73, 0x67, 0x45, 0x64, 0x69, 0x74, 0x42, 0x72, 0x69, 0x64, 0x67, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x72, 0x0a, 0x0e, 0x57, 0x69, 0x74,
	0x68, 0x64, 0x72, 0x61, 0x77, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x2b, 0x2e, 0x66, 0x78,
	0x2e, 0x67, 0x72, 0x61, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x63, 0x72, 0x6f, 0x73, 0x73, 0x63, 0x68,
	0x61, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x73, 0x67, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72,
	0x61, 0x77, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x1a, 0x33, 0x2e, 0x66, 0x78, 0x2e, 0x67, 0x72,
	0x61, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x63, 0x72, 0x6f, 0x73, 0x73, 0x63, 0x68, 0x61, 0x69, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x73, 0x67, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x52,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x72, 0x0a,
	0x0e, 0x55, 0x6e, 0x62, 0x6f, 0x6e, 0x64, 0x65, 0x64, 0x4f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x12,
	0x2b, 0x2e, 0x66, 0x78, 0x2e, 0x67, 0x72, 0x61, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x63, 0x72, 0x6f,
	0x73, 0x73, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x73, 0x67, 0x55, 0x6e,
	0x62, 0x6f, 0x6e, 0x64, 0x65, 0x64, 0x4f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x1a, 0x33, 0x2e, 0x66,
	0x78, 0x2e, 0x67, 0x72, 0x61, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x63, 0x72, 0x6f, 0x73, 0x73, 0x63,
	0x68, 0x61, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x73, 0x67, 0x55, 0x6e, 0x62, 0x6f, 0x6e,
	0x64, 0x65, 0x64, 0x4f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x78, 0x0a, 0x10, 0x4f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x53, 0x65, 0x74, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x72, 0x6d, 0x12, 0x2d, 0x2e, 0x66, 0x78, 0x2e, 0x67, 0x72, 0x61, 0x76, 0x69,
	0x74, 0x79, 0x2e, 0x63, 0x72, 0x6f, 0x73, 0x73, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x4d, 0x73, 0x67, 0x4f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x72, 0x6d, 0x1a, 0x35, 0x2e, 0x66, 0x78, 0x2e, 0x67, 0x72, 0x61, 0x76, 0x69, 0x74,
	0x79, 0x2e, 0x63, 0x72, 0x6f, 0x73, 0x73, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x4d, 0x73, 0x67, 0x4f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x72, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6c, 0x0a, 0x0c, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x42, 0x61, 0x74, 0x63, 0x68, 0x12, 0x29, 0x2e, 0x66, 0x78,
	0x2e, 0x67, 0x72, 0x61, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x63, 0x72, 0x6f, 0x73, 0x73, 0x63, 0x68,
	0x61, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x73, 0x67, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72,
	0x6d, 0x42, 0x61, 0x74, 0x63, 0x68, 0x1a, 0x31, 0x2e, 0x66, 0x78, 0x2e, 0x67, 0x72, 0x61, 0x76,
	0x69, 0x74, 0x79, 0x2e, 0x63, 0x72, 0x6f, 0x73, 0x73, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x4d, 0x73, 0x67, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x42, 0x61, 0x74, 0x63,
	0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7b, 0x0a, 0x11, 0x42, 0x72, 0x69,
	0x64, 0x67, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x12, 0x2e,
	0x2e, 0x66, 0x78, 0x2e, 0x67, 0x72, 0x61, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x63, 0x72, 0x6f, 0x73,
	0x73, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x73, 0x67, 0x42, 0x72, 0x69,
	0x64, 0x67, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x1a, 0x36,
	0x2e, 0x66, 0x78, 0x2e, 0x67, 0x72, 0x61, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x63, 0x72, 0x6f, 0x73,
	0x73, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x73, 0x67, 0x42, 0x72, 0x69,
	0x64, 0x67, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x72, 0x0a, 0x0e, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x6f,
	0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x12, 0x2b, 0x2e, 0x66, 0x78, 0x2e, 0x67, 0x72,
	0x61, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x63, 0x72, 0x6f, 0x73, 0x73, 0x63, 0x68, 0x61, 0x69, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x73, 0x67, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x6f, 0x45, 0x78, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x1a, 0x33, 0x2e, 0x66, 0x78, 0x2e, 0x67, 0x72, 0x61, 0x76, 0x69,
	0x74, 0x79, 0x2e, 0x63, 0x72, 0x6f, 0x73, 0x73, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x4d, 0x73, 0x67, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x6f, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6c, 0x0a, 0x0c, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x29, 0x2e, 0x66, 0x78, 0x2e,
	0x67, 0x72, 0x61, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x63, 0x72, 0x6f, 0x73, 0x73, 0x63, 0x68, 0x61,
	0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x73, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x31, 0x2e, 0x66, 0x78, 0x2e, 0x67, 0x72, 0x61, 0x76, 0x69,
	0x74, 0x79, 0x2e, 0x63, 0x72, 0x6f, 0x73, 0x73, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x4d, 0x73, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7e, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x4f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x73, 0x12, 0x2f,
	0x2e, 0x66, 0x78, 0x2e, 0x67, 0x72, 0x61, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x63, 0x72, 0x6f, 0x73,
	0x73, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x73, 0x67, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x4f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x73, 0x1a,
	0x37, 0x2e, 0x66, 0x78, 0x2e, 0x67, 0x72, 0x61, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x63, 0x72, 0x6f,
	0x73, 0x73, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x73, 0x67, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x4f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x05, 0x43, 0x6c, 0x61, 0x69,
	0x6d, 0x12, 0x22, 0x2e, 0x66, 0x78, 0x2e, 0x67, 0x72, 0x61, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x63,
	0x72, 0x6f, 0x73, 0x73, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x73, 0x67,
	0x43, 0x6c, 0x61, 0x69, 0x6d, 0x1a, 0x2a, 0x2e, 0x66, 0x78, 0x2e, 0x67, 0x72, 0x61, 0x76, 0x69,
	0x74, 0x79, 0x2e, 0x63, 0x72, 0x6f, 0x73, 0x73, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x5f, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x12, 0x24,
	0x2e, 0x66, 0x78, 0x2e, 0x67, 0x72, 0x61, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x63, 0x72, 0x6f, 0x73,
	0x73, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x73, 0x67, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x72, 0x6d, 0x1a, 0x2c, 0x2e, 0x66, 0x78, 0x2e, 0x67, 0x72, 0x61, 0x76, 0x69, 0x74,
	0x79, 0x2e, 0x63, 0x72, 0x6f, 0x73, 0x73, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x4d, 0x73, 0x67, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x1a, 0x05, 0x80, 0xe7, 0xb0, 0x2a, 0x01, 0x42, 0xf3, 0x01, 0x0a, 0x1c,
	0x63, 0x6f, 0x6d, 0x2e, 0x66, 0x78, 0x2e, 0x67, 0x72, 0x61, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x63,
	0x72, 0x6f, 0x73, 0x73, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x42, 0x07, 0x54, 0x78,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x47, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x70, 0x75, 0x6e, 0x64, 0x69, 0x61, 0x69, 0x2f, 0x66, 0x78, 0x2d, 0x63,
	0x6f, 0x72, 0x65, 0x2f, 0x76, 0x38, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x66, 0x78, 0x2f, 0x67, 0x72,
	0x61, 0x76, 0x69, 0x74, 0x79, 0x2f, 0x63, 0x72, 0x6f, 0x73, 0x73, 0x63, 0x68, 0x61, 0x69, 0x6e,
	0x2f, 0x76, 0x31, 0x3b, 0x63, 0x72, 0x6f, 0x73, 0x73, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x76, 0x31,
	0xa2, 0x02, 0x03, 0x46, 0x47, 0x43, 0xaa, 0x02, 0x18, 0x46, 0x78, 0x2e, 0x47, 0x72, 0x61, 0x76,
	0x69, 0x74, 0x79, 0x2e, 0x43, 0x72, 0x6f, 0x73, 0x73, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x56,
	0x31, 0xca, 0x02, 0x18, 0x46, 0x78, 0x5c, 0x47, 0x72, 0x61, 0x76, 0x69, 0x74, 0x79, 0x5c, 0x43,
	0x72, 0x6f, 0x73, 0x73, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x24, 0x46,
	0x78, 0x5c, 0x47, 0x72, 0x61, 0x76, 0x69, 0x74, 0x79, 0x5c, 0x43, 0x72, 0x6f, 0x73, 0x73, 0x63,
	0x68, 0x61, 0x69, 0x6e, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0xea, 0x02, 0x1b, 0x46, 0x78, 0x3a, 0x3a, 0x47, 0x72, 0x61, 0x76, 0x69, 0x74,
	0x79, 0x3a, 0x3a, 0x43, 0x72, 0x6f, 0x73, 0x73, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x3a, 0x3a, 0x56,
	0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_fx_gravity_crosschain_v1_tx_proto_rawDescOnce sync.Once
	file_fx_gravity_crosschain_v1_tx_proto_rawDescData = file_fx_gravity_crosschain_v1_tx_proto_rawDesc
)

func file_fx_gravity_crosschain_v1_tx_proto_rawDescGZIP() []byte {
	file_fx_gravity_crosschain_v1_tx_proto_rawDescOnce.Do(func() {
		file_fx_gravity_crosschain_v1_tx_proto_rawDescData = protoimpl.X.CompressGZIP(file_fx_gravity_crosschain_v1_tx_proto_rawDescData)
	})
	return file_fx_gravity_crosschain_v1_tx_proto_rawDescData
}

var file_fx_gravity_crosschain_v1_tx_proto_msgTypes = make([]protoimpl.MessageInfo, 34)
var file_fx_gravity_crosschain_v1_tx_proto_goTypes = []interface{}{
	(*MsgBondedOracle)(nil),               // 0: fx.gravity.crosschain.v1.MsgBondedOracle
	(*MsgBondedOracleResponse)(nil),       // 1: fx.gravity.crosschain.v1.MsgBondedOracleResponse
	(*MsgAddDelegate)(nil),                // 2: fx.gravity.crosschain.v1.MsgAddDelegate
	(*MsgAddDelegateResponse)(nil),        // 3: fx.gravity.crosschain.v1.MsgAddDelegateResponse
	(*MsgReDelegate)(nil),                 // 4: fx.gravity.crosschain.v1.MsgReDelegate
	(*MsgReDelegateResponse)(nil),         // 5: fx.gravity.crosschain.v1.MsgReDelegateResponse
	(*MsgEditBridger)(nil),                // 6: fx.gravity.crosschain.v1.MsgEditBridger
	(*MsgEditBridgerResponse)(nil),        // 7: fx.gravity.crosschain.v1.MsgEditBridgerResponse
	(*MsgUnbondedOracle)(nil),             // 8: fx.gravity.crosschain.v1.MsgUnbondedOracle
	(*MsgUnbondedOracleResponse)(nil),     // 9: fx.gravity.crosschain.v1.MsgUnbondedOracleResponse
	(*MsgWithdrawReward)(nil),             // 10: fx.gravity.crosschain.v1.MsgWithdrawReward
	(*MsgWithdrawRewardResponse)(nil),     // 11: fx.gravity.crosschain.v1.MsgWithdrawRewardResponse
	(*MsgOracleSetConfirm)(nil),           // 12: fx.gravity.crosschain.v1.MsgOracleSetConfirm
	(*MsgOracleSetUpdatedClaim)(nil),      // 13: fx.gravity.crosschain.v1.MsgOracleSetUpdatedClaim
	(*MsgSendToFxClaim)(nil),              // 14: fx.gravity.crosschain.v1.MsgSendToFxClaim
	(*MsgBridgeCallClaim)(nil),            // 15: fx.gravity.crosschain.v1.MsgBridgeCallClaim
	(*MsgBridgeCallResultClaim)(nil),      // 16: fx.gravity.crosschain.v1.MsgBridgeCallResultClaim
	(*MsgConfirmBatch)(nil),               // 17: fx.gravity.crosschain.v1.MsgConfirmBatch
	(*MsgSendToExternalClaim)(nil),        // 18: fx.gravity.crosschain.v1.MsgSendToExternalClaim
	(*MsgBridgeTokenClaim)(nil),           // 19: fx.gravity.crosschain.v1.MsgBridgeTokenClaim
	(*MsgBridgeCallConfirm)(nil),          // 20: fx.gravity.crosschain.v1.MsgBridgeCallConfirm
	(*MsgUpdateParams)(nil),               // 21: fx.gravity.crosschain.v1.MsgUpdateParams
	(*MsgUpdateParamsResponse)(nil),       // 22: fx.gravity.crosschain.v1.MsgUpdateParamsResponse
	(*MsgUpdateChainOracles)(nil),         // 23: fx.gravity.crosschain.v1.MsgUpdateChainOracles
	(*MsgUpdateChainOraclesResponse)(nil), // 24: fx.gravity.crosschain.v1.MsgUpdateChainOraclesResponse
	(*MsgClaim)(nil),                      // 25: fx.gravity.crosschain.v1.MsgClaim
	(*MsgClaimResponse)(nil),              // 26: fx.gravity.crosschain.v1.MsgClaimResponse
	(*MsgConfirm)(nil),                    // 27: fx.gravity.crosschain.v1.MsgConfirm
	(*MsgConfirmResponse)(nil),            // 28: fx.gravity.crosschain.v1.MsgConfirmResponse
	(*MsgOracleSetConfirmResponse)(nil),   // 29: fx.gravity.crosschain.v1.MsgOracleSetConfirmResponse
	(*MsgConfirmBatchResponse)(nil),       // 30: fx.gravity.crosschain.v1.MsgConfirmBatchResponse
	(*MsgBridgeCallConfirmResponse)(nil),  // 31: fx.gravity.crosschain.v1.MsgBridgeCallConfirmResponse
	(*MsgSendToExternal)(nil),             // 32: fx.gravity.crosschain.v1.MsgSendToExternal
	(*MsgSendToExternalResponse)(nil),     // 33: fx.gravity.crosschain.v1.MsgSendToExternalResponse
	(*v1beta1.Coin)(nil),                  // 34: cosmos.base.v1beta1.Coin
	(*BridgeValidator)(nil),               // 35: fx.gravity.crosschain.v1.BridgeValidator
	(*Params)(nil),                        // 36: fx.gravity.crosschain.v1.Params
	(*anypb.Any)(nil),                     // 37: google.protobuf.Any
}
var file_fx_gravity_crosschain_v1_tx_proto_depIdxs = []int32{
	34, // 0: fx.gravity.crosschain.v1.MsgBondedOracle.delegate_amount:type_name -> cosmos.base.v1beta1.Coin
	34, // 1: fx.gravity.crosschain.v1.MsgAddDelegate.amount:type_name -> cosmos.base.v1beta1.Coin
	35, // 2: fx.gravity.crosschain.v1.MsgOracleSetUpdatedClaim.members:type_name -> fx.gravity.crosschain.v1.BridgeValidator
	36, // 3: fx.gravity.crosschain.v1.MsgUpdateParams.params:type_name -> fx.gravity.crosschain.v1.Params
	37, // 4: fx.gravity.crosschain.v1.MsgClaim.claim:type_name -> google.protobuf.Any
	37, // 5: fx.gravity.crosschain.v1.MsgConfirm.confirm:type_name -> google.protobuf.Any
	34, // 6: fx.gravity.crosschain.v1.MsgSendToExternal.amount:type_name -> cosmos.base.v1beta1.Coin
	34, // 7: fx.gravity.crosschain.v1.MsgSendToExternal.bridge_fee:type_name -> cosmos.base.v1beta1.Coin
	0,  // 8: fx.gravity.crosschain.v1.Msg.BondedOracle:input_type -> fx.gravity.crosschain.v1.MsgBondedOracle
	2,  // 9: fx.gravity.crosschain.v1.Msg.AddDelegate:input_type -> fx.gravity.crosschain.v1.MsgAddDelegate
	4,  // 10: fx.gravity.crosschain.v1.Msg.ReDelegate:input_type -> fx.gravity.crosschain.v1.MsgReDelegate
	6,  // 11: fx.gravity.crosschain.v1.Msg.EditBridger:input_type -> fx.gravity.crosschain.v1.MsgEditBridger
	10, // 12: fx.gravity.crosschain.v1.Msg.WithdrawReward:input_type -> fx.gravity.crosschain.v1.MsgWithdrawReward
	8,  // 13: fx.gravity.crosschain.v1.Msg.UnbondedOracle:input_type -> fx.gravity.crosschain.v1.MsgUnbondedOracle
	12, // 14: fx.gravity.crosschain.v1.Msg.OracleSetConfirm:input_type -> fx.gravity.crosschain.v1.MsgOracleSetConfirm
	17, // 15: fx.gravity.crosschain.v1.Msg.ConfirmBatch:input_type -> fx.gravity.crosschain.v1.MsgConfirmBatch
	20, // 16: fx.gravity.crosschain.v1.Msg.BridgeCallConfirm:input_type -> fx.gravity.crosschain.v1.MsgBridgeCallConfirm
	32, // 17: fx.gravity.crosschain.v1.Msg.SendToExternal:input_type -> fx.gravity.crosschain.v1.MsgSendToExternal
	21, // 18: fx.gravity.crosschain.v1.Msg.UpdateParams:input_type -> fx.gravity.crosschain.v1.MsgUpdateParams
	23, // 19: fx.gravity.crosschain.v1.Msg.UpdateChainOracles:input_type -> fx.gravity.crosschain.v1.MsgUpdateChainOracles
	25, // 20: fx.gravity.crosschain.v1.Msg.Claim:input_type -> fx.gravity.crosschain.v1.MsgClaim
	27, // 21: fx.gravity.crosschain.v1.Msg.Confirm:input_type -> fx.gravity.crosschain.v1.MsgConfirm
	1,  // 22: fx.gravity.crosschain.v1.Msg.BondedOracle:output_type -> fx.gravity.crosschain.v1.MsgBondedOracleResponse
	3,  // 23: fx.gravity.crosschain.v1.Msg.AddDelegate:output_type -> fx.gravity.crosschain.v1.MsgAddDelegateResponse
	5,  // 24: fx.gravity.crosschain.v1.Msg.ReDelegate:output_type -> fx.gravity.crosschain.v1.MsgReDelegateResponse
	7,  // 25: fx.gravity.crosschain.v1.Msg.EditBridger:output_type -> fx.gravity.crosschain.v1.MsgEditBridgerResponse
	11, // 26: fx.gravity.crosschain.v1.Msg.WithdrawReward:output_type -> fx.gravity.crosschain.v1.MsgWithdrawRewardResponse
	9,  // 27: fx.gravity.crosschain.v1.Msg.UnbondedOracle:output_type -> fx.gravity.crosschain.v1.MsgUnbondedOracleResponse
	29, // 28: fx.gravity.crosschain.v1.Msg.OracleSetConfirm:output_type -> fx.gravity.crosschain.v1.MsgOracleSetConfirmResponse
	30, // 29: fx.gravity.crosschain.v1.Msg.ConfirmBatch:output_type -> fx.gravity.crosschain.v1.MsgConfirmBatchResponse
	31, // 30: fx.gravity.crosschain.v1.Msg.BridgeCallConfirm:output_type -> fx.gravity.crosschain.v1.MsgBridgeCallConfirmResponse
	33, // 31: fx.gravity.crosschain.v1.Msg.SendToExternal:output_type -> fx.gravity.crosschain.v1.MsgSendToExternalResponse
	22, // 32: fx.gravity.crosschain.v1.Msg.UpdateParams:output_type -> fx.gravity.crosschain.v1.MsgUpdateParamsResponse
	24, // 33: fx.gravity.crosschain.v1.Msg.UpdateChainOracles:output_type -> fx.gravity.crosschain.v1.MsgUpdateChainOraclesResponse
	26, // 34: fx.gravity.crosschain.v1.Msg.Claim:output_type -> fx.gravity.crosschain.v1.MsgClaimResponse
	28, // 35: fx.gravity.crosschain.v1.Msg.Confirm:output_type -> fx.gravity.crosschain.v1.MsgConfirmResponse
	22, // [22:36] is the sub-list for method output_type
	8,  // [8:22] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_fx_gravity_crosschain_v1_tx_proto_init() }
func file_fx_gravity_crosschain_v1_tx_proto_init() {
	if File_fx_gravity_crosschain_v1_tx_proto != nil {
		return
	}
	file_fx_gravity_crosschain_v1_types_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_fx_gravity_crosschain_v1_tx_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgBondedOracle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fx_gravity_crosschain_v1_tx_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgBondedOracleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fx_gravity_crosschain_v1_tx_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgAddDelegate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fx_gravity_crosschain_v1_tx_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgAddDelegateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fx_gravity_crosschain_v1_tx_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgReDelegate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fx_gravity_crosschain_v1_tx_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgReDelegateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fx_gravity_crosschain_v1_tx_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgEditBridger); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fx_gravity_crosschain_v1_tx_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgEditBridgerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fx_gravity_crosschain_v1_tx_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgUnbondedOracle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fx_gravity_crosschain_v1_tx_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgUnbondedOracleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fx_gravity_crosschain_v1_tx_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgWithdrawReward); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fx_gravity_crosschain_v1_tx_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgWithdrawRewardResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fx_gravity_crosschain_v1_tx_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgOracleSetConfirm); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fx_gravity_crosschain_v1_tx_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgOracleSetUpdatedClaim); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fx_gravity_crosschain_v1_tx_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgSendToFxClaim); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fx_gravity_crosschain_v1_tx_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgBridgeCallClaim); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fx_gravity_crosschain_v1_tx_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgBridgeCallResultClaim); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fx_gravity_crosschain_v1_tx_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgConfirmBatch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fx_gravity_crosschain_v1_tx_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgSendToExternalClaim); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fx_gravity_crosschain_v1_tx_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgBridgeTokenClaim); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fx_gravity_crosschain_v1_tx_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgBridgeCallConfirm); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fx_gravity_crosschain_v1_tx_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgUpdateParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fx_gravity_crosschain_v1_tx_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgUpdateParamsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fx_gravity_crosschain_v1_tx_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgUpdateChainOracles); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fx_gravity_crosschain_v1_tx_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgUpdateChainOraclesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fx_gravity_crosschain_v1_tx_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgClaim); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fx_gravity_crosschain_v1_tx_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgClaimResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fx_gravity_crosschain_v1_tx_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgConfirm); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fx_gravity_crosschain_v1_tx_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgConfirmResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fx_gravity_crosschain_v1_tx_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgOracleSetConfirmResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fx_gravity_crosschain_v1_tx_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgConfirmBatchResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fx_gravity_crosschain_v1_tx_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgBridgeCallConfirmResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fx_gravity_crosschain_v1_tx_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgSendToExternal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fx_gravity_crosschain_v1_tx_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgSendToExternalResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_fx_gravity_crosschain_v1_tx_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   34,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_fx_gravity_crosschain_v1_tx_proto_goTypes,
		DependencyIndexes: file_fx_gravity_crosschain_v1_tx_proto_depIdxs,
		MessageInfos:      file_fx_gravity_crosschain_v1_tx_proto_msgTypes,
	}.Build()
	File_fx_gravity_crosschain_v1_tx_proto = out.File
	file_fx_gravity_crosschain_v1_tx_proto_rawDesc = nil
	file_fx_gravity_crosschain_v1_tx_proto_goTypes = nil
	file_fx_gravity_crosschain_v1_tx_proto_depIdxs = nil
}
