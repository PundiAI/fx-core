// Code generated by protoc-gen-go-pulsar. DO NOT EDIT.
package crosschainv1

import (
	_ "cosmossdk.io/api/amino"
	v1beta1 "cosmossdk.io/api/cosmos/base/v1beta1"
	_ "cosmossdk.io/api/cosmos/msg/v1"
	fmt "fmt"
	_ "github.com/cosmos/cosmos-proto"
	runtime "github.com/cosmos/cosmos-proto/runtime"
	_ "github.com/cosmos/gogoproto/gogoproto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoiface "google.golang.org/protobuf/runtime/protoiface"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	io "io"
	reflect "reflect"
	sync "sync"
)

var (
	md_InitCrossChainParamsProposal             protoreflect.MessageDescriptor
	fd_InitCrossChainParamsProposal_title       protoreflect.FieldDescriptor
	fd_InitCrossChainParamsProposal_description protoreflect.FieldDescriptor
	fd_InitCrossChainParamsProposal_params      protoreflect.FieldDescriptor
	fd_InitCrossChainParamsProposal_chain_name  protoreflect.FieldDescriptor
)

func init() {
	file_fx_gravity_crosschain_v1_crosschain_legacy_proto_init()
	md_InitCrossChainParamsProposal = File_fx_gravity_crosschain_v1_crosschain_legacy_proto.Messages().ByName("InitCrossChainParamsProposal")
	fd_InitCrossChainParamsProposal_title = md_InitCrossChainParamsProposal.Fields().ByName("title")
	fd_InitCrossChainParamsProposal_description = md_InitCrossChainParamsProposal.Fields().ByName("description")
	fd_InitCrossChainParamsProposal_params = md_InitCrossChainParamsProposal.Fields().ByName("params")
	fd_InitCrossChainParamsProposal_chain_name = md_InitCrossChainParamsProposal.Fields().ByName("chain_name")
}

var _ protoreflect.Message = (*fastReflection_InitCrossChainParamsProposal)(nil)

type fastReflection_InitCrossChainParamsProposal InitCrossChainParamsProposal

func (x *InitCrossChainParamsProposal) ProtoReflect() protoreflect.Message {
	return (*fastReflection_InitCrossChainParamsProposal)(x)
}

func (x *InitCrossChainParamsProposal) slowProtoReflect() protoreflect.Message {
	mi := &file_fx_gravity_crosschain_v1_crosschain_legacy_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_InitCrossChainParamsProposal_messageType fastReflection_InitCrossChainParamsProposal_messageType
var _ protoreflect.MessageType = fastReflection_InitCrossChainParamsProposal_messageType{}

type fastReflection_InitCrossChainParamsProposal_messageType struct{}

func (x fastReflection_InitCrossChainParamsProposal_messageType) Zero() protoreflect.Message {
	return (*fastReflection_InitCrossChainParamsProposal)(nil)
}
func (x fastReflection_InitCrossChainParamsProposal_messageType) New() protoreflect.Message {
	return new(fastReflection_InitCrossChainParamsProposal)
}
func (x fastReflection_InitCrossChainParamsProposal_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_InitCrossChainParamsProposal
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_InitCrossChainParamsProposal) Descriptor() protoreflect.MessageDescriptor {
	return md_InitCrossChainParamsProposal
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_InitCrossChainParamsProposal) Type() protoreflect.MessageType {
	return _fastReflection_InitCrossChainParamsProposal_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_InitCrossChainParamsProposal) New() protoreflect.Message {
	return new(fastReflection_InitCrossChainParamsProposal)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_InitCrossChainParamsProposal) Interface() protoreflect.ProtoMessage {
	return (*InitCrossChainParamsProposal)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_InitCrossChainParamsProposal) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Title != "" {
		value := protoreflect.ValueOfString(x.Title)
		if !f(fd_InitCrossChainParamsProposal_title, value) {
			return
		}
	}
	if x.Description != "" {
		value := protoreflect.ValueOfString(x.Description)
		if !f(fd_InitCrossChainParamsProposal_description, value) {
			return
		}
	}
	if x.Params != nil {
		value := protoreflect.ValueOfMessage(x.Params.ProtoReflect())
		if !f(fd_InitCrossChainParamsProposal_params, value) {
			return
		}
	}
	if x.ChainName != "" {
		value := protoreflect.ValueOfString(x.ChainName)
		if !f(fd_InitCrossChainParamsProposal_chain_name, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_InitCrossChainParamsProposal) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "fx.gravity.crosschain.v1.InitCrossChainParamsProposal.title":
		return x.Title != ""
	case "fx.gravity.crosschain.v1.InitCrossChainParamsProposal.description":
		return x.Description != ""
	case "fx.gravity.crosschain.v1.InitCrossChainParamsProposal.params":
		return x.Params != nil
	case "fx.gravity.crosschain.v1.InitCrossChainParamsProposal.chain_name":
		return x.ChainName != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.InitCrossChainParamsProposal"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.InitCrossChainParamsProposal does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_InitCrossChainParamsProposal) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "fx.gravity.crosschain.v1.InitCrossChainParamsProposal.title":
		x.Title = ""
	case "fx.gravity.crosschain.v1.InitCrossChainParamsProposal.description":
		x.Description = ""
	case "fx.gravity.crosschain.v1.InitCrossChainParamsProposal.params":
		x.Params = nil
	case "fx.gravity.crosschain.v1.InitCrossChainParamsProposal.chain_name":
		x.ChainName = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.InitCrossChainParamsProposal"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.InitCrossChainParamsProposal does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_InitCrossChainParamsProposal) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "fx.gravity.crosschain.v1.InitCrossChainParamsProposal.title":
		value := x.Title
		return protoreflect.ValueOfString(value)
	case "fx.gravity.crosschain.v1.InitCrossChainParamsProposal.description":
		value := x.Description
		return protoreflect.ValueOfString(value)
	case "fx.gravity.crosschain.v1.InitCrossChainParamsProposal.params":
		value := x.Params
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "fx.gravity.crosschain.v1.InitCrossChainParamsProposal.chain_name":
		value := x.ChainName
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.InitCrossChainParamsProposal"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.InitCrossChainParamsProposal does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_InitCrossChainParamsProposal) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "fx.gravity.crosschain.v1.InitCrossChainParamsProposal.title":
		x.Title = value.Interface().(string)
	case "fx.gravity.crosschain.v1.InitCrossChainParamsProposal.description":
		x.Description = value.Interface().(string)
	case "fx.gravity.crosschain.v1.InitCrossChainParamsProposal.params":
		x.Params = value.Message().Interface().(*ForkParams)
	case "fx.gravity.crosschain.v1.InitCrossChainParamsProposal.chain_name":
		x.ChainName = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.InitCrossChainParamsProposal"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.InitCrossChainParamsProposal does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_InitCrossChainParamsProposal) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "fx.gravity.crosschain.v1.InitCrossChainParamsProposal.params":
		if x.Params == nil {
			x.Params = new(ForkParams)
		}
		return protoreflect.ValueOfMessage(x.Params.ProtoReflect())
	case "fx.gravity.crosschain.v1.InitCrossChainParamsProposal.title":
		panic(fmt.Errorf("field title of message fx.gravity.crosschain.v1.InitCrossChainParamsProposal is not mutable"))
	case "fx.gravity.crosschain.v1.InitCrossChainParamsProposal.description":
		panic(fmt.Errorf("field description of message fx.gravity.crosschain.v1.InitCrossChainParamsProposal is not mutable"))
	case "fx.gravity.crosschain.v1.InitCrossChainParamsProposal.chain_name":
		panic(fmt.Errorf("field chain_name of message fx.gravity.crosschain.v1.InitCrossChainParamsProposal is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.InitCrossChainParamsProposal"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.InitCrossChainParamsProposal does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_InitCrossChainParamsProposal) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "fx.gravity.crosschain.v1.InitCrossChainParamsProposal.title":
		return protoreflect.ValueOfString("")
	case "fx.gravity.crosschain.v1.InitCrossChainParamsProposal.description":
		return protoreflect.ValueOfString("")
	case "fx.gravity.crosschain.v1.InitCrossChainParamsProposal.params":
		m := new(ForkParams)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "fx.gravity.crosschain.v1.InitCrossChainParamsProposal.chain_name":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.InitCrossChainParamsProposal"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.InitCrossChainParamsProposal does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_InitCrossChainParamsProposal) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in fx.gravity.crosschain.v1.InitCrossChainParamsProposal", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_InitCrossChainParamsProposal) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_InitCrossChainParamsProposal) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_InitCrossChainParamsProposal) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_InitCrossChainParamsProposal) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*InitCrossChainParamsProposal)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Title)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Description)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.Params != nil {
			l = options.Size(x.Params)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.ChainName)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*InitCrossChainParamsProposal)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.ChainName) > 0 {
			i -= len(x.ChainName)
			copy(dAtA[i:], x.ChainName)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ChainName)))
			i--
			dAtA[i] = 0x22
		}
		if x.Params != nil {
			encoded, err := options.Marshal(x.Params)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.Description) > 0 {
			i -= len(x.Description)
			copy(dAtA[i:], x.Description)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Description)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Title) > 0 {
			i -= len(x.Title)
			copy(dAtA[i:], x.Title)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Title)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*InitCrossChainParamsProposal)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: InitCrossChainParamsProposal: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: InitCrossChainParamsProposal: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Title = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Description", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Description = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Params", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Params == nil {
					x.Params = &ForkParams{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Params); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ChainName", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ChainName = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_ForkParams_9_list)(nil)

type _ForkParams_9_list struct {
	list *[]string
}

func (x *_ForkParams_9_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_ForkParams_9_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfString((*x.list)[i])
}

func (x *_ForkParams_9_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	(*x.list)[i] = concreteValue
}

func (x *_ForkParams_9_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	*x.list = append(*x.list, concreteValue)
}

func (x *_ForkParams_9_list) AppendMutable() protoreflect.Value {
	panic(fmt.Errorf("AppendMutable can not be called on message ForkParams at list field Oracles as it is not of Message kind"))
}

func (x *_ForkParams_9_list) Truncate(n int) {
	*x.list = (*x.list)[:n]
}

func (x *_ForkParams_9_list) NewElement() protoreflect.Value {
	v := ""
	return protoreflect.ValueOfString(v)
}

func (x *_ForkParams_9_list) IsValid() bool {
	return x.list != nil
}

var (
	md_ForkParams                                        protoreflect.MessageDescriptor
	fd_ForkParams_gravity_id                             protoreflect.FieldDescriptor
	fd_ForkParams_average_block_time                     protoreflect.FieldDescriptor
	fd_ForkParams_external_batch_timeout                 protoreflect.FieldDescriptor
	fd_ForkParams_average_external_block_time            protoreflect.FieldDescriptor
	fd_ForkParams_signed_window                          protoreflect.FieldDescriptor
	fd_ForkParams_slash_fraction                         protoreflect.FieldDescriptor
	fd_ForkParams_oracle_set_update_power_change_percent protoreflect.FieldDescriptor
	fd_ForkParams_ibc_transfer_timeout_height            protoreflect.FieldDescriptor
	fd_ForkParams_oracles                                protoreflect.FieldDescriptor
	fd_ForkParams_delegate_threshold                     protoreflect.FieldDescriptor
	fd_ForkParams_delegate_multiple                      protoreflect.FieldDescriptor
	fd_ForkParams_bridge_call_timeout                    protoreflect.FieldDescriptor
	fd_ForkParams_bridge_call_max_gas_limit              protoreflect.FieldDescriptor
	fd_ForkParams_enable_send_to_external_pending        protoreflect.FieldDescriptor
	fd_ForkParams_enable_bridge_call_pending             protoreflect.FieldDescriptor
)

func init() {
	file_fx_gravity_crosschain_v1_crosschain_legacy_proto_init()
	md_ForkParams = File_fx_gravity_crosschain_v1_crosschain_legacy_proto.Messages().ByName("ForkParams")
	fd_ForkParams_gravity_id = md_ForkParams.Fields().ByName("gravity_id")
	fd_ForkParams_average_block_time = md_ForkParams.Fields().ByName("average_block_time")
	fd_ForkParams_external_batch_timeout = md_ForkParams.Fields().ByName("external_batch_timeout")
	fd_ForkParams_average_external_block_time = md_ForkParams.Fields().ByName("average_external_block_time")
	fd_ForkParams_signed_window = md_ForkParams.Fields().ByName("signed_window")
	fd_ForkParams_slash_fraction = md_ForkParams.Fields().ByName("slash_fraction")
	fd_ForkParams_oracle_set_update_power_change_percent = md_ForkParams.Fields().ByName("oracle_set_update_power_change_percent")
	fd_ForkParams_ibc_transfer_timeout_height = md_ForkParams.Fields().ByName("ibc_transfer_timeout_height")
	fd_ForkParams_oracles = md_ForkParams.Fields().ByName("oracles")
	fd_ForkParams_delegate_threshold = md_ForkParams.Fields().ByName("delegate_threshold")
	fd_ForkParams_delegate_multiple = md_ForkParams.Fields().ByName("delegate_multiple")
	fd_ForkParams_bridge_call_timeout = md_ForkParams.Fields().ByName("bridge_call_timeout")
	fd_ForkParams_bridge_call_max_gas_limit = md_ForkParams.Fields().ByName("bridge_call_max_gas_limit")
	fd_ForkParams_enable_send_to_external_pending = md_ForkParams.Fields().ByName("enable_send_to_external_pending")
	fd_ForkParams_enable_bridge_call_pending = md_ForkParams.Fields().ByName("enable_bridge_call_pending")
}

var _ protoreflect.Message = (*fastReflection_ForkParams)(nil)

type fastReflection_ForkParams ForkParams

func (x *ForkParams) ProtoReflect() protoreflect.Message {
	return (*fastReflection_ForkParams)(x)
}

func (x *ForkParams) slowProtoReflect() protoreflect.Message {
	mi := &file_fx_gravity_crosschain_v1_crosschain_legacy_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_ForkParams_messageType fastReflection_ForkParams_messageType
var _ protoreflect.MessageType = fastReflection_ForkParams_messageType{}

type fastReflection_ForkParams_messageType struct{}

func (x fastReflection_ForkParams_messageType) Zero() protoreflect.Message {
	return (*fastReflection_ForkParams)(nil)
}
func (x fastReflection_ForkParams_messageType) New() protoreflect.Message {
	return new(fastReflection_ForkParams)
}
func (x fastReflection_ForkParams_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_ForkParams
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_ForkParams) Descriptor() protoreflect.MessageDescriptor {
	return md_ForkParams
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_ForkParams) Type() protoreflect.MessageType {
	return _fastReflection_ForkParams_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_ForkParams) New() protoreflect.Message {
	return new(fastReflection_ForkParams)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_ForkParams) Interface() protoreflect.ProtoMessage {
	return (*ForkParams)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_ForkParams) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.GravityId != "" {
		value := protoreflect.ValueOfString(x.GravityId)
		if !f(fd_ForkParams_gravity_id, value) {
			return
		}
	}
	if x.AverageBlockTime != uint64(0) {
		value := protoreflect.ValueOfUint64(x.AverageBlockTime)
		if !f(fd_ForkParams_average_block_time, value) {
			return
		}
	}
	if x.ExternalBatchTimeout != uint64(0) {
		value := protoreflect.ValueOfUint64(x.ExternalBatchTimeout)
		if !f(fd_ForkParams_external_batch_timeout, value) {
			return
		}
	}
	if x.AverageExternalBlockTime != uint64(0) {
		value := protoreflect.ValueOfUint64(x.AverageExternalBlockTime)
		if !f(fd_ForkParams_average_external_block_time, value) {
			return
		}
	}
	if x.SignedWindow != uint64(0) {
		value := protoreflect.ValueOfUint64(x.SignedWindow)
		if !f(fd_ForkParams_signed_window, value) {
			return
		}
	}
	if len(x.SlashFraction) != 0 {
		value := protoreflect.ValueOfBytes(x.SlashFraction)
		if !f(fd_ForkParams_slash_fraction, value) {
			return
		}
	}
	if len(x.OracleSetUpdatePowerChangePercent) != 0 {
		value := protoreflect.ValueOfBytes(x.OracleSetUpdatePowerChangePercent)
		if !f(fd_ForkParams_oracle_set_update_power_change_percent, value) {
			return
		}
	}
	if x.IbcTransferTimeoutHeight != uint64(0) {
		value := protoreflect.ValueOfUint64(x.IbcTransferTimeoutHeight)
		if !f(fd_ForkParams_ibc_transfer_timeout_height, value) {
			return
		}
	}
	if len(x.Oracles) != 0 {
		value := protoreflect.ValueOfList(&_ForkParams_9_list{list: &x.Oracles})
		if !f(fd_ForkParams_oracles, value) {
			return
		}
	}
	if x.DelegateThreshold != nil {
		value := protoreflect.ValueOfMessage(x.DelegateThreshold.ProtoReflect())
		if !f(fd_ForkParams_delegate_threshold, value) {
			return
		}
	}
	if x.DelegateMultiple != int64(0) {
		value := protoreflect.ValueOfInt64(x.DelegateMultiple)
		if !f(fd_ForkParams_delegate_multiple, value) {
			return
		}
	}
	if x.BridgeCallTimeout != uint64(0) {
		value := protoreflect.ValueOfUint64(x.BridgeCallTimeout)
		if !f(fd_ForkParams_bridge_call_timeout, value) {
			return
		}
	}
	if x.BridgeCallMaxGasLimit != uint64(0) {
		value := protoreflect.ValueOfUint64(x.BridgeCallMaxGasLimit)
		if !f(fd_ForkParams_bridge_call_max_gas_limit, value) {
			return
		}
	}
	if x.EnableSendToExternalPending != false {
		value := protoreflect.ValueOfBool(x.EnableSendToExternalPending)
		if !f(fd_ForkParams_enable_send_to_external_pending, value) {
			return
		}
	}
	if x.EnableBridgeCallPending != false {
		value := protoreflect.ValueOfBool(x.EnableBridgeCallPending)
		if !f(fd_ForkParams_enable_bridge_call_pending, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_ForkParams) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "fx.gravity.crosschain.v1.ForkParams.gravity_id":
		return x.GravityId != ""
	case "fx.gravity.crosschain.v1.ForkParams.average_block_time":
		return x.AverageBlockTime != uint64(0)
	case "fx.gravity.crosschain.v1.ForkParams.external_batch_timeout":
		return x.ExternalBatchTimeout != uint64(0)
	case "fx.gravity.crosschain.v1.ForkParams.average_external_block_time":
		return x.AverageExternalBlockTime != uint64(0)
	case "fx.gravity.crosschain.v1.ForkParams.signed_window":
		return x.SignedWindow != uint64(0)
	case "fx.gravity.crosschain.v1.ForkParams.slash_fraction":
		return len(x.SlashFraction) != 0
	case "fx.gravity.crosschain.v1.ForkParams.oracle_set_update_power_change_percent":
		return len(x.OracleSetUpdatePowerChangePercent) != 0
	case "fx.gravity.crosschain.v1.ForkParams.ibc_transfer_timeout_height":
		return x.IbcTransferTimeoutHeight != uint64(0)
	case "fx.gravity.crosschain.v1.ForkParams.oracles":
		return len(x.Oracles) != 0
	case "fx.gravity.crosschain.v1.ForkParams.delegate_threshold":
		return x.DelegateThreshold != nil
	case "fx.gravity.crosschain.v1.ForkParams.delegate_multiple":
		return x.DelegateMultiple != int64(0)
	case "fx.gravity.crosschain.v1.ForkParams.bridge_call_timeout":
		return x.BridgeCallTimeout != uint64(0)
	case "fx.gravity.crosschain.v1.ForkParams.bridge_call_max_gas_limit":
		return x.BridgeCallMaxGasLimit != uint64(0)
	case "fx.gravity.crosschain.v1.ForkParams.enable_send_to_external_pending":
		return x.EnableSendToExternalPending != false
	case "fx.gravity.crosschain.v1.ForkParams.enable_bridge_call_pending":
		return x.EnableBridgeCallPending != false
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.ForkParams"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.ForkParams does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ForkParams) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "fx.gravity.crosschain.v1.ForkParams.gravity_id":
		x.GravityId = ""
	case "fx.gravity.crosschain.v1.ForkParams.average_block_time":
		x.AverageBlockTime = uint64(0)
	case "fx.gravity.crosschain.v1.ForkParams.external_batch_timeout":
		x.ExternalBatchTimeout = uint64(0)
	case "fx.gravity.crosschain.v1.ForkParams.average_external_block_time":
		x.AverageExternalBlockTime = uint64(0)
	case "fx.gravity.crosschain.v1.ForkParams.signed_window":
		x.SignedWindow = uint64(0)
	case "fx.gravity.crosschain.v1.ForkParams.slash_fraction":
		x.SlashFraction = nil
	case "fx.gravity.crosschain.v1.ForkParams.oracle_set_update_power_change_percent":
		x.OracleSetUpdatePowerChangePercent = nil
	case "fx.gravity.crosschain.v1.ForkParams.ibc_transfer_timeout_height":
		x.IbcTransferTimeoutHeight = uint64(0)
	case "fx.gravity.crosschain.v1.ForkParams.oracles":
		x.Oracles = nil
	case "fx.gravity.crosschain.v1.ForkParams.delegate_threshold":
		x.DelegateThreshold = nil
	case "fx.gravity.crosschain.v1.ForkParams.delegate_multiple":
		x.DelegateMultiple = int64(0)
	case "fx.gravity.crosschain.v1.ForkParams.bridge_call_timeout":
		x.BridgeCallTimeout = uint64(0)
	case "fx.gravity.crosschain.v1.ForkParams.bridge_call_max_gas_limit":
		x.BridgeCallMaxGasLimit = uint64(0)
	case "fx.gravity.crosschain.v1.ForkParams.enable_send_to_external_pending":
		x.EnableSendToExternalPending = false
	case "fx.gravity.crosschain.v1.ForkParams.enable_bridge_call_pending":
		x.EnableBridgeCallPending = false
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.ForkParams"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.ForkParams does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_ForkParams) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "fx.gravity.crosschain.v1.ForkParams.gravity_id":
		value := x.GravityId
		return protoreflect.ValueOfString(value)
	case "fx.gravity.crosschain.v1.ForkParams.average_block_time":
		value := x.AverageBlockTime
		return protoreflect.ValueOfUint64(value)
	case "fx.gravity.crosschain.v1.ForkParams.external_batch_timeout":
		value := x.ExternalBatchTimeout
		return protoreflect.ValueOfUint64(value)
	case "fx.gravity.crosschain.v1.ForkParams.average_external_block_time":
		value := x.AverageExternalBlockTime
		return protoreflect.ValueOfUint64(value)
	case "fx.gravity.crosschain.v1.ForkParams.signed_window":
		value := x.SignedWindow
		return protoreflect.ValueOfUint64(value)
	case "fx.gravity.crosschain.v1.ForkParams.slash_fraction":
		value := x.SlashFraction
		return protoreflect.ValueOfBytes(value)
	case "fx.gravity.crosschain.v1.ForkParams.oracle_set_update_power_change_percent":
		value := x.OracleSetUpdatePowerChangePercent
		return protoreflect.ValueOfBytes(value)
	case "fx.gravity.crosschain.v1.ForkParams.ibc_transfer_timeout_height":
		value := x.IbcTransferTimeoutHeight
		return protoreflect.ValueOfUint64(value)
	case "fx.gravity.crosschain.v1.ForkParams.oracles":
		if len(x.Oracles) == 0 {
			return protoreflect.ValueOfList(&_ForkParams_9_list{})
		}
		listValue := &_ForkParams_9_list{list: &x.Oracles}
		return protoreflect.ValueOfList(listValue)
	case "fx.gravity.crosschain.v1.ForkParams.delegate_threshold":
		value := x.DelegateThreshold
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "fx.gravity.crosschain.v1.ForkParams.delegate_multiple":
		value := x.DelegateMultiple
		return protoreflect.ValueOfInt64(value)
	case "fx.gravity.crosschain.v1.ForkParams.bridge_call_timeout":
		value := x.BridgeCallTimeout
		return protoreflect.ValueOfUint64(value)
	case "fx.gravity.crosschain.v1.ForkParams.bridge_call_max_gas_limit":
		value := x.BridgeCallMaxGasLimit
		return protoreflect.ValueOfUint64(value)
	case "fx.gravity.crosschain.v1.ForkParams.enable_send_to_external_pending":
		value := x.EnableSendToExternalPending
		return protoreflect.ValueOfBool(value)
	case "fx.gravity.crosschain.v1.ForkParams.enable_bridge_call_pending":
		value := x.EnableBridgeCallPending
		return protoreflect.ValueOfBool(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.ForkParams"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.ForkParams does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ForkParams) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "fx.gravity.crosschain.v1.ForkParams.gravity_id":
		x.GravityId = value.Interface().(string)
	case "fx.gravity.crosschain.v1.ForkParams.average_block_time":
		x.AverageBlockTime = value.Uint()
	case "fx.gravity.crosschain.v1.ForkParams.external_batch_timeout":
		x.ExternalBatchTimeout = value.Uint()
	case "fx.gravity.crosschain.v1.ForkParams.average_external_block_time":
		x.AverageExternalBlockTime = value.Uint()
	case "fx.gravity.crosschain.v1.ForkParams.signed_window":
		x.SignedWindow = value.Uint()
	case "fx.gravity.crosschain.v1.ForkParams.slash_fraction":
		x.SlashFraction = value.Bytes()
	case "fx.gravity.crosschain.v1.ForkParams.oracle_set_update_power_change_percent":
		x.OracleSetUpdatePowerChangePercent = value.Bytes()
	case "fx.gravity.crosschain.v1.ForkParams.ibc_transfer_timeout_height":
		x.IbcTransferTimeoutHeight = value.Uint()
	case "fx.gravity.crosschain.v1.ForkParams.oracles":
		lv := value.List()
		clv := lv.(*_ForkParams_9_list)
		x.Oracles = *clv.list
	case "fx.gravity.crosschain.v1.ForkParams.delegate_threshold":
		x.DelegateThreshold = value.Message().Interface().(*v1beta1.Coin)
	case "fx.gravity.crosschain.v1.ForkParams.delegate_multiple":
		x.DelegateMultiple = value.Int()
	case "fx.gravity.crosschain.v1.ForkParams.bridge_call_timeout":
		x.BridgeCallTimeout = value.Uint()
	case "fx.gravity.crosschain.v1.ForkParams.bridge_call_max_gas_limit":
		x.BridgeCallMaxGasLimit = value.Uint()
	case "fx.gravity.crosschain.v1.ForkParams.enable_send_to_external_pending":
		x.EnableSendToExternalPending = value.Bool()
	case "fx.gravity.crosschain.v1.ForkParams.enable_bridge_call_pending":
		x.EnableBridgeCallPending = value.Bool()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.ForkParams"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.ForkParams does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ForkParams) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "fx.gravity.crosschain.v1.ForkParams.oracles":
		if x.Oracles == nil {
			x.Oracles = []string{}
		}
		value := &_ForkParams_9_list{list: &x.Oracles}
		return protoreflect.ValueOfList(value)
	case "fx.gravity.crosschain.v1.ForkParams.delegate_threshold":
		if x.DelegateThreshold == nil {
			x.DelegateThreshold = new(v1beta1.Coin)
		}
		return protoreflect.ValueOfMessage(x.DelegateThreshold.ProtoReflect())
	case "fx.gravity.crosschain.v1.ForkParams.gravity_id":
		panic(fmt.Errorf("field gravity_id of message fx.gravity.crosschain.v1.ForkParams is not mutable"))
	case "fx.gravity.crosschain.v1.ForkParams.average_block_time":
		panic(fmt.Errorf("field average_block_time of message fx.gravity.crosschain.v1.ForkParams is not mutable"))
	case "fx.gravity.crosschain.v1.ForkParams.external_batch_timeout":
		panic(fmt.Errorf("field external_batch_timeout of message fx.gravity.crosschain.v1.ForkParams is not mutable"))
	case "fx.gravity.crosschain.v1.ForkParams.average_external_block_time":
		panic(fmt.Errorf("field average_external_block_time of message fx.gravity.crosschain.v1.ForkParams is not mutable"))
	case "fx.gravity.crosschain.v1.ForkParams.signed_window":
		panic(fmt.Errorf("field signed_window of message fx.gravity.crosschain.v1.ForkParams is not mutable"))
	case "fx.gravity.crosschain.v1.ForkParams.slash_fraction":
		panic(fmt.Errorf("field slash_fraction of message fx.gravity.crosschain.v1.ForkParams is not mutable"))
	case "fx.gravity.crosschain.v1.ForkParams.oracle_set_update_power_change_percent":
		panic(fmt.Errorf("field oracle_set_update_power_change_percent of message fx.gravity.crosschain.v1.ForkParams is not mutable"))
	case "fx.gravity.crosschain.v1.ForkParams.ibc_transfer_timeout_height":
		panic(fmt.Errorf("field ibc_transfer_timeout_height of message fx.gravity.crosschain.v1.ForkParams is not mutable"))
	case "fx.gravity.crosschain.v1.ForkParams.delegate_multiple":
		panic(fmt.Errorf("field delegate_multiple of message fx.gravity.crosschain.v1.ForkParams is not mutable"))
	case "fx.gravity.crosschain.v1.ForkParams.bridge_call_timeout":
		panic(fmt.Errorf("field bridge_call_timeout of message fx.gravity.crosschain.v1.ForkParams is not mutable"))
	case "fx.gravity.crosschain.v1.ForkParams.bridge_call_max_gas_limit":
		panic(fmt.Errorf("field bridge_call_max_gas_limit of message fx.gravity.crosschain.v1.ForkParams is not mutable"))
	case "fx.gravity.crosschain.v1.ForkParams.enable_send_to_external_pending":
		panic(fmt.Errorf("field enable_send_to_external_pending of message fx.gravity.crosschain.v1.ForkParams is not mutable"))
	case "fx.gravity.crosschain.v1.ForkParams.enable_bridge_call_pending":
		panic(fmt.Errorf("field enable_bridge_call_pending of message fx.gravity.crosschain.v1.ForkParams is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.ForkParams"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.ForkParams does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_ForkParams) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "fx.gravity.crosschain.v1.ForkParams.gravity_id":
		return protoreflect.ValueOfString("")
	case "fx.gravity.crosschain.v1.ForkParams.average_block_time":
		return protoreflect.ValueOfUint64(uint64(0))
	case "fx.gravity.crosschain.v1.ForkParams.external_batch_timeout":
		return protoreflect.ValueOfUint64(uint64(0))
	case "fx.gravity.crosschain.v1.ForkParams.average_external_block_time":
		return protoreflect.ValueOfUint64(uint64(0))
	case "fx.gravity.crosschain.v1.ForkParams.signed_window":
		return protoreflect.ValueOfUint64(uint64(0))
	case "fx.gravity.crosschain.v1.ForkParams.slash_fraction":
		return protoreflect.ValueOfBytes(nil)
	case "fx.gravity.crosschain.v1.ForkParams.oracle_set_update_power_change_percent":
		return protoreflect.ValueOfBytes(nil)
	case "fx.gravity.crosschain.v1.ForkParams.ibc_transfer_timeout_height":
		return protoreflect.ValueOfUint64(uint64(0))
	case "fx.gravity.crosschain.v1.ForkParams.oracles":
		list := []string{}
		return protoreflect.ValueOfList(&_ForkParams_9_list{list: &list})
	case "fx.gravity.crosschain.v1.ForkParams.delegate_threshold":
		m := new(v1beta1.Coin)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "fx.gravity.crosschain.v1.ForkParams.delegate_multiple":
		return protoreflect.ValueOfInt64(int64(0))
	case "fx.gravity.crosschain.v1.ForkParams.bridge_call_timeout":
		return protoreflect.ValueOfUint64(uint64(0))
	case "fx.gravity.crosschain.v1.ForkParams.bridge_call_max_gas_limit":
		return protoreflect.ValueOfUint64(uint64(0))
	case "fx.gravity.crosschain.v1.ForkParams.enable_send_to_external_pending":
		return protoreflect.ValueOfBool(false)
	case "fx.gravity.crosschain.v1.ForkParams.enable_bridge_call_pending":
		return protoreflect.ValueOfBool(false)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.ForkParams"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.ForkParams does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_ForkParams) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in fx.gravity.crosschain.v1.ForkParams", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_ForkParams) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ForkParams) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_ForkParams) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_ForkParams) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*ForkParams)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.GravityId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.AverageBlockTime != 0 {
			n += 1 + runtime.Sov(uint64(x.AverageBlockTime))
		}
		if x.ExternalBatchTimeout != 0 {
			n += 1 + runtime.Sov(uint64(x.ExternalBatchTimeout))
		}
		if x.AverageExternalBlockTime != 0 {
			n += 1 + runtime.Sov(uint64(x.AverageExternalBlockTime))
		}
		if x.SignedWindow != 0 {
			n += 1 + runtime.Sov(uint64(x.SignedWindow))
		}
		l = len(x.SlashFraction)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.OracleSetUpdatePowerChangePercent)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.IbcTransferTimeoutHeight != 0 {
			n += 1 + runtime.Sov(uint64(x.IbcTransferTimeoutHeight))
		}
		if len(x.Oracles) > 0 {
			for _, s := range x.Oracles {
				l = len(s)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.DelegateThreshold != nil {
			l = options.Size(x.DelegateThreshold)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.DelegateMultiple != 0 {
			n += 1 + runtime.Sov(uint64(x.DelegateMultiple))
		}
		if x.BridgeCallTimeout != 0 {
			n += 1 + runtime.Sov(uint64(x.BridgeCallTimeout))
		}
		if x.BridgeCallMaxGasLimit != 0 {
			n += 1 + runtime.Sov(uint64(x.BridgeCallMaxGasLimit))
		}
		if x.EnableSendToExternalPending {
			n += 2
		}
		if x.EnableBridgeCallPending {
			n += 2
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*ForkParams)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.EnableBridgeCallPending {
			i--
			if x.EnableBridgeCallPending {
				dAtA[i] = 1
			} else {
				dAtA[i] = 0
			}
			i--
			dAtA[i] = 0x78
		}
		if x.EnableSendToExternalPending {
			i--
			if x.EnableSendToExternalPending {
				dAtA[i] = 1
			} else {
				dAtA[i] = 0
			}
			i--
			dAtA[i] = 0x70
		}
		if x.BridgeCallMaxGasLimit != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.BridgeCallMaxGasLimit))
			i--
			dAtA[i] = 0x68
		}
		if x.BridgeCallTimeout != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.BridgeCallTimeout))
			i--
			dAtA[i] = 0x60
		}
		if x.DelegateMultiple != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.DelegateMultiple))
			i--
			dAtA[i] = 0x58
		}
		if x.DelegateThreshold != nil {
			encoded, err := options.Marshal(x.DelegateThreshold)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x52
		}
		if len(x.Oracles) > 0 {
			for iNdEx := len(x.Oracles) - 1; iNdEx >= 0; iNdEx-- {
				i -= len(x.Oracles[iNdEx])
				copy(dAtA[i:], x.Oracles[iNdEx])
				i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Oracles[iNdEx])))
				i--
				dAtA[i] = 0x4a
			}
		}
		if x.IbcTransferTimeoutHeight != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.IbcTransferTimeoutHeight))
			i--
			dAtA[i] = 0x40
		}
		if len(x.OracleSetUpdatePowerChangePercent) > 0 {
			i -= len(x.OracleSetUpdatePowerChangePercent)
			copy(dAtA[i:], x.OracleSetUpdatePowerChangePercent)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.OracleSetUpdatePowerChangePercent)))
			i--
			dAtA[i] = 0x3a
		}
		if len(x.SlashFraction) > 0 {
			i -= len(x.SlashFraction)
			copy(dAtA[i:], x.SlashFraction)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.SlashFraction)))
			i--
			dAtA[i] = 0x32
		}
		if x.SignedWindow != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.SignedWindow))
			i--
			dAtA[i] = 0x28
		}
		if x.AverageExternalBlockTime != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.AverageExternalBlockTime))
			i--
			dAtA[i] = 0x20
		}
		if x.ExternalBatchTimeout != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.ExternalBatchTimeout))
			i--
			dAtA[i] = 0x18
		}
		if x.AverageBlockTime != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.AverageBlockTime))
			i--
			dAtA[i] = 0x10
		}
		if len(x.GravityId) > 0 {
			i -= len(x.GravityId)
			copy(dAtA[i:], x.GravityId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.GravityId)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*ForkParams)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: ForkParams: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: ForkParams: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field GravityId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.GravityId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field AverageBlockTime", wireType)
				}
				x.AverageBlockTime = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.AverageBlockTime |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 3:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ExternalBatchTimeout", wireType)
				}
				x.ExternalBatchTimeout = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.ExternalBatchTimeout |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 4:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field AverageExternalBlockTime", wireType)
				}
				x.AverageExternalBlockTime = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.AverageExternalBlockTime |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 5:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field SignedWindow", wireType)
				}
				x.SignedWindow = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.SignedWindow |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 6:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field SlashFraction", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.SlashFraction = append(x.SlashFraction[:0], dAtA[iNdEx:postIndex]...)
				if x.SlashFraction == nil {
					x.SlashFraction = []byte{}
				}
				iNdEx = postIndex
			case 7:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field OracleSetUpdatePowerChangePercent", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.OracleSetUpdatePowerChangePercent = append(x.OracleSetUpdatePowerChangePercent[:0], dAtA[iNdEx:postIndex]...)
				if x.OracleSetUpdatePowerChangePercent == nil {
					x.OracleSetUpdatePowerChangePercent = []byte{}
				}
				iNdEx = postIndex
			case 8:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field IbcTransferTimeoutHeight", wireType)
				}
				x.IbcTransferTimeoutHeight = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.IbcTransferTimeoutHeight |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 9:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Oracles", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Oracles = append(x.Oracles, string(dAtA[iNdEx:postIndex]))
				iNdEx = postIndex
			case 10:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field DelegateThreshold", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.DelegateThreshold == nil {
					x.DelegateThreshold = &v1beta1.Coin{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.DelegateThreshold); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 11:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field DelegateMultiple", wireType)
				}
				x.DelegateMultiple = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.DelegateMultiple |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 12:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BridgeCallTimeout", wireType)
				}
				x.BridgeCallTimeout = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.BridgeCallTimeout |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 13:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BridgeCallMaxGasLimit", wireType)
				}
				x.BridgeCallMaxGasLimit = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.BridgeCallMaxGasLimit |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 14:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field EnableSendToExternalPending", wireType)
				}
				var v int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				x.EnableSendToExternalPending = bool(v != 0)
			case 15:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field EnableBridgeCallPending", wireType)
				}
				var v int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				x.EnableBridgeCallPending = bool(v != 0)
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_UpdateChainOraclesProposal_3_list)(nil)

type _UpdateChainOraclesProposal_3_list struct {
	list *[]string
}

func (x *_UpdateChainOraclesProposal_3_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_UpdateChainOraclesProposal_3_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfString((*x.list)[i])
}

func (x *_UpdateChainOraclesProposal_3_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	(*x.list)[i] = concreteValue
}

func (x *_UpdateChainOraclesProposal_3_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	*x.list = append(*x.list, concreteValue)
}

func (x *_UpdateChainOraclesProposal_3_list) AppendMutable() protoreflect.Value {
	panic(fmt.Errorf("AppendMutable can not be called on message UpdateChainOraclesProposal at list field Oracles as it is not of Message kind"))
}

func (x *_UpdateChainOraclesProposal_3_list) Truncate(n int) {
	*x.list = (*x.list)[:n]
}

func (x *_UpdateChainOraclesProposal_3_list) NewElement() protoreflect.Value {
	v := ""
	return protoreflect.ValueOfString(v)
}

func (x *_UpdateChainOraclesProposal_3_list) IsValid() bool {
	return x.list != nil
}

var (
	md_UpdateChainOraclesProposal             protoreflect.MessageDescriptor
	fd_UpdateChainOraclesProposal_title       protoreflect.FieldDescriptor
	fd_UpdateChainOraclesProposal_description protoreflect.FieldDescriptor
	fd_UpdateChainOraclesProposal_oracles     protoreflect.FieldDescriptor
	fd_UpdateChainOraclesProposal_chain_name  protoreflect.FieldDescriptor
)

func init() {
	file_fx_gravity_crosschain_v1_crosschain_legacy_proto_init()
	md_UpdateChainOraclesProposal = File_fx_gravity_crosschain_v1_crosschain_legacy_proto.Messages().ByName("UpdateChainOraclesProposal")
	fd_UpdateChainOraclesProposal_title = md_UpdateChainOraclesProposal.Fields().ByName("title")
	fd_UpdateChainOraclesProposal_description = md_UpdateChainOraclesProposal.Fields().ByName("description")
	fd_UpdateChainOraclesProposal_oracles = md_UpdateChainOraclesProposal.Fields().ByName("oracles")
	fd_UpdateChainOraclesProposal_chain_name = md_UpdateChainOraclesProposal.Fields().ByName("chain_name")
}

var _ protoreflect.Message = (*fastReflection_UpdateChainOraclesProposal)(nil)

type fastReflection_UpdateChainOraclesProposal UpdateChainOraclesProposal

func (x *UpdateChainOraclesProposal) ProtoReflect() protoreflect.Message {
	return (*fastReflection_UpdateChainOraclesProposal)(x)
}

func (x *UpdateChainOraclesProposal) slowProtoReflect() protoreflect.Message {
	mi := &file_fx_gravity_crosschain_v1_crosschain_legacy_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_UpdateChainOraclesProposal_messageType fastReflection_UpdateChainOraclesProposal_messageType
var _ protoreflect.MessageType = fastReflection_UpdateChainOraclesProposal_messageType{}

type fastReflection_UpdateChainOraclesProposal_messageType struct{}

func (x fastReflection_UpdateChainOraclesProposal_messageType) Zero() protoreflect.Message {
	return (*fastReflection_UpdateChainOraclesProposal)(nil)
}
func (x fastReflection_UpdateChainOraclesProposal_messageType) New() protoreflect.Message {
	return new(fastReflection_UpdateChainOraclesProposal)
}
func (x fastReflection_UpdateChainOraclesProposal_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_UpdateChainOraclesProposal
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_UpdateChainOraclesProposal) Descriptor() protoreflect.MessageDescriptor {
	return md_UpdateChainOraclesProposal
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_UpdateChainOraclesProposal) Type() protoreflect.MessageType {
	return _fastReflection_UpdateChainOraclesProposal_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_UpdateChainOraclesProposal) New() protoreflect.Message {
	return new(fastReflection_UpdateChainOraclesProposal)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_UpdateChainOraclesProposal) Interface() protoreflect.ProtoMessage {
	return (*UpdateChainOraclesProposal)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_UpdateChainOraclesProposal) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Title != "" {
		value := protoreflect.ValueOfString(x.Title)
		if !f(fd_UpdateChainOraclesProposal_title, value) {
			return
		}
	}
	if x.Description != "" {
		value := protoreflect.ValueOfString(x.Description)
		if !f(fd_UpdateChainOraclesProposal_description, value) {
			return
		}
	}
	if len(x.Oracles) != 0 {
		value := protoreflect.ValueOfList(&_UpdateChainOraclesProposal_3_list{list: &x.Oracles})
		if !f(fd_UpdateChainOraclesProposal_oracles, value) {
			return
		}
	}
	if x.ChainName != "" {
		value := protoreflect.ValueOfString(x.ChainName)
		if !f(fd_UpdateChainOraclesProposal_chain_name, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_UpdateChainOraclesProposal) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "fx.gravity.crosschain.v1.UpdateChainOraclesProposal.title":
		return x.Title != ""
	case "fx.gravity.crosschain.v1.UpdateChainOraclesProposal.description":
		return x.Description != ""
	case "fx.gravity.crosschain.v1.UpdateChainOraclesProposal.oracles":
		return len(x.Oracles) != 0
	case "fx.gravity.crosschain.v1.UpdateChainOraclesProposal.chain_name":
		return x.ChainName != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.UpdateChainOraclesProposal"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.UpdateChainOraclesProposal does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_UpdateChainOraclesProposal) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "fx.gravity.crosschain.v1.UpdateChainOraclesProposal.title":
		x.Title = ""
	case "fx.gravity.crosschain.v1.UpdateChainOraclesProposal.description":
		x.Description = ""
	case "fx.gravity.crosschain.v1.UpdateChainOraclesProposal.oracles":
		x.Oracles = nil
	case "fx.gravity.crosschain.v1.UpdateChainOraclesProposal.chain_name":
		x.ChainName = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.UpdateChainOraclesProposal"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.UpdateChainOraclesProposal does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_UpdateChainOraclesProposal) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "fx.gravity.crosschain.v1.UpdateChainOraclesProposal.title":
		value := x.Title
		return protoreflect.ValueOfString(value)
	case "fx.gravity.crosschain.v1.UpdateChainOraclesProposal.description":
		value := x.Description
		return protoreflect.ValueOfString(value)
	case "fx.gravity.crosschain.v1.UpdateChainOraclesProposal.oracles":
		if len(x.Oracles) == 0 {
			return protoreflect.ValueOfList(&_UpdateChainOraclesProposal_3_list{})
		}
		listValue := &_UpdateChainOraclesProposal_3_list{list: &x.Oracles}
		return protoreflect.ValueOfList(listValue)
	case "fx.gravity.crosschain.v1.UpdateChainOraclesProposal.chain_name":
		value := x.ChainName
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.UpdateChainOraclesProposal"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.UpdateChainOraclesProposal does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_UpdateChainOraclesProposal) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "fx.gravity.crosschain.v1.UpdateChainOraclesProposal.title":
		x.Title = value.Interface().(string)
	case "fx.gravity.crosschain.v1.UpdateChainOraclesProposal.description":
		x.Description = value.Interface().(string)
	case "fx.gravity.crosschain.v1.UpdateChainOraclesProposal.oracles":
		lv := value.List()
		clv := lv.(*_UpdateChainOraclesProposal_3_list)
		x.Oracles = *clv.list
	case "fx.gravity.crosschain.v1.UpdateChainOraclesProposal.chain_name":
		x.ChainName = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.UpdateChainOraclesProposal"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.UpdateChainOraclesProposal does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_UpdateChainOraclesProposal) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "fx.gravity.crosschain.v1.UpdateChainOraclesProposal.oracles":
		if x.Oracles == nil {
			x.Oracles = []string{}
		}
		value := &_UpdateChainOraclesProposal_3_list{list: &x.Oracles}
		return protoreflect.ValueOfList(value)
	case "fx.gravity.crosschain.v1.UpdateChainOraclesProposal.title":
		panic(fmt.Errorf("field title of message fx.gravity.crosschain.v1.UpdateChainOraclesProposal is not mutable"))
	case "fx.gravity.crosschain.v1.UpdateChainOraclesProposal.description":
		panic(fmt.Errorf("field description of message fx.gravity.crosschain.v1.UpdateChainOraclesProposal is not mutable"))
	case "fx.gravity.crosschain.v1.UpdateChainOraclesProposal.chain_name":
		panic(fmt.Errorf("field chain_name of message fx.gravity.crosschain.v1.UpdateChainOraclesProposal is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.UpdateChainOraclesProposal"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.UpdateChainOraclesProposal does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_UpdateChainOraclesProposal) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "fx.gravity.crosschain.v1.UpdateChainOraclesProposal.title":
		return protoreflect.ValueOfString("")
	case "fx.gravity.crosschain.v1.UpdateChainOraclesProposal.description":
		return protoreflect.ValueOfString("")
	case "fx.gravity.crosschain.v1.UpdateChainOraclesProposal.oracles":
		list := []string{}
		return protoreflect.ValueOfList(&_UpdateChainOraclesProposal_3_list{list: &list})
	case "fx.gravity.crosschain.v1.UpdateChainOraclesProposal.chain_name":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.UpdateChainOraclesProposal"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.UpdateChainOraclesProposal does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_UpdateChainOraclesProposal) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in fx.gravity.crosschain.v1.UpdateChainOraclesProposal", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_UpdateChainOraclesProposal) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_UpdateChainOraclesProposal) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_UpdateChainOraclesProposal) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_UpdateChainOraclesProposal) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*UpdateChainOraclesProposal)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Title)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Description)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if len(x.Oracles) > 0 {
			for _, s := range x.Oracles {
				l = len(s)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		l = len(x.ChainName)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*UpdateChainOraclesProposal)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.ChainName) > 0 {
			i -= len(x.ChainName)
			copy(dAtA[i:], x.ChainName)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ChainName)))
			i--
			dAtA[i] = 0x22
		}
		if len(x.Oracles) > 0 {
			for iNdEx := len(x.Oracles) - 1; iNdEx >= 0; iNdEx-- {
				i -= len(x.Oracles[iNdEx])
				copy(dAtA[i:], x.Oracles[iNdEx])
				i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Oracles[iNdEx])))
				i--
				dAtA[i] = 0x1a
			}
		}
		if len(x.Description) > 0 {
			i -= len(x.Description)
			copy(dAtA[i:], x.Description)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Description)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Title) > 0 {
			i -= len(x.Title)
			copy(dAtA[i:], x.Title)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Title)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*UpdateChainOraclesProposal)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: UpdateChainOraclesProposal: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: UpdateChainOraclesProposal: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Title = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Description", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Description = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Oracles", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Oracles = append(x.Oracles, string(dAtA[iNdEx:postIndex]))
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ChainName", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ChainName = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgSetOrchestratorAddress                  protoreflect.MessageDescriptor
	fd_MsgSetOrchestratorAddress_oracle_address   protoreflect.FieldDescriptor
	fd_MsgSetOrchestratorAddress_bridger_address  protoreflect.FieldDescriptor
	fd_MsgSetOrchestratorAddress_external_address protoreflect.FieldDescriptor
	fd_MsgSetOrchestratorAddress_deposit          protoreflect.FieldDescriptor
	fd_MsgSetOrchestratorAddress_chain_name       protoreflect.FieldDescriptor
)

func init() {
	file_fx_gravity_crosschain_v1_crosschain_legacy_proto_init()
	md_MsgSetOrchestratorAddress = File_fx_gravity_crosschain_v1_crosschain_legacy_proto.Messages().ByName("MsgSetOrchestratorAddress")
	fd_MsgSetOrchestratorAddress_oracle_address = md_MsgSetOrchestratorAddress.Fields().ByName("oracle_address")
	fd_MsgSetOrchestratorAddress_bridger_address = md_MsgSetOrchestratorAddress.Fields().ByName("bridger_address")
	fd_MsgSetOrchestratorAddress_external_address = md_MsgSetOrchestratorAddress.Fields().ByName("external_address")
	fd_MsgSetOrchestratorAddress_deposit = md_MsgSetOrchestratorAddress.Fields().ByName("deposit")
	fd_MsgSetOrchestratorAddress_chain_name = md_MsgSetOrchestratorAddress.Fields().ByName("chain_name")
}

var _ protoreflect.Message = (*fastReflection_MsgSetOrchestratorAddress)(nil)

type fastReflection_MsgSetOrchestratorAddress MsgSetOrchestratorAddress

func (x *MsgSetOrchestratorAddress) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgSetOrchestratorAddress)(x)
}

func (x *MsgSetOrchestratorAddress) slowProtoReflect() protoreflect.Message {
	mi := &file_fx_gravity_crosschain_v1_crosschain_legacy_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgSetOrchestratorAddress_messageType fastReflection_MsgSetOrchestratorAddress_messageType
var _ protoreflect.MessageType = fastReflection_MsgSetOrchestratorAddress_messageType{}

type fastReflection_MsgSetOrchestratorAddress_messageType struct{}

func (x fastReflection_MsgSetOrchestratorAddress_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgSetOrchestratorAddress)(nil)
}
func (x fastReflection_MsgSetOrchestratorAddress_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgSetOrchestratorAddress)
}
func (x fastReflection_MsgSetOrchestratorAddress_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgSetOrchestratorAddress
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgSetOrchestratorAddress) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgSetOrchestratorAddress
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgSetOrchestratorAddress) Type() protoreflect.MessageType {
	return _fastReflection_MsgSetOrchestratorAddress_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgSetOrchestratorAddress) New() protoreflect.Message {
	return new(fastReflection_MsgSetOrchestratorAddress)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgSetOrchestratorAddress) Interface() protoreflect.ProtoMessage {
	return (*MsgSetOrchestratorAddress)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgSetOrchestratorAddress) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.OracleAddress != "" {
		value := protoreflect.ValueOfString(x.OracleAddress)
		if !f(fd_MsgSetOrchestratorAddress_oracle_address, value) {
			return
		}
	}
	if x.BridgerAddress != "" {
		value := protoreflect.ValueOfString(x.BridgerAddress)
		if !f(fd_MsgSetOrchestratorAddress_bridger_address, value) {
			return
		}
	}
	if x.ExternalAddress != "" {
		value := protoreflect.ValueOfString(x.ExternalAddress)
		if !f(fd_MsgSetOrchestratorAddress_external_address, value) {
			return
		}
	}
	if x.Deposit != nil {
		value := protoreflect.ValueOfMessage(x.Deposit.ProtoReflect())
		if !f(fd_MsgSetOrchestratorAddress_deposit, value) {
			return
		}
	}
	if x.ChainName != "" {
		value := protoreflect.ValueOfString(x.ChainName)
		if !f(fd_MsgSetOrchestratorAddress_chain_name, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgSetOrchestratorAddress) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "fx.gravity.crosschain.v1.MsgSetOrchestratorAddress.oracle_address":
		return x.OracleAddress != ""
	case "fx.gravity.crosschain.v1.MsgSetOrchestratorAddress.bridger_address":
		return x.BridgerAddress != ""
	case "fx.gravity.crosschain.v1.MsgSetOrchestratorAddress.external_address":
		return x.ExternalAddress != ""
	case "fx.gravity.crosschain.v1.MsgSetOrchestratorAddress.deposit":
		return x.Deposit != nil
	case "fx.gravity.crosschain.v1.MsgSetOrchestratorAddress.chain_name":
		return x.ChainName != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgSetOrchestratorAddress"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgSetOrchestratorAddress does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgSetOrchestratorAddress) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "fx.gravity.crosschain.v1.MsgSetOrchestratorAddress.oracle_address":
		x.OracleAddress = ""
	case "fx.gravity.crosschain.v1.MsgSetOrchestratorAddress.bridger_address":
		x.BridgerAddress = ""
	case "fx.gravity.crosschain.v1.MsgSetOrchestratorAddress.external_address":
		x.ExternalAddress = ""
	case "fx.gravity.crosschain.v1.MsgSetOrchestratorAddress.deposit":
		x.Deposit = nil
	case "fx.gravity.crosschain.v1.MsgSetOrchestratorAddress.chain_name":
		x.ChainName = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgSetOrchestratorAddress"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgSetOrchestratorAddress does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgSetOrchestratorAddress) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "fx.gravity.crosschain.v1.MsgSetOrchestratorAddress.oracle_address":
		value := x.OracleAddress
		return protoreflect.ValueOfString(value)
	case "fx.gravity.crosschain.v1.MsgSetOrchestratorAddress.bridger_address":
		value := x.BridgerAddress
		return protoreflect.ValueOfString(value)
	case "fx.gravity.crosschain.v1.MsgSetOrchestratorAddress.external_address":
		value := x.ExternalAddress
		return protoreflect.ValueOfString(value)
	case "fx.gravity.crosschain.v1.MsgSetOrchestratorAddress.deposit":
		value := x.Deposit
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "fx.gravity.crosschain.v1.MsgSetOrchestratorAddress.chain_name":
		value := x.ChainName
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgSetOrchestratorAddress"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgSetOrchestratorAddress does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgSetOrchestratorAddress) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "fx.gravity.crosschain.v1.MsgSetOrchestratorAddress.oracle_address":
		x.OracleAddress = value.Interface().(string)
	case "fx.gravity.crosschain.v1.MsgSetOrchestratorAddress.bridger_address":
		x.BridgerAddress = value.Interface().(string)
	case "fx.gravity.crosschain.v1.MsgSetOrchestratorAddress.external_address":
		x.ExternalAddress = value.Interface().(string)
	case "fx.gravity.crosschain.v1.MsgSetOrchestratorAddress.deposit":
		x.Deposit = value.Message().Interface().(*v1beta1.Coin)
	case "fx.gravity.crosschain.v1.MsgSetOrchestratorAddress.chain_name":
		x.ChainName = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgSetOrchestratorAddress"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgSetOrchestratorAddress does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgSetOrchestratorAddress) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "fx.gravity.crosschain.v1.MsgSetOrchestratorAddress.deposit":
		if x.Deposit == nil {
			x.Deposit = new(v1beta1.Coin)
		}
		return protoreflect.ValueOfMessage(x.Deposit.ProtoReflect())
	case "fx.gravity.crosschain.v1.MsgSetOrchestratorAddress.oracle_address":
		panic(fmt.Errorf("field oracle_address of message fx.gravity.crosschain.v1.MsgSetOrchestratorAddress is not mutable"))
	case "fx.gravity.crosschain.v1.MsgSetOrchestratorAddress.bridger_address":
		panic(fmt.Errorf("field bridger_address of message fx.gravity.crosschain.v1.MsgSetOrchestratorAddress is not mutable"))
	case "fx.gravity.crosschain.v1.MsgSetOrchestratorAddress.external_address":
		panic(fmt.Errorf("field external_address of message fx.gravity.crosschain.v1.MsgSetOrchestratorAddress is not mutable"))
	case "fx.gravity.crosschain.v1.MsgSetOrchestratorAddress.chain_name":
		panic(fmt.Errorf("field chain_name of message fx.gravity.crosschain.v1.MsgSetOrchestratorAddress is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgSetOrchestratorAddress"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgSetOrchestratorAddress does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgSetOrchestratorAddress) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "fx.gravity.crosschain.v1.MsgSetOrchestratorAddress.oracle_address":
		return protoreflect.ValueOfString("")
	case "fx.gravity.crosschain.v1.MsgSetOrchestratorAddress.bridger_address":
		return protoreflect.ValueOfString("")
	case "fx.gravity.crosschain.v1.MsgSetOrchestratorAddress.external_address":
		return protoreflect.ValueOfString("")
	case "fx.gravity.crosschain.v1.MsgSetOrchestratorAddress.deposit":
		m := new(v1beta1.Coin)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "fx.gravity.crosschain.v1.MsgSetOrchestratorAddress.chain_name":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgSetOrchestratorAddress"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgSetOrchestratorAddress does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgSetOrchestratorAddress) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in fx.gravity.crosschain.v1.MsgSetOrchestratorAddress", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgSetOrchestratorAddress) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgSetOrchestratorAddress) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgSetOrchestratorAddress) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgSetOrchestratorAddress) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgSetOrchestratorAddress)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.OracleAddress)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.BridgerAddress)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.ExternalAddress)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.Deposit != nil {
			l = options.Size(x.Deposit)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.ChainName)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgSetOrchestratorAddress)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.ChainName) > 0 {
			i -= len(x.ChainName)
			copy(dAtA[i:], x.ChainName)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ChainName)))
			i--
			dAtA[i] = 0x2a
		}
		if x.Deposit != nil {
			encoded, err := options.Marshal(x.Deposit)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x22
		}
		if len(x.ExternalAddress) > 0 {
			i -= len(x.ExternalAddress)
			copy(dAtA[i:], x.ExternalAddress)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ExternalAddress)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.BridgerAddress) > 0 {
			i -= len(x.BridgerAddress)
			copy(dAtA[i:], x.BridgerAddress)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.BridgerAddress)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.OracleAddress) > 0 {
			i -= len(x.OracleAddress)
			copy(dAtA[i:], x.OracleAddress)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.OracleAddress)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgSetOrchestratorAddress)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgSetOrchestratorAddress: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgSetOrchestratorAddress: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field OracleAddress", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.OracleAddress = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BridgerAddress", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.BridgerAddress = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ExternalAddress", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ExternalAddress = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Deposit", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Deposit == nil {
					x.Deposit = &v1beta1.Coin{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Deposit); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 5:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ChainName", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ChainName = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgAddOracleDeposit                protoreflect.MessageDescriptor
	fd_MsgAddOracleDeposit_oracle_address protoreflect.FieldDescriptor
	fd_MsgAddOracleDeposit_amount         protoreflect.FieldDescriptor
	fd_MsgAddOracleDeposit_chain_name     protoreflect.FieldDescriptor
)

func init() {
	file_fx_gravity_crosschain_v1_crosschain_legacy_proto_init()
	md_MsgAddOracleDeposit = File_fx_gravity_crosschain_v1_crosschain_legacy_proto.Messages().ByName("MsgAddOracleDeposit")
	fd_MsgAddOracleDeposit_oracle_address = md_MsgAddOracleDeposit.Fields().ByName("oracle_address")
	fd_MsgAddOracleDeposit_amount = md_MsgAddOracleDeposit.Fields().ByName("amount")
	fd_MsgAddOracleDeposit_chain_name = md_MsgAddOracleDeposit.Fields().ByName("chain_name")
}

var _ protoreflect.Message = (*fastReflection_MsgAddOracleDeposit)(nil)

type fastReflection_MsgAddOracleDeposit MsgAddOracleDeposit

func (x *MsgAddOracleDeposit) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgAddOracleDeposit)(x)
}

func (x *MsgAddOracleDeposit) slowProtoReflect() protoreflect.Message {
	mi := &file_fx_gravity_crosschain_v1_crosschain_legacy_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgAddOracleDeposit_messageType fastReflection_MsgAddOracleDeposit_messageType
var _ protoreflect.MessageType = fastReflection_MsgAddOracleDeposit_messageType{}

type fastReflection_MsgAddOracleDeposit_messageType struct{}

func (x fastReflection_MsgAddOracleDeposit_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgAddOracleDeposit)(nil)
}
func (x fastReflection_MsgAddOracleDeposit_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgAddOracleDeposit)
}
func (x fastReflection_MsgAddOracleDeposit_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgAddOracleDeposit
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgAddOracleDeposit) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgAddOracleDeposit
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgAddOracleDeposit) Type() protoreflect.MessageType {
	return _fastReflection_MsgAddOracleDeposit_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgAddOracleDeposit) New() protoreflect.Message {
	return new(fastReflection_MsgAddOracleDeposit)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgAddOracleDeposit) Interface() protoreflect.ProtoMessage {
	return (*MsgAddOracleDeposit)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgAddOracleDeposit) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.OracleAddress != "" {
		value := protoreflect.ValueOfString(x.OracleAddress)
		if !f(fd_MsgAddOracleDeposit_oracle_address, value) {
			return
		}
	}
	if x.Amount != nil {
		value := protoreflect.ValueOfMessage(x.Amount.ProtoReflect())
		if !f(fd_MsgAddOracleDeposit_amount, value) {
			return
		}
	}
	if x.ChainName != "" {
		value := protoreflect.ValueOfString(x.ChainName)
		if !f(fd_MsgAddOracleDeposit_chain_name, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgAddOracleDeposit) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "fx.gravity.crosschain.v1.MsgAddOracleDeposit.oracle_address":
		return x.OracleAddress != ""
	case "fx.gravity.crosschain.v1.MsgAddOracleDeposit.amount":
		return x.Amount != nil
	case "fx.gravity.crosschain.v1.MsgAddOracleDeposit.chain_name":
		return x.ChainName != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgAddOracleDeposit"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgAddOracleDeposit does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgAddOracleDeposit) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "fx.gravity.crosschain.v1.MsgAddOracleDeposit.oracle_address":
		x.OracleAddress = ""
	case "fx.gravity.crosschain.v1.MsgAddOracleDeposit.amount":
		x.Amount = nil
	case "fx.gravity.crosschain.v1.MsgAddOracleDeposit.chain_name":
		x.ChainName = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgAddOracleDeposit"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgAddOracleDeposit does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgAddOracleDeposit) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "fx.gravity.crosschain.v1.MsgAddOracleDeposit.oracle_address":
		value := x.OracleAddress
		return protoreflect.ValueOfString(value)
	case "fx.gravity.crosschain.v1.MsgAddOracleDeposit.amount":
		value := x.Amount
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "fx.gravity.crosschain.v1.MsgAddOracleDeposit.chain_name":
		value := x.ChainName
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgAddOracleDeposit"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgAddOracleDeposit does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgAddOracleDeposit) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "fx.gravity.crosschain.v1.MsgAddOracleDeposit.oracle_address":
		x.OracleAddress = value.Interface().(string)
	case "fx.gravity.crosschain.v1.MsgAddOracleDeposit.amount":
		x.Amount = value.Message().Interface().(*v1beta1.Coin)
	case "fx.gravity.crosschain.v1.MsgAddOracleDeposit.chain_name":
		x.ChainName = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgAddOracleDeposit"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgAddOracleDeposit does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgAddOracleDeposit) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "fx.gravity.crosschain.v1.MsgAddOracleDeposit.amount":
		if x.Amount == nil {
			x.Amount = new(v1beta1.Coin)
		}
		return protoreflect.ValueOfMessage(x.Amount.ProtoReflect())
	case "fx.gravity.crosschain.v1.MsgAddOracleDeposit.oracle_address":
		panic(fmt.Errorf("field oracle_address of message fx.gravity.crosschain.v1.MsgAddOracleDeposit is not mutable"))
	case "fx.gravity.crosschain.v1.MsgAddOracleDeposit.chain_name":
		panic(fmt.Errorf("field chain_name of message fx.gravity.crosschain.v1.MsgAddOracleDeposit is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgAddOracleDeposit"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgAddOracleDeposit does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgAddOracleDeposit) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "fx.gravity.crosschain.v1.MsgAddOracleDeposit.oracle_address":
		return protoreflect.ValueOfString("")
	case "fx.gravity.crosschain.v1.MsgAddOracleDeposit.amount":
		m := new(v1beta1.Coin)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "fx.gravity.crosschain.v1.MsgAddOracleDeposit.chain_name":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgAddOracleDeposit"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgAddOracleDeposit does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgAddOracleDeposit) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in fx.gravity.crosschain.v1.MsgAddOracleDeposit", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgAddOracleDeposit) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgAddOracleDeposit) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgAddOracleDeposit) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgAddOracleDeposit) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgAddOracleDeposit)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.OracleAddress)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.Amount != nil {
			l = options.Size(x.Amount)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.ChainName)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgAddOracleDeposit)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.ChainName) > 0 {
			i -= len(x.ChainName)
			copy(dAtA[i:], x.ChainName)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ChainName)))
			i--
			dAtA[i] = 0x1a
		}
		if x.Amount != nil {
			encoded, err := options.Marshal(x.Amount)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.OracleAddress) > 0 {
			i -= len(x.OracleAddress)
			copy(dAtA[i:], x.OracleAddress)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.OracleAddress)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgAddOracleDeposit)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgAddOracleDeposit: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgAddOracleDeposit: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field OracleAddress", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.OracleAddress = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Amount", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Amount == nil {
					x.Amount = &v1beta1.Coin{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Amount); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ChainName", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ChainName = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgCancelSendToExternal                protoreflect.MessageDescriptor
	fd_MsgCancelSendToExternal_transaction_id protoreflect.FieldDescriptor
	fd_MsgCancelSendToExternal_sender         protoreflect.FieldDescriptor
	fd_MsgCancelSendToExternal_chain_name     protoreflect.FieldDescriptor
)

func init() {
	file_fx_gravity_crosschain_v1_crosschain_legacy_proto_init()
	md_MsgCancelSendToExternal = File_fx_gravity_crosschain_v1_crosschain_legacy_proto.Messages().ByName("MsgCancelSendToExternal")
	fd_MsgCancelSendToExternal_transaction_id = md_MsgCancelSendToExternal.Fields().ByName("transaction_id")
	fd_MsgCancelSendToExternal_sender = md_MsgCancelSendToExternal.Fields().ByName("sender")
	fd_MsgCancelSendToExternal_chain_name = md_MsgCancelSendToExternal.Fields().ByName("chain_name")
}

var _ protoreflect.Message = (*fastReflection_MsgCancelSendToExternal)(nil)

type fastReflection_MsgCancelSendToExternal MsgCancelSendToExternal

func (x *MsgCancelSendToExternal) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgCancelSendToExternal)(x)
}

func (x *MsgCancelSendToExternal) slowProtoReflect() protoreflect.Message {
	mi := &file_fx_gravity_crosschain_v1_crosschain_legacy_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgCancelSendToExternal_messageType fastReflection_MsgCancelSendToExternal_messageType
var _ protoreflect.MessageType = fastReflection_MsgCancelSendToExternal_messageType{}

type fastReflection_MsgCancelSendToExternal_messageType struct{}

func (x fastReflection_MsgCancelSendToExternal_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgCancelSendToExternal)(nil)
}
func (x fastReflection_MsgCancelSendToExternal_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgCancelSendToExternal)
}
func (x fastReflection_MsgCancelSendToExternal_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgCancelSendToExternal
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgCancelSendToExternal) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgCancelSendToExternal
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgCancelSendToExternal) Type() protoreflect.MessageType {
	return _fastReflection_MsgCancelSendToExternal_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgCancelSendToExternal) New() protoreflect.Message {
	return new(fastReflection_MsgCancelSendToExternal)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgCancelSendToExternal) Interface() protoreflect.ProtoMessage {
	return (*MsgCancelSendToExternal)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgCancelSendToExternal) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.TransactionId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.TransactionId)
		if !f(fd_MsgCancelSendToExternal_transaction_id, value) {
			return
		}
	}
	if x.Sender != "" {
		value := protoreflect.ValueOfString(x.Sender)
		if !f(fd_MsgCancelSendToExternal_sender, value) {
			return
		}
	}
	if x.ChainName != "" {
		value := protoreflect.ValueOfString(x.ChainName)
		if !f(fd_MsgCancelSendToExternal_chain_name, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgCancelSendToExternal) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "fx.gravity.crosschain.v1.MsgCancelSendToExternal.transaction_id":
		return x.TransactionId != uint64(0)
	case "fx.gravity.crosschain.v1.MsgCancelSendToExternal.sender":
		return x.Sender != ""
	case "fx.gravity.crosschain.v1.MsgCancelSendToExternal.chain_name":
		return x.ChainName != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgCancelSendToExternal"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgCancelSendToExternal does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgCancelSendToExternal) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "fx.gravity.crosschain.v1.MsgCancelSendToExternal.transaction_id":
		x.TransactionId = uint64(0)
	case "fx.gravity.crosschain.v1.MsgCancelSendToExternal.sender":
		x.Sender = ""
	case "fx.gravity.crosschain.v1.MsgCancelSendToExternal.chain_name":
		x.ChainName = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgCancelSendToExternal"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgCancelSendToExternal does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgCancelSendToExternal) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "fx.gravity.crosschain.v1.MsgCancelSendToExternal.transaction_id":
		value := x.TransactionId
		return protoreflect.ValueOfUint64(value)
	case "fx.gravity.crosschain.v1.MsgCancelSendToExternal.sender":
		value := x.Sender
		return protoreflect.ValueOfString(value)
	case "fx.gravity.crosschain.v1.MsgCancelSendToExternal.chain_name":
		value := x.ChainName
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgCancelSendToExternal"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgCancelSendToExternal does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgCancelSendToExternal) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "fx.gravity.crosschain.v1.MsgCancelSendToExternal.transaction_id":
		x.TransactionId = value.Uint()
	case "fx.gravity.crosschain.v1.MsgCancelSendToExternal.sender":
		x.Sender = value.Interface().(string)
	case "fx.gravity.crosschain.v1.MsgCancelSendToExternal.chain_name":
		x.ChainName = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgCancelSendToExternal"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgCancelSendToExternal does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgCancelSendToExternal) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "fx.gravity.crosschain.v1.MsgCancelSendToExternal.transaction_id":
		panic(fmt.Errorf("field transaction_id of message fx.gravity.crosschain.v1.MsgCancelSendToExternal is not mutable"))
	case "fx.gravity.crosschain.v1.MsgCancelSendToExternal.sender":
		panic(fmt.Errorf("field sender of message fx.gravity.crosschain.v1.MsgCancelSendToExternal is not mutable"))
	case "fx.gravity.crosschain.v1.MsgCancelSendToExternal.chain_name":
		panic(fmt.Errorf("field chain_name of message fx.gravity.crosschain.v1.MsgCancelSendToExternal is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgCancelSendToExternal"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgCancelSendToExternal does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgCancelSendToExternal) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "fx.gravity.crosschain.v1.MsgCancelSendToExternal.transaction_id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "fx.gravity.crosschain.v1.MsgCancelSendToExternal.sender":
		return protoreflect.ValueOfString("")
	case "fx.gravity.crosschain.v1.MsgCancelSendToExternal.chain_name":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgCancelSendToExternal"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgCancelSendToExternal does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgCancelSendToExternal) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in fx.gravity.crosschain.v1.MsgCancelSendToExternal", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgCancelSendToExternal) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgCancelSendToExternal) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgCancelSendToExternal) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgCancelSendToExternal) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgCancelSendToExternal)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.TransactionId != 0 {
			n += 1 + runtime.Sov(uint64(x.TransactionId))
		}
		l = len(x.Sender)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.ChainName)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgCancelSendToExternal)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.ChainName) > 0 {
			i -= len(x.ChainName)
			copy(dAtA[i:], x.ChainName)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ChainName)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.Sender) > 0 {
			i -= len(x.Sender)
			copy(dAtA[i:], x.Sender)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Sender)))
			i--
			dAtA[i] = 0x12
		}
		if x.TransactionId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.TransactionId))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgCancelSendToExternal)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgCancelSendToExternal: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgCancelSendToExternal: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TransactionId", wireType)
				}
				x.TransactionId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.TransactionId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Sender", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Sender = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ChainName", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ChainName = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgRequestBatch             protoreflect.MessageDescriptor
	fd_MsgRequestBatch_sender      protoreflect.FieldDescriptor
	fd_MsgRequestBatch_denom       protoreflect.FieldDescriptor
	fd_MsgRequestBatch_minimum_fee protoreflect.FieldDescriptor
	fd_MsgRequestBatch_fee_receive protoreflect.FieldDescriptor
	fd_MsgRequestBatch_chain_name  protoreflect.FieldDescriptor
	fd_MsgRequestBatch_base_fee    protoreflect.FieldDescriptor
)

func init() {
	file_fx_gravity_crosschain_v1_crosschain_legacy_proto_init()
	md_MsgRequestBatch = File_fx_gravity_crosschain_v1_crosschain_legacy_proto.Messages().ByName("MsgRequestBatch")
	fd_MsgRequestBatch_sender = md_MsgRequestBatch.Fields().ByName("sender")
	fd_MsgRequestBatch_denom = md_MsgRequestBatch.Fields().ByName("denom")
	fd_MsgRequestBatch_minimum_fee = md_MsgRequestBatch.Fields().ByName("minimum_fee")
	fd_MsgRequestBatch_fee_receive = md_MsgRequestBatch.Fields().ByName("fee_receive")
	fd_MsgRequestBatch_chain_name = md_MsgRequestBatch.Fields().ByName("chain_name")
	fd_MsgRequestBatch_base_fee = md_MsgRequestBatch.Fields().ByName("base_fee")
}

var _ protoreflect.Message = (*fastReflection_MsgRequestBatch)(nil)

type fastReflection_MsgRequestBatch MsgRequestBatch

func (x *MsgRequestBatch) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgRequestBatch)(x)
}

func (x *MsgRequestBatch) slowProtoReflect() protoreflect.Message {
	mi := &file_fx_gravity_crosschain_v1_crosschain_legacy_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgRequestBatch_messageType fastReflection_MsgRequestBatch_messageType
var _ protoreflect.MessageType = fastReflection_MsgRequestBatch_messageType{}

type fastReflection_MsgRequestBatch_messageType struct{}

func (x fastReflection_MsgRequestBatch_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgRequestBatch)(nil)
}
func (x fastReflection_MsgRequestBatch_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgRequestBatch)
}
func (x fastReflection_MsgRequestBatch_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgRequestBatch
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgRequestBatch) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgRequestBatch
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgRequestBatch) Type() protoreflect.MessageType {
	return _fastReflection_MsgRequestBatch_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgRequestBatch) New() protoreflect.Message {
	return new(fastReflection_MsgRequestBatch)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgRequestBatch) Interface() protoreflect.ProtoMessage {
	return (*MsgRequestBatch)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgRequestBatch) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Sender != "" {
		value := protoreflect.ValueOfString(x.Sender)
		if !f(fd_MsgRequestBatch_sender, value) {
			return
		}
	}
	if x.Denom != "" {
		value := protoreflect.ValueOfString(x.Denom)
		if !f(fd_MsgRequestBatch_denom, value) {
			return
		}
	}
	if x.MinimumFee != "" {
		value := protoreflect.ValueOfString(x.MinimumFee)
		if !f(fd_MsgRequestBatch_minimum_fee, value) {
			return
		}
	}
	if x.FeeReceive != "" {
		value := protoreflect.ValueOfString(x.FeeReceive)
		if !f(fd_MsgRequestBatch_fee_receive, value) {
			return
		}
	}
	if x.ChainName != "" {
		value := protoreflect.ValueOfString(x.ChainName)
		if !f(fd_MsgRequestBatch_chain_name, value) {
			return
		}
	}
	if x.BaseFee != "" {
		value := protoreflect.ValueOfString(x.BaseFee)
		if !f(fd_MsgRequestBatch_base_fee, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgRequestBatch) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "fx.gravity.crosschain.v1.MsgRequestBatch.sender":
		return x.Sender != ""
	case "fx.gravity.crosschain.v1.MsgRequestBatch.denom":
		return x.Denom != ""
	case "fx.gravity.crosschain.v1.MsgRequestBatch.minimum_fee":
		return x.MinimumFee != ""
	case "fx.gravity.crosschain.v1.MsgRequestBatch.fee_receive":
		return x.FeeReceive != ""
	case "fx.gravity.crosschain.v1.MsgRequestBatch.chain_name":
		return x.ChainName != ""
	case "fx.gravity.crosschain.v1.MsgRequestBatch.base_fee":
		return x.BaseFee != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgRequestBatch"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgRequestBatch does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgRequestBatch) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "fx.gravity.crosschain.v1.MsgRequestBatch.sender":
		x.Sender = ""
	case "fx.gravity.crosschain.v1.MsgRequestBatch.denom":
		x.Denom = ""
	case "fx.gravity.crosschain.v1.MsgRequestBatch.minimum_fee":
		x.MinimumFee = ""
	case "fx.gravity.crosschain.v1.MsgRequestBatch.fee_receive":
		x.FeeReceive = ""
	case "fx.gravity.crosschain.v1.MsgRequestBatch.chain_name":
		x.ChainName = ""
	case "fx.gravity.crosschain.v1.MsgRequestBatch.base_fee":
		x.BaseFee = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgRequestBatch"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgRequestBatch does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgRequestBatch) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "fx.gravity.crosschain.v1.MsgRequestBatch.sender":
		value := x.Sender
		return protoreflect.ValueOfString(value)
	case "fx.gravity.crosschain.v1.MsgRequestBatch.denom":
		value := x.Denom
		return protoreflect.ValueOfString(value)
	case "fx.gravity.crosschain.v1.MsgRequestBatch.minimum_fee":
		value := x.MinimumFee
		return protoreflect.ValueOfString(value)
	case "fx.gravity.crosschain.v1.MsgRequestBatch.fee_receive":
		value := x.FeeReceive
		return protoreflect.ValueOfString(value)
	case "fx.gravity.crosschain.v1.MsgRequestBatch.chain_name":
		value := x.ChainName
		return protoreflect.ValueOfString(value)
	case "fx.gravity.crosschain.v1.MsgRequestBatch.base_fee":
		value := x.BaseFee
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgRequestBatch"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgRequestBatch does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgRequestBatch) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "fx.gravity.crosschain.v1.MsgRequestBatch.sender":
		x.Sender = value.Interface().(string)
	case "fx.gravity.crosschain.v1.MsgRequestBatch.denom":
		x.Denom = value.Interface().(string)
	case "fx.gravity.crosschain.v1.MsgRequestBatch.minimum_fee":
		x.MinimumFee = value.Interface().(string)
	case "fx.gravity.crosschain.v1.MsgRequestBatch.fee_receive":
		x.FeeReceive = value.Interface().(string)
	case "fx.gravity.crosschain.v1.MsgRequestBatch.chain_name":
		x.ChainName = value.Interface().(string)
	case "fx.gravity.crosschain.v1.MsgRequestBatch.base_fee":
		x.BaseFee = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgRequestBatch"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgRequestBatch does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgRequestBatch) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "fx.gravity.crosschain.v1.MsgRequestBatch.sender":
		panic(fmt.Errorf("field sender of message fx.gravity.crosschain.v1.MsgRequestBatch is not mutable"))
	case "fx.gravity.crosschain.v1.MsgRequestBatch.denom":
		panic(fmt.Errorf("field denom of message fx.gravity.crosschain.v1.MsgRequestBatch is not mutable"))
	case "fx.gravity.crosschain.v1.MsgRequestBatch.minimum_fee":
		panic(fmt.Errorf("field minimum_fee of message fx.gravity.crosschain.v1.MsgRequestBatch is not mutable"))
	case "fx.gravity.crosschain.v1.MsgRequestBatch.fee_receive":
		panic(fmt.Errorf("field fee_receive of message fx.gravity.crosschain.v1.MsgRequestBatch is not mutable"))
	case "fx.gravity.crosschain.v1.MsgRequestBatch.chain_name":
		panic(fmt.Errorf("field chain_name of message fx.gravity.crosschain.v1.MsgRequestBatch is not mutable"))
	case "fx.gravity.crosschain.v1.MsgRequestBatch.base_fee":
		panic(fmt.Errorf("field base_fee of message fx.gravity.crosschain.v1.MsgRequestBatch is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgRequestBatch"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgRequestBatch does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgRequestBatch) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "fx.gravity.crosschain.v1.MsgRequestBatch.sender":
		return protoreflect.ValueOfString("")
	case "fx.gravity.crosschain.v1.MsgRequestBatch.denom":
		return protoreflect.ValueOfString("")
	case "fx.gravity.crosschain.v1.MsgRequestBatch.minimum_fee":
		return protoreflect.ValueOfString("")
	case "fx.gravity.crosschain.v1.MsgRequestBatch.fee_receive":
		return protoreflect.ValueOfString("")
	case "fx.gravity.crosschain.v1.MsgRequestBatch.chain_name":
		return protoreflect.ValueOfString("")
	case "fx.gravity.crosschain.v1.MsgRequestBatch.base_fee":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgRequestBatch"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgRequestBatch does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgRequestBatch) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in fx.gravity.crosschain.v1.MsgRequestBatch", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgRequestBatch) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgRequestBatch) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgRequestBatch) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgRequestBatch) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgRequestBatch)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Sender)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Denom)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.MinimumFee)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.FeeReceive)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.ChainName)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.BaseFee)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgRequestBatch)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.BaseFee) > 0 {
			i -= len(x.BaseFee)
			copy(dAtA[i:], x.BaseFee)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.BaseFee)))
			i--
			dAtA[i] = 0x32
		}
		if len(x.ChainName) > 0 {
			i -= len(x.ChainName)
			copy(dAtA[i:], x.ChainName)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ChainName)))
			i--
			dAtA[i] = 0x2a
		}
		if len(x.FeeReceive) > 0 {
			i -= len(x.FeeReceive)
			copy(dAtA[i:], x.FeeReceive)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.FeeReceive)))
			i--
			dAtA[i] = 0x22
		}
		if len(x.MinimumFee) > 0 {
			i -= len(x.MinimumFee)
			copy(dAtA[i:], x.MinimumFee)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.MinimumFee)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.Denom) > 0 {
			i -= len(x.Denom)
			copy(dAtA[i:], x.Denom)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Denom)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Sender) > 0 {
			i -= len(x.Sender)
			copy(dAtA[i:], x.Sender)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Sender)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgRequestBatch)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgRequestBatch: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgRequestBatch: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Sender", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Sender = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Denom", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Denom = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field MinimumFee", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.MinimumFee = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field FeeReceive", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.FeeReceive = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 5:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ChainName", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ChainName = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 6:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BaseFee", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.BaseFee = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgIncreaseBridgeFee                protoreflect.MessageDescriptor
	fd_MsgIncreaseBridgeFee_chain_name     protoreflect.FieldDescriptor
	fd_MsgIncreaseBridgeFee_transaction_id protoreflect.FieldDescriptor
	fd_MsgIncreaseBridgeFee_sender         protoreflect.FieldDescriptor
	fd_MsgIncreaseBridgeFee_add_bridge_fee protoreflect.FieldDescriptor
)

func init() {
	file_fx_gravity_crosschain_v1_crosschain_legacy_proto_init()
	md_MsgIncreaseBridgeFee = File_fx_gravity_crosschain_v1_crosschain_legacy_proto.Messages().ByName("MsgIncreaseBridgeFee")
	fd_MsgIncreaseBridgeFee_chain_name = md_MsgIncreaseBridgeFee.Fields().ByName("chain_name")
	fd_MsgIncreaseBridgeFee_transaction_id = md_MsgIncreaseBridgeFee.Fields().ByName("transaction_id")
	fd_MsgIncreaseBridgeFee_sender = md_MsgIncreaseBridgeFee.Fields().ByName("sender")
	fd_MsgIncreaseBridgeFee_add_bridge_fee = md_MsgIncreaseBridgeFee.Fields().ByName("add_bridge_fee")
}

var _ protoreflect.Message = (*fastReflection_MsgIncreaseBridgeFee)(nil)

type fastReflection_MsgIncreaseBridgeFee MsgIncreaseBridgeFee

func (x *MsgIncreaseBridgeFee) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgIncreaseBridgeFee)(x)
}

func (x *MsgIncreaseBridgeFee) slowProtoReflect() protoreflect.Message {
	mi := &file_fx_gravity_crosschain_v1_crosschain_legacy_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgIncreaseBridgeFee_messageType fastReflection_MsgIncreaseBridgeFee_messageType
var _ protoreflect.MessageType = fastReflection_MsgIncreaseBridgeFee_messageType{}

type fastReflection_MsgIncreaseBridgeFee_messageType struct{}

func (x fastReflection_MsgIncreaseBridgeFee_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgIncreaseBridgeFee)(nil)
}
func (x fastReflection_MsgIncreaseBridgeFee_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgIncreaseBridgeFee)
}
func (x fastReflection_MsgIncreaseBridgeFee_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgIncreaseBridgeFee
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgIncreaseBridgeFee) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgIncreaseBridgeFee
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgIncreaseBridgeFee) Type() protoreflect.MessageType {
	return _fastReflection_MsgIncreaseBridgeFee_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgIncreaseBridgeFee) New() protoreflect.Message {
	return new(fastReflection_MsgIncreaseBridgeFee)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgIncreaseBridgeFee) Interface() protoreflect.ProtoMessage {
	return (*MsgIncreaseBridgeFee)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgIncreaseBridgeFee) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.ChainName != "" {
		value := protoreflect.ValueOfString(x.ChainName)
		if !f(fd_MsgIncreaseBridgeFee_chain_name, value) {
			return
		}
	}
	if x.TransactionId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.TransactionId)
		if !f(fd_MsgIncreaseBridgeFee_transaction_id, value) {
			return
		}
	}
	if x.Sender != "" {
		value := protoreflect.ValueOfString(x.Sender)
		if !f(fd_MsgIncreaseBridgeFee_sender, value) {
			return
		}
	}
	if x.AddBridgeFee != nil {
		value := protoreflect.ValueOfMessage(x.AddBridgeFee.ProtoReflect())
		if !f(fd_MsgIncreaseBridgeFee_add_bridge_fee, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgIncreaseBridgeFee) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "fx.gravity.crosschain.v1.MsgIncreaseBridgeFee.chain_name":
		return x.ChainName != ""
	case "fx.gravity.crosschain.v1.MsgIncreaseBridgeFee.transaction_id":
		return x.TransactionId != uint64(0)
	case "fx.gravity.crosschain.v1.MsgIncreaseBridgeFee.sender":
		return x.Sender != ""
	case "fx.gravity.crosschain.v1.MsgIncreaseBridgeFee.add_bridge_fee":
		return x.AddBridgeFee != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgIncreaseBridgeFee"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgIncreaseBridgeFee does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgIncreaseBridgeFee) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "fx.gravity.crosschain.v1.MsgIncreaseBridgeFee.chain_name":
		x.ChainName = ""
	case "fx.gravity.crosschain.v1.MsgIncreaseBridgeFee.transaction_id":
		x.TransactionId = uint64(0)
	case "fx.gravity.crosschain.v1.MsgIncreaseBridgeFee.sender":
		x.Sender = ""
	case "fx.gravity.crosschain.v1.MsgIncreaseBridgeFee.add_bridge_fee":
		x.AddBridgeFee = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgIncreaseBridgeFee"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgIncreaseBridgeFee does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgIncreaseBridgeFee) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "fx.gravity.crosschain.v1.MsgIncreaseBridgeFee.chain_name":
		value := x.ChainName
		return protoreflect.ValueOfString(value)
	case "fx.gravity.crosschain.v1.MsgIncreaseBridgeFee.transaction_id":
		value := x.TransactionId
		return protoreflect.ValueOfUint64(value)
	case "fx.gravity.crosschain.v1.MsgIncreaseBridgeFee.sender":
		value := x.Sender
		return protoreflect.ValueOfString(value)
	case "fx.gravity.crosschain.v1.MsgIncreaseBridgeFee.add_bridge_fee":
		value := x.AddBridgeFee
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgIncreaseBridgeFee"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgIncreaseBridgeFee does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgIncreaseBridgeFee) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "fx.gravity.crosschain.v1.MsgIncreaseBridgeFee.chain_name":
		x.ChainName = value.Interface().(string)
	case "fx.gravity.crosschain.v1.MsgIncreaseBridgeFee.transaction_id":
		x.TransactionId = value.Uint()
	case "fx.gravity.crosschain.v1.MsgIncreaseBridgeFee.sender":
		x.Sender = value.Interface().(string)
	case "fx.gravity.crosschain.v1.MsgIncreaseBridgeFee.add_bridge_fee":
		x.AddBridgeFee = value.Message().Interface().(*v1beta1.Coin)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgIncreaseBridgeFee"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgIncreaseBridgeFee does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgIncreaseBridgeFee) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "fx.gravity.crosschain.v1.MsgIncreaseBridgeFee.add_bridge_fee":
		if x.AddBridgeFee == nil {
			x.AddBridgeFee = new(v1beta1.Coin)
		}
		return protoreflect.ValueOfMessage(x.AddBridgeFee.ProtoReflect())
	case "fx.gravity.crosschain.v1.MsgIncreaseBridgeFee.chain_name":
		panic(fmt.Errorf("field chain_name of message fx.gravity.crosschain.v1.MsgIncreaseBridgeFee is not mutable"))
	case "fx.gravity.crosschain.v1.MsgIncreaseBridgeFee.transaction_id":
		panic(fmt.Errorf("field transaction_id of message fx.gravity.crosschain.v1.MsgIncreaseBridgeFee is not mutable"))
	case "fx.gravity.crosschain.v1.MsgIncreaseBridgeFee.sender":
		panic(fmt.Errorf("field sender of message fx.gravity.crosschain.v1.MsgIncreaseBridgeFee is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgIncreaseBridgeFee"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgIncreaseBridgeFee does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgIncreaseBridgeFee) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "fx.gravity.crosschain.v1.MsgIncreaseBridgeFee.chain_name":
		return protoreflect.ValueOfString("")
	case "fx.gravity.crosschain.v1.MsgIncreaseBridgeFee.transaction_id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "fx.gravity.crosschain.v1.MsgIncreaseBridgeFee.sender":
		return protoreflect.ValueOfString("")
	case "fx.gravity.crosschain.v1.MsgIncreaseBridgeFee.add_bridge_fee":
		m := new(v1beta1.Coin)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: fx.gravity.crosschain.v1.MsgIncreaseBridgeFee"))
		}
		panic(fmt.Errorf("message fx.gravity.crosschain.v1.MsgIncreaseBridgeFee does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgIncreaseBridgeFee) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in fx.gravity.crosschain.v1.MsgIncreaseBridgeFee", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgIncreaseBridgeFee) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgIncreaseBridgeFee) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgIncreaseBridgeFee) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgIncreaseBridgeFee) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgIncreaseBridgeFee)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.ChainName)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.TransactionId != 0 {
			n += 1 + runtime.Sov(uint64(x.TransactionId))
		}
		l = len(x.Sender)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.AddBridgeFee != nil {
			l = options.Size(x.AddBridgeFee)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgIncreaseBridgeFee)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.AddBridgeFee != nil {
			encoded, err := options.Marshal(x.AddBridgeFee)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x22
		}
		if len(x.Sender) > 0 {
			i -= len(x.Sender)
			copy(dAtA[i:], x.Sender)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Sender)))
			i--
			dAtA[i] = 0x1a
		}
		if x.TransactionId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.TransactionId))
			i--
			dAtA[i] = 0x10
		}
		if len(x.ChainName) > 0 {
			i -= len(x.ChainName)
			copy(dAtA[i:], x.ChainName)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ChainName)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgIncreaseBridgeFee)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgIncreaseBridgeFee: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgIncreaseBridgeFee: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ChainName", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ChainName = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TransactionId", wireType)
				}
				x.TransactionId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.TransactionId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Sender", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Sender = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field AddBridgeFee", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.AddBridgeFee == nil {
					x.AddBridgeFee = &v1beta1.Coin{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.AddBridgeFee); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.0
// 	protoc        (unknown)
// source: fx/gravity/crosschain/v1/crosschain_legacy.proto

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Deprecated: after block 5713000
type InitCrossChainParamsProposal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title       string      `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Description string      `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Params      *ForkParams `protobuf:"bytes,3,opt,name=params,proto3" json:"params,omitempty"`
	ChainName   string      `protobuf:"bytes,4,opt,name=chain_name,json=chainName,proto3" json:"chain_name,omitempty"`
}

func (x *InitCrossChainParamsProposal) Reset() {
	*x = InitCrossChainParamsProposal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fx_gravity_crosschain_v1_crosschain_legacy_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InitCrossChainParamsProposal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitCrossChainParamsProposal) ProtoMessage() {}

// Deprecated: Use InitCrossChainParamsProposal.ProtoReflect.Descriptor instead.
func (*InitCrossChainParamsProposal) Descriptor() ([]byte, []int) {
	return file_fx_gravity_crosschain_v1_crosschain_legacy_proto_rawDescGZIP(), []int{0}
}

func (x *InitCrossChainParamsProposal) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *InitCrossChainParamsProposal) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *InitCrossChainParamsProposal) GetParams() *ForkParams {
	if x != nil {
		return x.Params
	}
	return nil
}

func (x *InitCrossChainParamsProposal) GetChainName() string {
	if x != nil {
		return x.ChainName
	}
	return ""
}

type ForkParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GravityId                         string `protobuf:"bytes,1,opt,name=gravity_id,json=gravityId,proto3" json:"gravity_id,omitempty"`
	AverageBlockTime                  uint64 `protobuf:"varint,2,opt,name=average_block_time,json=averageBlockTime,proto3" json:"average_block_time,omitempty"`
	ExternalBatchTimeout              uint64 `protobuf:"varint,3,opt,name=external_batch_timeout,json=externalBatchTimeout,proto3" json:"external_batch_timeout,omitempty"`
	AverageExternalBlockTime          uint64 `protobuf:"varint,4,opt,name=average_external_block_time,json=averageExternalBlockTime,proto3" json:"average_external_block_time,omitempty"`
	SignedWindow                      uint64 `protobuf:"varint,5,opt,name=signed_window,json=signedWindow,proto3" json:"signed_window,omitempty"`
	SlashFraction                     []byte `protobuf:"bytes,6,opt,name=slash_fraction,json=slashFraction,proto3" json:"slash_fraction,omitempty"`
	OracleSetUpdatePowerChangePercent []byte `protobuf:"bytes,7,opt,name=oracle_set_update_power_change_percent,json=oracleSetUpdatePowerChangePercent,proto3" json:"oracle_set_update_power_change_percent,omitempty"`
	IbcTransferTimeoutHeight          uint64 `protobuf:"varint,8,opt,name=ibc_transfer_timeout_height,json=ibcTransferTimeoutHeight,proto3" json:"ibc_transfer_timeout_height,omitempty"`
	// Deprecated: after block 5713000
	Oracles               []string      `protobuf:"bytes,9,rep,name=oracles,proto3" json:"oracles,omitempty"`
	DelegateThreshold     *v1beta1.Coin `protobuf:"bytes,10,opt,name=delegate_threshold,json=delegateThreshold,proto3" json:"delegate_threshold,omitempty"`
	DelegateMultiple      int64         `protobuf:"varint,11,opt,name=delegate_multiple,json=delegateMultiple,proto3" json:"delegate_multiple,omitempty"`
	BridgeCallTimeout     uint64        `protobuf:"varint,12,opt,name=bridge_call_timeout,json=bridgeCallTimeout,proto3" json:"bridge_call_timeout,omitempty"`
	BridgeCallMaxGasLimit uint64        `protobuf:"varint,13,opt,name=bridge_call_max_gas_limit,json=bridgeCallMaxGasLimit,proto3" json:"bridge_call_max_gas_limit,omitempty"`
	// Deprecated: do not use
	EnableSendToExternalPending bool `protobuf:"varint,14,opt,name=enable_send_to_external_pending,json=enableSendToExternalPending,proto3" json:"enable_send_to_external_pending,omitempty"`
	// Deprecated: do not use
	EnableBridgeCallPending bool `protobuf:"varint,15,opt,name=enable_bridge_call_pending,json=enableBridgeCallPending,proto3" json:"enable_bridge_call_pending,omitempty"`
}

func (x *ForkParams) Reset() {
	*x = ForkParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fx_gravity_crosschain_v1_crosschain_legacy_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ForkParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForkParams) ProtoMessage() {}

// Deprecated: Use ForkParams.ProtoReflect.Descriptor instead.
func (*ForkParams) Descriptor() ([]byte, []int) {
	return file_fx_gravity_crosschain_v1_crosschain_legacy_proto_rawDescGZIP(), []int{1}
}

func (x *ForkParams) GetGravityId() string {
	if x != nil {
		return x.GravityId
	}
	return ""
}

func (x *ForkParams) GetAverageBlockTime() uint64 {
	if x != nil {
		return x.AverageBlockTime
	}
	return 0
}

func (x *ForkParams) GetExternalBatchTimeout() uint64 {
	if x != nil {
		return x.ExternalBatchTimeout
	}
	return 0
}

func (x *ForkParams) GetAverageExternalBlockTime() uint64 {
	if x != nil {
		return x.AverageExternalBlockTime
	}
	return 0
}

func (x *ForkParams) GetSignedWindow() uint64 {
	if x != nil {
		return x.SignedWindow
	}
	return 0
}

func (x *ForkParams) GetSlashFraction() []byte {
	if x != nil {
		return x.SlashFraction
	}
	return nil
}

func (x *ForkParams) GetOracleSetUpdatePowerChangePercent() []byte {
	if x != nil {
		return x.OracleSetUpdatePowerChangePercent
	}
	return nil
}

func (x *ForkParams) GetIbcTransferTimeoutHeight() uint64 {
	if x != nil {
		return x.IbcTransferTimeoutHeight
	}
	return 0
}

func (x *ForkParams) GetOracles() []string {
	if x != nil {
		return x.Oracles
	}
	return nil
}

func (x *ForkParams) GetDelegateThreshold() *v1beta1.Coin {
	if x != nil {
		return x.DelegateThreshold
	}
	return nil
}

func (x *ForkParams) GetDelegateMultiple() int64 {
	if x != nil {
		return x.DelegateMultiple
	}
	return 0
}

func (x *ForkParams) GetBridgeCallTimeout() uint64 {
	if x != nil {
		return x.BridgeCallTimeout
	}
	return 0
}

func (x *ForkParams) GetBridgeCallMaxGasLimit() uint64 {
	if x != nil {
		return x.BridgeCallMaxGasLimit
	}
	return 0
}

func (x *ForkParams) GetEnableSendToExternalPending() bool {
	if x != nil {
		return x.EnableSendToExternalPending
	}
	return false
}

func (x *ForkParams) GetEnableBridgeCallPending() bool {
	if x != nil {
		return x.EnableBridgeCallPending
	}
	return false
}

// Deprecated: Do not use.
type UpdateChainOraclesProposal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the title of the update proposal
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// the description of the proposal
	Description string   `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Oracles     []string `protobuf:"bytes,3,rep,name=oracles,proto3" json:"oracles,omitempty"`
	ChainName   string   `protobuf:"bytes,4,opt,name=chain_name,json=chainName,proto3" json:"chain_name,omitempty"`
}

func (x *UpdateChainOraclesProposal) Reset() {
	*x = UpdateChainOraclesProposal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fx_gravity_crosschain_v1_crosschain_legacy_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateChainOraclesProposal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateChainOraclesProposal) ProtoMessage() {}

// Deprecated: Use UpdateChainOraclesProposal.ProtoReflect.Descriptor instead.
func (*UpdateChainOraclesProposal) Descriptor() ([]byte, []int) {
	return file_fx_gravity_crosschain_v1_crosschain_legacy_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateChainOraclesProposal) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *UpdateChainOraclesProposal) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UpdateChainOraclesProposal) GetOracles() []string {
	if x != nil {
		return x.Oracles
	}
	return nil
}

func (x *UpdateChainOraclesProposal) GetChainName() string {
	if x != nil {
		return x.ChainName
	}
	return ""
}

// Deprecated: after block 5713000
type MsgSetOrchestratorAddress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OracleAddress   string        `protobuf:"bytes,1,opt,name=oracle_address,json=oracleAddress,proto3" json:"oracle_address,omitempty"`
	BridgerAddress  string        `protobuf:"bytes,2,opt,name=bridger_address,json=bridgerAddress,proto3" json:"bridger_address,omitempty"`
	ExternalAddress string        `protobuf:"bytes,3,opt,name=external_address,json=externalAddress,proto3" json:"external_address,omitempty"`
	Deposit         *v1beta1.Coin `protobuf:"bytes,4,opt,name=deposit,proto3" json:"deposit,omitempty"`
	ChainName       string        `protobuf:"bytes,5,opt,name=chain_name,json=chainName,proto3" json:"chain_name,omitempty"`
}

func (x *MsgSetOrchestratorAddress) Reset() {
	*x = MsgSetOrchestratorAddress{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fx_gravity_crosschain_v1_crosschain_legacy_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgSetOrchestratorAddress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgSetOrchestratorAddress) ProtoMessage() {}

// Deprecated: Use MsgSetOrchestratorAddress.ProtoReflect.Descriptor instead.
func (*MsgSetOrchestratorAddress) Descriptor() ([]byte, []int) {
	return file_fx_gravity_crosschain_v1_crosschain_legacy_proto_rawDescGZIP(), []int{3}
}

func (x *MsgSetOrchestratorAddress) GetOracleAddress() string {
	if x != nil {
		return x.OracleAddress
	}
	return ""
}

func (x *MsgSetOrchestratorAddress) GetBridgerAddress() string {
	if x != nil {
		return x.BridgerAddress
	}
	return ""
}

func (x *MsgSetOrchestratorAddress) GetExternalAddress() string {
	if x != nil {
		return x.ExternalAddress
	}
	return ""
}

func (x *MsgSetOrchestratorAddress) GetDeposit() *v1beta1.Coin {
	if x != nil {
		return x.Deposit
	}
	return nil
}

func (x *MsgSetOrchestratorAddress) GetChainName() string {
	if x != nil {
		return x.ChainName
	}
	return ""
}

// Deprecated: after block 5713000
type MsgAddOracleDeposit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OracleAddress string        `protobuf:"bytes,1,opt,name=oracle_address,json=oracleAddress,proto3" json:"oracle_address,omitempty"`
	Amount        *v1beta1.Coin `protobuf:"bytes,2,opt,name=amount,proto3" json:"amount,omitempty"`
	ChainName     string        `protobuf:"bytes,3,opt,name=chain_name,json=chainName,proto3" json:"chain_name,omitempty"`
}

func (x *MsgAddOracleDeposit) Reset() {
	*x = MsgAddOracleDeposit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fx_gravity_crosschain_v1_crosschain_legacy_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgAddOracleDeposit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgAddOracleDeposit) ProtoMessage() {}

// Deprecated: Use MsgAddOracleDeposit.ProtoReflect.Descriptor instead.
func (*MsgAddOracleDeposit) Descriptor() ([]byte, []int) {
	return file_fx_gravity_crosschain_v1_crosschain_legacy_proto_rawDescGZIP(), []int{4}
}

func (x *MsgAddOracleDeposit) GetOracleAddress() string {
	if x != nil {
		return x.OracleAddress
	}
	return ""
}

func (x *MsgAddOracleDeposit) GetAmount() *v1beta1.Coin {
	if x != nil {
		return x.Amount
	}
	return nil
}

func (x *MsgAddOracleDeposit) GetChainName() string {
	if x != nil {
		return x.ChainName
	}
	return ""
}

// Deprecated: Do not use.
type MsgCancelSendToExternal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransactionId uint64 `protobuf:"varint,1,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	Sender        string `protobuf:"bytes,2,opt,name=sender,proto3" json:"sender,omitempty"`
	ChainName     string `protobuf:"bytes,3,opt,name=chain_name,json=chainName,proto3" json:"chain_name,omitempty"`
}

func (x *MsgCancelSendToExternal) Reset() {
	*x = MsgCancelSendToExternal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fx_gravity_crosschain_v1_crosschain_legacy_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgCancelSendToExternal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgCancelSendToExternal) ProtoMessage() {}

// Deprecated: Use MsgCancelSendToExternal.ProtoReflect.Descriptor instead.
func (*MsgCancelSendToExternal) Descriptor() ([]byte, []int) {
	return file_fx_gravity_crosschain_v1_crosschain_legacy_proto_rawDescGZIP(), []int{5}
}

func (x *MsgCancelSendToExternal) GetTransactionId() uint64 {
	if x != nil {
		return x.TransactionId
	}
	return 0
}

func (x *MsgCancelSendToExternal) GetSender() string {
	if x != nil {
		return x.Sender
	}
	return ""
}

func (x *MsgCancelSendToExternal) GetChainName() string {
	if x != nil {
		return x.ChainName
	}
	return ""
}

// Deprecated: Do not use.
type MsgRequestBatch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sender     string `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	Denom      string `protobuf:"bytes,2,opt,name=denom,proto3" json:"denom,omitempty"`
	MinimumFee string `protobuf:"bytes,3,opt,name=minimum_fee,json=minimumFee,proto3" json:"minimum_fee,omitempty"`
	FeeReceive string `protobuf:"bytes,4,opt,name=fee_receive,json=feeReceive,proto3" json:"fee_receive,omitempty"`
	ChainName  string `protobuf:"bytes,5,opt,name=chain_name,json=chainName,proto3" json:"chain_name,omitempty"`
	BaseFee    string `protobuf:"bytes,6,opt,name=base_fee,json=baseFee,proto3" json:"base_fee,omitempty"`
}

func (x *MsgRequestBatch) Reset() {
	*x = MsgRequestBatch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fx_gravity_crosschain_v1_crosschain_legacy_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgRequestBatch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgRequestBatch) ProtoMessage() {}

// Deprecated: Use MsgRequestBatch.ProtoReflect.Descriptor instead.
func (*MsgRequestBatch) Descriptor() ([]byte, []int) {
	return file_fx_gravity_crosschain_v1_crosschain_legacy_proto_rawDescGZIP(), []int{6}
}

func (x *MsgRequestBatch) GetSender() string {
	if x != nil {
		return x.Sender
	}
	return ""
}

func (x *MsgRequestBatch) GetDenom() string {
	if x != nil {
		return x.Denom
	}
	return ""
}

func (x *MsgRequestBatch) GetMinimumFee() string {
	if x != nil {
		return x.MinimumFee
	}
	return ""
}

func (x *MsgRequestBatch) GetFeeReceive() string {
	if x != nil {
		return x.FeeReceive
	}
	return ""
}

func (x *MsgRequestBatch) GetChainName() string {
	if x != nil {
		return x.ChainName
	}
	return ""
}

func (x *MsgRequestBatch) GetBaseFee() string {
	if x != nil {
		return x.BaseFee
	}
	return ""
}

// Deprecated: Do not use.
type MsgIncreaseBridgeFee struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChainName     string        `protobuf:"bytes,1,opt,name=chain_name,json=chainName,proto3" json:"chain_name,omitempty"`
	TransactionId uint64        `protobuf:"varint,2,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	Sender        string        `protobuf:"bytes,3,opt,name=sender,proto3" json:"sender,omitempty"`
	AddBridgeFee  *v1beta1.Coin `protobuf:"bytes,4,opt,name=add_bridge_fee,json=addBridgeFee,proto3" json:"add_bridge_fee,omitempty"`
}

func (x *MsgIncreaseBridgeFee) Reset() {
	*x = MsgIncreaseBridgeFee{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fx_gravity_crosschain_v1_crosschain_legacy_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgIncreaseBridgeFee) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgIncreaseBridgeFee) ProtoMessage() {}

// Deprecated: Use MsgIncreaseBridgeFee.ProtoReflect.Descriptor instead.
func (*MsgIncreaseBridgeFee) Descriptor() ([]byte, []int) {
	return file_fx_gravity_crosschain_v1_crosschain_legacy_proto_rawDescGZIP(), []int{7}
}

func (x *MsgIncreaseBridgeFee) GetChainName() string {
	if x != nil {
		return x.ChainName
	}
	return ""
}

func (x *MsgIncreaseBridgeFee) GetTransactionId() uint64 {
	if x != nil {
		return x.TransactionId
	}
	return 0
}

func (x *MsgIncreaseBridgeFee) GetSender() string {
	if x != nil {
		return x.Sender
	}
	return ""
}

func (x *MsgIncreaseBridgeFee) GetAddBridgeFee() *v1beta1.Coin {
	if x != nil {
		return x.AddBridgeFee
	}
	return nil
}

var File_fx_gravity_crosschain_v1_crosschain_legacy_proto protoreflect.FileDescriptor

var file_fx_gravity_crosschain_v1_crosschain_legacy_proto_rawDesc = []byte{
	0x0a, 0x30, 0x66, 0x78, 0x2f, 0x67, 0x72, 0x61, 0x76, 0x69, 0x74, 0x79, 0x2f, 0x63, 0x72, 0x6f,
	0x73, 0x73, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x72, 0x6f, 0x73, 0x73,
	0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x6c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x18, 0x66, 0x78, 0x2e, 0x67, 0x72, 0x61, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x63,
	0x72, 0x6f, 0x73, 0x73, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x1a, 0x14, 0x67, 0x6f,
	0x67, 0x6f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x67, 0x6f, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1e, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x2f,
	0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2f, 0x63, 0x6f, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x17, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2f, 0x6d, 0x73, 0x67, 0x2f, 0x76,
	0x31, 0x2f, 0x6d, 0x73, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x63, 0x6f, 0x73,
	0x6d, 0x6f, 0x73, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x61, 0x6d, 0x69, 0x6e, 0x6f, 0x2f, 0x61, 0x6d,
	0x69, 0x6e, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc1, 0x01, 0x0a, 0x1c, 0x49, 0x6e,
	0x69, 0x74, 0x43, 0x72, 0x6f, 0x73, 0x73, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x3c, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x24, 0x2e, 0x66, 0x78, 0x2e, 0x67, 0x72, 0x61, 0x76, 0x69, 0x74, 0x79, 0x2e,
	0x63, 0x72, 0x6f, 0x73, 0x73, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x6f,
	0x72, 0x6b, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x3a,
	0x0c, 0x88, 0xa0, 0x1f, 0x00, 0x98, 0xa0, 0x1f, 0x00, 0xe8, 0xa0, 0x1f, 0x00, 0x22, 0xa3, 0x07,
	0x0a, 0x0a, 0x46, 0x6f, 0x72, 0x6b, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x1d, 0x0a, 0x0a,
	0x67, 0x72, 0x61, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x67, 0x72, 0x61, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x12, 0x61,
	0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x61, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x34, 0x0a, 0x16, 0x65, 0x78, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x62, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x6f, 0x75, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x14, 0x65, 0x78, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x42, 0x61, 0x74, 0x63, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12,
	0x3d, 0x0a, 0x1b, 0x61, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x65, 0x78, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x18, 0x61, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x45, 0x78, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x23,
	0x0a, 0x0d, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x5f, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x57, 0x69, 0x6e,
	0x64, 0x6f, 0x77, 0x12, 0x58, 0x0a, 0x0e, 0x73, 0x6c, 0x61, 0x73, 0x68, 0x5f, 0x66, 0x72, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x31, 0xc8, 0xde, 0x1f,
	0x00, 0xda, 0xde, 0x1f, 0x1b, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x73, 0x64, 0x6b, 0x2e, 0x69,
	0x6f, 0x2f, 0x6d, 0x61, 0x74, 0x68, 0x2e, 0x4c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x44, 0x65, 0x63,
	0xd2, 0xb4, 0x2d, 0x0a, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x44, 0x65, 0x63, 0x52, 0x0d,
	0x73, 0x6c, 0x61, 0x73, 0x68, 0x46, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x84, 0x01,
	0x0a, 0x26, 0x6f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x5f, 0x73, 0x65, 0x74, 0x5f, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x5f, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x31,
	0xc8, 0xde, 0x1f, 0x00, 0xda, 0xde, 0x1f, 0x1b, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x73, 0x64,
	0x6b, 0x2e, 0x69, 0x6f, 0x2f, 0x6d, 0x61, 0x74, 0x68, 0x2e, 0x4c, 0x65, 0x67, 0x61, 0x63, 0x79,
	0x44, 0x65, 0x63, 0xd2, 0xb4, 0x2d, 0x0a, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x44, 0x65,
	0x63, 0x52, 0x21, 0x6f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x53, 0x65, 0x74, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x65, 0x72,
	0x63, 0x65, 0x6e, 0x74, 0x12, 0x3d, 0x0a, 0x1b, 0x69, 0x62, 0x63, 0x5f, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x66, 0x65, 0x72, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x5f, 0x68, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x18, 0x69, 0x62, 0x63, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x48, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x12, 0x1e, 0x0a, 0x07, 0x6f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x73, 0x18, 0x09,
	0x20, 0x03, 0x28, 0x09, 0x42, 0x04, 0xc8, 0xde, 0x1f, 0x01, 0x52, 0x07, 0x6f, 0x72, 0x61, 0x63,
	0x6c, 0x65, 0x73, 0x12, 0x4e, 0x0a, 0x12, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x5f,
	0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x76, 0x31,
	0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x42, 0x04, 0xc8, 0xde, 0x1f, 0x00,
	0x52, 0x11, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68,
	0x6f, 0x6c, 0x64, 0x12, 0x2b, 0x0a, 0x11, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x5f,
	0x6d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10,
	0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65,
	0x12, 0x2e, 0x0a, 0x13, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x04, 0x52, 0x11, 0x62,
	0x72, 0x69, 0x64, 0x67, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74,
	0x12, 0x38, 0x0a, 0x19, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x5f,
	0x6d, 0x61, 0x78, 0x5f, 0x67, 0x61, 0x73, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x15, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x4d,
	0x61, 0x78, 0x47, 0x61, 0x73, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x44, 0x0a, 0x1f, 0x65, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x5f, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x6f, 0x5f, 0x65, 0x78, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x1b, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x65, 0x6e, 0x64, 0x54,
	0x6f, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67,
	0x12, 0x3b, 0x0a, 0x1a, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x62, 0x72, 0x69, 0x64, 0x67,
	0x65, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x17, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x42, 0x72, 0x69, 0x64,
	0x67, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x3a, 0x04, 0x80,
	0xdc, 0x20, 0x00, 0x22, 0x9d, 0x01, 0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x68,
	0x61, 0x69, 0x6e, 0x4f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x73, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73,
	0x61, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x72,
	0x61, 0x63, 0x6c, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x61,
	0x63, 0x6c, 0x65, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x4e,
	0x61, 0x6d, 0x65, 0x3a, 0x0e, 0x18, 0x01, 0x88, 0xa0, 0x1f, 0x00, 0x98, 0xa0, 0x1f, 0x00, 0xe8,
	0xa0, 0x1f, 0x00, 0x22, 0xae, 0x02, 0x0a, 0x19, 0x4d, 0x73, 0x67, 0x53, 0x65, 0x74, 0x4f, 0x72,
	0x63, 0x68, 0x65, 0x73, 0x74, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x25, 0x0a, 0x0e, 0x6f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x5f, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6f, 0x72, 0x61, 0x63, 0x6c,
	0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x62, 0x72, 0x69, 0x64,
	0x67, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x29, 0x0a, 0x10, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x65, 0x78, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x39, 0x0a, 0x07,
	0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65,
	0x74, 0x61, 0x31, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x42, 0x04, 0xc8, 0xde, 0x1f, 0x00, 0x52, 0x07,
	0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x69, 0x6e,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61,
	0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x3a, 0x3c, 0x82, 0xe7, 0xb0, 0x2a, 0x0e, 0x6f, 0x72, 0x61,
	0x63, 0x6c, 0x65, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x8a, 0xe7, 0xb0, 0x2a, 0x24,
	0x63, 0x72, 0x6f, 0x73, 0x73, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2f, 0x4d, 0x73, 0x67, 0x53, 0x65,
	0x74, 0x4f, 0x72, 0x63, 0x68, 0x65, 0x73, 0x74, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x22, 0xcc, 0x01, 0x0a, 0x13, 0x4d, 0x73, 0x67, 0x41, 0x64, 0x64, 0x4f,
	0x72, 0x61, 0x63, 0x6c, 0x65, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x12, 0x25, 0x0a, 0x0e,
	0x6f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x37, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x62, 0x61, 0x73,
	0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x42, 0x04,
	0xc8, 0xde, 0x1f, 0x00, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x3a, 0x36, 0x82, 0xe7, 0xb0,
	0x2a, 0x0e, 0x6f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x8a, 0xe7, 0xb0, 0x2a, 0x1e, 0x63, 0x72, 0x6f, 0x73, 0x73, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2f,
	0x4d, 0x73, 0x67, 0x41, 0x64, 0x64, 0x4f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x44, 0x65, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x22, 0xad, 0x01, 0x0a, 0x17, 0x4d, 0x73, 0x67, 0x43, 0x61, 0x6e, 0x63, 0x65,
	0x6c, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x6f, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x12,
	0x25, 0x0a, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x1d,
	0x0a, 0x0a, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x3a, 0x34, 0x18,
	0x01, 0x82, 0xe7, 0xb0, 0x2a, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x8a, 0xe7, 0xb0, 0x2a,
	0x22, 0x63, 0x72, 0x6f, 0x73, 0x73, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2f, 0x4d, 0x73, 0x67, 0x43,
	0x61, 0x6e, 0x63, 0x65, 0x6c, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x6f, 0x45, 0x78, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x22, 0xc3, 0x02, 0x0a, 0x0f, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x42, 0x61, 0x74, 0x63, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12,
	0x14, 0x0a, 0x05, 0x64, 0x65, 0x6e, 0x6f, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x64, 0x65, 0x6e, 0x6f, 0x6d, 0x12, 0x4c, 0x0a, 0x0b, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d,
	0x5f, 0x66, 0x65, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x2b, 0xc8, 0xde, 0x1f, 0x00,
	0xda, 0xde, 0x1f, 0x15, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x73, 0x64, 0x6b, 0x2e, 0x69, 0x6f,
	0x2f, 0x6d, 0x61, 0x74, 0x68, 0x2e, 0x49, 0x6e, 0x74, 0xd2, 0xb4, 0x2d, 0x0a, 0x63, 0x6f, 0x73,
	0x6d, 0x6f, 0x73, 0x2e, 0x49, 0x6e, 0x74, 0x52, 0x0a, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d,
	0x46, 0x65, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x65, 0x65, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x65, 0x65, 0x52, 0x65, 0x63,
	0x65, 0x69, 0x76, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x46, 0x0a, 0x08, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x66, 0x65, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x2b, 0xc8, 0xde, 0x1f, 0x00, 0xda, 0xde, 0x1f, 0x15, 0x63,
	0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x73, 0x64, 0x6b, 0x2e, 0x69, 0x6f, 0x2f, 0x6d, 0x61, 0x74, 0x68,
	0x2e, 0x49, 0x6e, 0x74, 0xd2, 0xb4, 0x2d, 0x0a, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x49,
	0x6e, 0x74, 0x52, 0x07, 0x62, 0x61, 0x73, 0x65, 0x46, 0x65, 0x65, 0x3a, 0x2c, 0x18, 0x01, 0x82,
	0xe7, 0xb0, 0x2a, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x8a, 0xe7, 0xb0, 0x2a, 0x1a, 0x63,
	0x72, 0x6f, 0x73, 0x73, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2f, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x42, 0x61, 0x74, 0x63, 0x68, 0x22, 0xee, 0x01, 0x0a, 0x14, 0x4d, 0x73,
	0x67, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x61, 0x73, 0x65, 0x42, 0x72, 0x69, 0x64, 0x67, 0x65, 0x46,
	0x65, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x12, 0x45, 0x0a, 0x0e, 0x61, 0x64, 0x64, 0x5f, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x5f, 0x66,
	0x65, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x6f,
	0x73, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x43,
	0x6f, 0x69, 0x6e, 0x42, 0x04, 0xc8, 0xde, 0x1f, 0x00, 0x52, 0x0c, 0x61, 0x64, 0x64, 0x42, 0x72,
	0x69, 0x64, 0x67, 0x65, 0x46, 0x65, 0x65, 0x3a, 0x31, 0x18, 0x01, 0x82, 0xe7, 0xb0, 0x2a, 0x06,
	0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x8a, 0xe7, 0xb0, 0x2a, 0x1f, 0x63, 0x72, 0x6f, 0x73, 0x73,
	0x63, 0x68, 0x61, 0x69, 0x6e, 0x2f, 0x4d, 0x73, 0x67, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x61, 0x73,
	0x65, 0x42, 0x72, 0x69, 0x64, 0x67, 0x65, 0x46, 0x65, 0x65, 0x42, 0x81, 0x02, 0x0a, 0x1c, 0x63,
	0x6f, 0x6d, 0x2e, 0x66, 0x78, 0x2e, 0x67, 0x72, 0x61, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x63, 0x72,
	0x6f, 0x73, 0x73, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x42, 0x15, 0x43, 0x72, 0x6f,
	0x73, 0x73, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x4c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x50, 0x01, 0x5a, 0x47, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x70, 0x75, 0x6e, 0x64, 0x69, 0x61, 0x69, 0x2f, 0x66, 0x78, 0x2d, 0x63, 0x6f, 0x72, 0x65,
	0x2f, 0x76, 0x38, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x66, 0x78, 0x2f, 0x67, 0x72, 0x61, 0x76, 0x69,
	0x74, 0x79, 0x2f, 0x63, 0x72, 0x6f, 0x73, 0x73, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2f, 0x76, 0x31,
	0x3b, 0x63, 0x72, 0x6f, 0x73, 0x73, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x76, 0x31, 0xa2, 0x02, 0x03,
	0x46, 0x47, 0x43, 0xaa, 0x02, 0x18, 0x46, 0x78, 0x2e, 0x47, 0x72, 0x61, 0x76, 0x69, 0x74, 0x79,
	0x2e, 0x43, 0x72, 0x6f, 0x73, 0x73, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x56, 0x31, 0xca, 0x02,
	0x18, 0x46, 0x78, 0x5c, 0x47, 0x72, 0x61, 0x76, 0x69, 0x74, 0x79, 0x5c, 0x43, 0x72, 0x6f, 0x73,
	0x73, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x24, 0x46, 0x78, 0x5c, 0x47,
	0x72, 0x61, 0x76, 0x69, 0x74, 0x79, 0x5c, 0x43, 0x72, 0x6f, 0x73, 0x73, 0x63, 0x68, 0x61, 0x69,
	0x6e, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0xea, 0x02, 0x1b, 0x46, 0x78, 0x3a, 0x3a, 0x47, 0x72, 0x61, 0x76, 0x69, 0x74, 0x79, 0x3a, 0x3a,
	0x43, 0x72, 0x6f, 0x73, 0x73, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_fx_gravity_crosschain_v1_crosschain_legacy_proto_rawDescOnce sync.Once
	file_fx_gravity_crosschain_v1_crosschain_legacy_proto_rawDescData = file_fx_gravity_crosschain_v1_crosschain_legacy_proto_rawDesc
)

func file_fx_gravity_crosschain_v1_crosschain_legacy_proto_rawDescGZIP() []byte {
	file_fx_gravity_crosschain_v1_crosschain_legacy_proto_rawDescOnce.Do(func() {
		file_fx_gravity_crosschain_v1_crosschain_legacy_proto_rawDescData = protoimpl.X.CompressGZIP(file_fx_gravity_crosschain_v1_crosschain_legacy_proto_rawDescData)
	})
	return file_fx_gravity_crosschain_v1_crosschain_legacy_proto_rawDescData
}

var file_fx_gravity_crosschain_v1_crosschain_legacy_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_fx_gravity_crosschain_v1_crosschain_legacy_proto_goTypes = []interface{}{
	(*InitCrossChainParamsProposal)(nil), // 0: fx.gravity.crosschain.v1.InitCrossChainParamsProposal
	(*ForkParams)(nil),                   // 1: fx.gravity.crosschain.v1.ForkParams
	(*UpdateChainOraclesProposal)(nil),   // 2: fx.gravity.crosschain.v1.UpdateChainOraclesProposal
	(*MsgSetOrchestratorAddress)(nil),    // 3: fx.gravity.crosschain.v1.MsgSetOrchestratorAddress
	(*MsgAddOracleDeposit)(nil),          // 4: fx.gravity.crosschain.v1.MsgAddOracleDeposit
	(*MsgCancelSendToExternal)(nil),      // 5: fx.gravity.crosschain.v1.MsgCancelSendToExternal
	(*MsgRequestBatch)(nil),              // 6: fx.gravity.crosschain.v1.MsgRequestBatch
	(*MsgIncreaseBridgeFee)(nil),         // 7: fx.gravity.crosschain.v1.MsgIncreaseBridgeFee
	(*v1beta1.Coin)(nil),                 // 8: cosmos.base.v1beta1.Coin
}
var file_fx_gravity_crosschain_v1_crosschain_legacy_proto_depIdxs = []int32{
	1, // 0: fx.gravity.crosschain.v1.InitCrossChainParamsProposal.params:type_name -> fx.gravity.crosschain.v1.ForkParams
	8, // 1: fx.gravity.crosschain.v1.ForkParams.delegate_threshold:type_name -> cosmos.base.v1beta1.Coin
	8, // 2: fx.gravity.crosschain.v1.MsgSetOrchestratorAddress.deposit:type_name -> cosmos.base.v1beta1.Coin
	8, // 3: fx.gravity.crosschain.v1.MsgAddOracleDeposit.amount:type_name -> cosmos.base.v1beta1.Coin
	8, // 4: fx.gravity.crosschain.v1.MsgIncreaseBridgeFee.add_bridge_fee:type_name -> cosmos.base.v1beta1.Coin
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_fx_gravity_crosschain_v1_crosschain_legacy_proto_init() }
func file_fx_gravity_crosschain_v1_crosschain_legacy_proto_init() {
	if File_fx_gravity_crosschain_v1_crosschain_legacy_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_fx_gravity_crosschain_v1_crosschain_legacy_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InitCrossChainParamsProposal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fx_gravity_crosschain_v1_crosschain_legacy_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ForkParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fx_gravity_crosschain_v1_crosschain_legacy_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateChainOraclesProposal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fx_gravity_crosschain_v1_crosschain_legacy_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgSetOrchestratorAddress); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fx_gravity_crosschain_v1_crosschain_legacy_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgAddOracleDeposit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fx_gravity_crosschain_v1_crosschain_legacy_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgCancelSendToExternal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fx_gravity_crosschain_v1_crosschain_legacy_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgRequestBatch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fx_gravity_crosschain_v1_crosschain_legacy_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgIncreaseBridgeFee); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_fx_gravity_crosschain_v1_crosschain_legacy_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_fx_gravity_crosschain_v1_crosschain_legacy_proto_goTypes,
		DependencyIndexes: file_fx_gravity_crosschain_v1_crosschain_legacy_proto_depIdxs,
		MessageInfos:      file_fx_gravity_crosschain_v1_crosschain_legacy_proto_msgTypes,
	}.Build()
	File_fx_gravity_crosschain_v1_crosschain_legacy_proto = out.File
	file_fx_gravity_crosschain_v1_crosschain_legacy_proto_rawDesc = nil
	file_fx_gravity_crosschain_v1_crosschain_legacy_proto_goTypes = nil
	file_fx_gravity_crosschain_v1_crosschain_legacy_proto_depIdxs = nil
}
